/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _DB_H_RPCGEN
#define	_DB_H_RPCGEN

#ifdef _NETWARE_NLM
#include <rpc\newnames.h>
#endif

#include <rpc\rpc.h>

#ifdef __cplusplus
extern "C" {
#endif

#include "unidbdef.h"


struct _UNIASDBOpenDB_Result {
	u_long Status;
	u_long ulHnd;
	u_long Reserved;
};
typedef struct _UNIASDBOpenDB_Result _UNIASDBOpenDB_Result;

typedef _UNIASDBOpenDB_Result UNIASDBOpenDB_Result;

typedef UNIASDBOpenDB_Result *pUNIASDBOpenDB_Result;

struct _UNIASDBGeneric_Result {
	u_long Status;
	u_long Reserved;
};
typedef struct _UNIASDBGeneric_Result _UNIASDBGeneric_Result;

typedef _UNIASDBGeneric_Result UNIASDBGeneric_Result;

typedef UNIASDBGeneric_Result *pUNIASDBGeneric_Result;

struct _UNIASDBGetNumberOfRecordsInDB_Result {
	u_long Status;
	u_long ulNumRecords;
	u_long Reserved;
};
typedef struct _UNIASDBGetNumberOfRecordsInDB_Result _UNIASDBGetNumberOfRecordsInDB_Result;

typedef _UNIASDBGetNumberOfRecordsInDB_Result UNIASDBGetNumberOfRecordsInDB_Result;

typedef UNIASDBGetNumberOfRecordsInDB_Result *pUNIASDBGetNumberOfRecordsInDB_Result;

struct _TAPEITEM {
	u_long ID;
	char TapeName[24];
	u_long RandomID;
	u_long SequenceNum;
	char SerialNum[32];
	u_long Reserved;
};
typedef struct _TAPEITEM _TAPEITEM;

typedef _TAPEITEM TAPEITEM;

typedef TAPEITEM *pTAPEITEM;

struct _UNIASDBGetTapeList_Result {
	u_long Status;
	u_long ulNumTapeItems;
	struct {
		u_int pTapeItemList_len;
		TAPEITEM *pTapeItemList_val;
	} pTapeItemList;
	u_long Reserved;
};
typedef struct _UNIASDBGetTapeList_Result _UNIASDBGetTapeList_Result;

typedef _UNIASDBGetTapeList_Result UNIASDBGetTapeList_Result;

typedef UNIASDBGetTapeList_Result *pUNIASDBGetTapeList_Result;

struct _SESSIONITEM {
	char *pszSourceHost;
	char *pszSourcePath;
	u_long ulSessionID;
	u_long ulTapeID;
	u_long ulJobID;
	u_long ulSessionType;
	u_long ulSessionNumber;
	u_long ulSessionMethod;
	u_long ulSessionFlags;
	u_long ulQFABlockNum;
	u_long ulTotalKBBytes;
	u_long ulTotalFiles;
	u_long ulTotalMissedFiles;
	u_long ulStartTime;
	u_long ulEndTime;
	u_long Reserved;
};
typedef struct _SESSIONITEM _SESSIONITEM;

typedef _SESSIONITEM SESSIONITEM;

typedef SESSIONITEM *pSESSIONITEM;

struct _UNIASDBGetSessionList_Result {
	u_long Status;
	u_long ulNumSessionItems;
	struct {
		u_int pSessionItemList_len;
		SESSIONITEM *pSessionItemList_val;
	} pSessionItemList;
	u_long Reserved;
};
typedef struct _UNIASDBGetSessionList_Result _UNIASDBGetSessionList_Result;

typedef _UNIASDBGetSessionList_Result UNIASDBGetSessionList_Result;

typedef UNIASDBGetSessionList_Result *pUNIASDBGetSessionList_Result;

struct _DETAILITEM {
	u_long ulSessionID;
	char *pszPath;
	char *pszName;
	u_long ulFileDate;
	u_long ulFileSize;
	u_long ulQFAChunkNum;
	u_long ulQFAChunkOffset;
	u_long ulDataType;
	u_long ulShortNameID;
	u_long ulLongNameID;
	u_long pszNextLevel;
	u_long Reserved;
};
typedef struct _DETAILITEM _DETAILITEM;

typedef _DETAILITEM DETAILITEM;

typedef DETAILITEM *pDETAILITEM;

struct _UNIASDBGetDetailList_Result {
	u_long Status;
	u_long ulNumDetailItems;
	struct {
		u_int pDetailItemList_len;
		DETAILITEM *pDetailItemList_val;
	} pDetailItemList;
	u_long Reserved;
};
typedef struct _UNIASDBGetDetailList_Result _UNIASDBGetDetailList_Result;

typedef _UNIASDBGetDetailList_Result UNIASDBGetDetailList_Result;

typedef UNIASDBGetDetailList_Result *pUNIASDBGetDetailList_Result;

struct _UNIVERSIONFILTER {
	u_long ulStartDate;
	u_long ulEndDate;
	u_long ulDataType;
	char *pszHost;
	u_long ulHostID;
	char *pszPath;
	u_long ulPathID;
	char *pszOwner;
	u_long ulOwnerID;
	u_long ulID;
	char *pszPattern;
	u_long ulPatternType;
	u_long ulCaseSensitiveFlag;
	u_long ulIncludeSubDirFlag;
	u_long ulFlag;
	u_long Reserved;
};
typedef struct _UNIVERSIONFILTER _UNIVERSIONFILTER;

typedef _UNIVERSIONFILTER UNIVERSIONFILTER;

typedef UNIVERSIONFILTER *pUNIVERSIONFILTER;

struct _TAPEDATAITEM {
	u_long ulSessionID;
	u_long ulDataType;
	u_long ulDataDate;
	u_long ulDataTime;
	u_long ulDataSize;
	u_long ulDataAttrib;
	u_long ulQFAChunkNum;
	u_long ulQFAChunkOffset;
	u_long ulNameSpace;
	u_long ulShortNameID;
	u_long ulLongNameID;
	u_long Reserved;
};
typedef struct _TAPEDATAITEM _TAPEDATAITEM;

typedef _TAPEDATAITEM TAPEDATAITEM;

typedef TAPEDATAITEM *pTAPEDATAITEM;

struct _UNIASDBGetServerVolumeList_Result {
	u_long Status;
	u_long ulNumItems;
	struct {
		u_int pTapeDataItemList_len;
		TAPEDATAITEM *pTapeDataItemList_val;
	} pTapeDataItemList;
	u_long Reserved;
};
typedef struct _UNIASDBGetServerVolumeList_Result _UNIASDBGetServerVolumeList_Result;

typedef _UNIASDBGetServerVolumeList_Result UNIASDBGetServerVolumeList_Result;

typedef UNIASDBGetServerVolumeList_Result *pUNIASDBGetServerVolumeList_Result;

struct _VERSIONHISTORYITEM {
	u_long ulRestoreFlag;
	u_long ulSessionID;
	u_long ulStartDate;
	u_long ulStartTime;
	u_long ulSessionType;
	u_long ulSessionMethod;
	u_long ulSessionFlags;
	u_long ulHostID;
	u_long ulPathID;
	u_long ulDataDate;
	u_long ulDataTime;
	u_long ulDataSize;
	u_long ulDataSizeHigh;
	u_long ulShortNameID;
	u_long ulLongNameID;
	u_long ulTapeSessionNumber;
	u_long ulQFABlockNum;
	u_long ulQFAChunkNum;
	u_long ulQFAChunkOffset;
	u_long ulTapeID;
	char pszTapeName[24];
	u_long ulTapeSequenceNum;
	u_long ulTapeRandomID;
	char pszTapeSerialNum[32];
	char *pszTapeLocation;
	char *pszJobOwnerName;
	u_long ulJobStatus;
	char pszShortName[13];
	u_long Reserved;
};
typedef struct _VERSIONHISTORYITEM _VERSIONHISTORYITEM;

typedef _VERSIONHISTORYITEM VERSIONHISTORYITEM;

typedef VERSIONHISTORYITEM *pVERSIONHISTORYITEM;

struct _UNIASDBGetVersionHistory_Result {
	u_long Status;
	u_long ulNumItems;
	struct {
		u_int pVersionHistoryItemList_len;
		VERSIONHISTORYITEM *pVersionHistoryItemList_val;
	} pVersionHistoryItemList;
	u_long Reserved;
};
typedef struct _UNIASDBGetVersionHistory_Result _UNIASDBGetVersionHistory_Result;

typedef _UNIASDBGetVersionHistory_Result UNIASDBGetVersionHistory_Result;

typedef UNIASDBGetVersionHistory_Result *pUNIASDBGetVersionHistory_Result;

struct _SESSIONITEMBYID {
	u_long ulSourceHostID;
	u_long ulSourcePathID;
	u_long ulSessionID;
	u_long ulTapeID;
	u_long ulJobID;
	u_long ulSessionType;
	u_long ulSessionNumber;
	u_long ulSessionMethod;
	u_long ulSessionFlags;
	u_long ulQFABlockNum;
	u_long ulTotalKBBytes;
	u_long ulTotalFiles;
	u_long ulTotalMissedFiles;
	u_long ulStartTime;
	u_long ulEndTime;
	u_long Reserved;
};
typedef struct _SESSIONITEMBYID _SESSIONITEMBYID;

typedef _SESSIONITEMBYID SESSIONITEMBYID;

typedef SESSIONITEMBYID *pSESSIONITEMBYID;

struct _UNIASDBGetSessionListByID_Result {
	u_long Status;
	u_long ulNumSessionItems;
	struct {
		u_int pSessionItemListByID_len;
		SESSIONITEMBYID *pSessionItemListByID_val;
	} pSessionItemListByID;
	u_long Reserved;
};
typedef struct _UNIASDBGetSessionListByID_Result _UNIASDBGetSessionListByID_Result;

typedef _UNIASDBGetSessionListByID_Result UNIASDBGetSessionListByID_Result;

typedef UNIASDBGetSessionListByID_Result *pUNIASDBGetSessionListByID_Result;

struct _DETAILITEMBYID {
	u_long ulSessionID;
	u_long ulPathID;
	u_long ulFileDate;
	u_long ulFileSize;
	u_long ulQFAChunkNum;
	u_long ulQFAChunkOffset;
	u_long ulDataType;
	u_long ulShortNameID;
	u_long ulLongNameID;
	u_long ulNextLevelID;
	u_long Reserved;
};
typedef struct _DETAILITEMBYID _DETAILITEMBYID;

typedef _DETAILITEMBYID DETAILITEMBYID;

typedef DETAILITEMBYID *pDETAILITEMBYID;

struct _UNIASDBGetDetailListByID_Result {
	u_long Status;
	u_long ulNumDetailItems;
	struct {
		u_int pDetailItemListByID_len;
		DETAILITEMBYID *pDetailItemListByID_val;
	} pDetailItemListByID;
	u_long Reserved;
};
typedef struct _UNIASDBGetDetailListByID_Result _UNIASDBGetDetailListByID_Result;

typedef _UNIASDBGetDetailListByID_Result UNIASDBGetDetailListByID_Result;

typedef UNIASDBGetDetailListByID_Result *pUNIASDBGetDetailListByID_Result;

struct _UNIASDBGetObjectItem_Result {
	u_long Status;
	char *pObjectItem;
	u_long Reserved;
};
typedef struct _UNIASDBGetObjectItem_Result _UNIASDBGetObjectItem_Result;

typedef _UNIASDBGetObjectItem_Result UNIASDBGetObjectItem_Result;

typedef UNIASDBGetObjectItem_Result *pUNIASDBGetObjectItem_Result;

struct _UNIASDBGetObjectID_Result {
	u_long Status;
	u_long ulObjectID;
	u_long Reserved;
};
typedef struct _UNIASDBGetObjectID_Result _UNIASDBGetObjectID_Result;

typedef _UNIASDBGetObjectID_Result UNIASDBGetObjectID_Result;

typedef UNIASDBGetObjectID_Result *pUNIASDBGetObjectID_Result;

struct _UNIASJOB {
	u_long ulID;
	char OwnerName[50];
	u_long ulStartDate;
	u_long ulStartTime;
	u_long ulEndDate;
	u_long ulEndTime;
	u_long ulStatus;
	u_long ulJobType;
	u_long ulASSetNameID;
	u_long ulTotalMissedNodes;
	u_long ulTotalMissedVolumes;
	u_long ulTotalMissedFiles;
	char Comments[100];
	char Reserved[4];
};
typedef struct _UNIASJOB _UNIASJOB;

typedef _UNIASJOB UNIASJOB;

typedef UNIASJOB *pUNIASJOB;

struct _UNIASDBJobList {
	u_long Status;
	u_long ulNumItems;
	struct {
		u_int pJobItemList_len;
		UNIASJOB *pJobItemList_val;
	} pJobItemList;
	u_long Reserved;
};
typedef struct _UNIASDBJobList _UNIASDBJobList;

typedef _UNIASDBJobList UNIASDBJobList;

typedef UNIASDBJobList *pUNIASDBJobList;

struct _UNIASMEDIA {
	u_long ulID;
	char TapeName[24];
	u_long ulSequenceNum;
	u_long ulRandomID;
	char SerialNum[32];
	u_long ulTapeType;
	u_long ulFormatCode;
	u_long ulMediaType;
	u_long ulDensityCode;
	u_long ulFirstFormatDate;
	u_long ulFirstFormatTime;
	u_long ulLastFormatDate;
	u_long ulLastFormatTime;
	u_long ulLastWriteDate;
	u_long ulLastWriteTime;
	u_long ulExpireDate;
	u_long ulExpirePasses;
	u_long ulOverWritePasses;
	u_long ulCurrentMediaErrors;
	u_long ulCurrentSWErrors;
	u_long ulCurrentSRErrors;
	u_long ulCurrentUsageTime;
	u_long ulCurrentKBWritten;
	u_long ulTotalWritePasses;
	u_long ulTotalReadPasses;
	u_long ulTotalMediaErrors;
	u_long ulTotalSWErrors;
	u_long ulTotalSRErrors;
	u_long ulTotalUsageTime;
	u_long ulTotalKBWritten;
	u_long ulDestroyedDate;
	u_long ulTapePoolID;
	u_long ulDateSent;
	u_long ulTapeStatus;
	u_long ulSaveOrScratchSet;
	u_long ulTapeLocationStatus;
	u_long ulAPBackupFlag;
	u_long ulOffsiteLocationID;
	char Reserved[4];
};
typedef struct _UNIASMEDIA _UNIASMEDIA;

typedef _UNIASMEDIA UNIASMEDIA;

typedef UNIASMEDIA *pUNIASMEDIA;

struct _UNIASDBMediaList {
	u_long Status;
	u_long ulNumItems;
	struct {
		u_int pMediaItemList_len;
		UNIASMEDIA *pMediaItemList_val;
	} pMediaItemList;
	u_long Reserved;
};
typedef struct _UNIASDBMediaList _UNIASDBMediaList;

typedef _UNIASDBMediaList UNIASDBMediaList;

typedef UNIASDBMediaList *pUNIASDBMediaList;

struct _UNIASTPSES {
	u_long ulID;
	u_long ulASJobID;
	u_long ulASTapeID;
	u_long ulASTpDrvID;
	u_long ulSesType;
	u_long ulSesMethod;
	u_long ulSesFlags;
	u_long ulSessionNum;
	u_long ulQFABlockNum;
	u_long ulStartDate;
	u_long ulStartTime;
	u_long ulEndDate;
	u_long ulEndTime;
	u_long ulStatus;
	u_long ulTotalFiles;
	u_long ulTotalKb;
	u_long ulTotalMissedFiles;
	u_long ulASSrcHostID;
	u_long ulASSrcPathID;
	u_long ulASLSrcPathID;
	u_long Reserved;
};
typedef struct _UNIASTPSES _UNIASTPSES;

typedef _UNIASTPSES UNIASTPSES;

typedef UNIASTPSES *pUNIASTPSES;

struct _UNIASDBSessionList {
	u_long Status;
	u_long ulNumItems;
	struct {
		u_int pSessionItemList_len;
		UNIASTPSES *pSessionItemList_val;
	} pSessionItemList;
	u_long Reserved;
};
typedef struct _UNIASDBSessionList _UNIASDBSessionList;

typedef _UNIASDBSessionList UNIASDBSessionList;

typedef UNIASDBSessionList *pUNIASDBSessionList;

struct _UNIASMEDIADEVICE {
	u_long ulID;
	u_long ulDeviceType;
	char VendorName[10];
	char ProductName[18];
	char ProductReVision[8];
	char PrevReVision[8];
	u_long ulCompliance;
	u_long ulBoardNum;
	u_long ulSCSIID;
	u_long ulLogicalUnitNo;
	u_long ulHeadCleanCount;
	u_long ulLastHeadCleanDate;
	u_long ulUsageTime;
	u_long ulBlockSize;
	u_long ulTotalKBWritten;
	u_long ulTotalMediaErrors;
	u_long ulTotalSWErrors;
	u_long ulDestroyedDate;
	char Reserved[4];
};
typedef struct _UNIASMEDIADEVICE _UNIASMEDIADEVICE;

typedef _UNIASMEDIADEVICE UNIASMEDIADEVICE;

typedef UNIASMEDIADEVICE *pUNIASMEDIADEVICE;

struct _UNIASDBMediaDeviceList {
	u_long Status;
	u_long ulNumItems;
	struct {
		u_int pMediaDeviceItemList_len;
		UNIASMEDIADEVICE *pMediaDeviceItemList_val;
	} pMediaDeviceItemList;
	u_long Reserved;
};
typedef struct _UNIASDBMediaDeviceList _UNIASDBMediaDeviceList;

typedef _UNIASDBMediaDeviceList UNIASDBMediaDeviceList;

typedef UNIASDBMediaDeviceList *pUNIASDBMediaDeviceList;

struct _UNIASMEDIAPOOL {
	u_long ulID;
	char TapePoolName[13];
	char APSetName[9];
	u_long ulSaveSetRetention;
	u_long ulMinSaveSetCopies;
	char BaseSerialNumber[32];
	char NextSerialNumber[32];
	char SerialNumberRange[32];
	char Reserved[4];
};
typedef struct _UNIASMEDIAPOOL _UNIASMEDIAPOOL;

typedef _UNIASMEDIAPOOL UNIASMEDIAPOOL;

typedef UNIASMEDIAPOOL *pUNIASMEDIAPOOL;

struct _UNIASDBMediaPoolList {
	u_long Status;
	u_long ulNumItems;
	struct {
		u_int pMediaPoolItemList_len;
		UNIASMEDIAPOOL *pMediaPoolItemList_val;
	} pMediaPoolItemList;
	u_long Reserved;
};
typedef struct _UNIASDBMediaPoolList _UNIASDBMediaPoolList;

typedef _UNIASDBMediaPoolList UNIASDBMediaPoolList;

typedef UNIASDBMediaPoolList *pUNIASDBMediaPoolList;

struct _UNIASMEDIALOCATION {
	u_long ulID;
	char Location[22];
	char LocName[30];
	char AccountNumber[20];
	char LocContactPerson[30];
	char LocPhoneNo[20];
	char LocStreet[50];
	char LocCity[30];
	char LocState[20];
	char LocZipCode[16];
	char LocCountry[30];
	char SenderCompany[30];
	char SenderName[30];
	char SenderPhoneNo[20];
	char SenderStreet[50];
	char SenderCity[30];
	char SenderState[20];
	char SenderZipCode[16];
	char SenderCountry[30];
	char Comment[80];
	char Reserved[4];
};
typedef struct _UNIASMEDIALOCATION _UNIASMEDIALOCATION;

typedef _UNIASMEDIALOCATION UNIASMEDIALOCATION;

typedef UNIASMEDIALOCATION *pUNIASMEDIALOCATION;

struct _UNIASDBMediaLocationList {
	u_long Status;
	u_long ulNumItems;
	struct {
		u_int pMediaLocationItemList_len;
		UNIASMEDIALOCATION *pMediaLocationItemList_val;
	} pMediaLocationItemList;
	u_long Reserved;
};
typedef struct _UNIASDBMediaLocationList _UNIASDBMediaLocationList;

typedef _UNIASDBMediaLocationList UNIASDBMediaLocationList;

typedef UNIASDBMediaLocationList *pUNIASDBMediaLocationList;

struct _UNIASMEDIAERROR {
	u_long ulID;
	u_long ulASTpDrvID;
	u_long ulASTapeID;
	u_long ulSessionNum;
	u_long ulErrorCode;
	u_long ulErrorDate;
	u_long ulErrorTime;
	char SenseInfo[16];
	u_long ulTapeDrvUsageTime;
	u_long ulMediaErrors;
	u_long ulSWErrors;
	u_long ulSRErrors;
	u_long ulTapeUsageTime;
	u_long ulKByteWritten;
	u_long ulOverWritePasses;
	u_long ulUDEPasses;
	u_long ulTotalWritePasses;
	u_long ulTotalReadPasses;
	u_long ulTotalMediaErrors;
	u_long ulTotalSWErrors;
	u_long ulTotalSRErrors;
	u_long ulTotalUsageTime;
	u_long ulTotalKBWritten;
	char Reserved[4];
};
typedef struct _UNIASMEDIAERROR _UNIASMEDIAERROR;

typedef _UNIASMEDIAERROR UNIASMEDIAERROR;

typedef UNIASMEDIAERROR *pUNIASMEDIAERROR;

struct _UNIASDBMediaErrorList {
	u_long Status;
	u_long ulNumItems;
	struct {
		u_int pMediaErrorItemList_len;
		UNIASMEDIAERROR *pMediaErrorItemList_val;
	} pMediaErrorItemList;
	u_long Reserved;
};
typedef struct _UNIASDBMediaErrorList _UNIASDBMediaErrorList;

typedef _UNIASDBMediaErrorList UNIASDBMediaErrorList;

typedef UNIASDBMediaErrorList *pUNIASDBMediaErrorList;

struct _UNIASNODE {
	u_long ulID;
	u_long ulMachineType;
	u_long ulOSType;
	u_long ulNetType;
	char NodeAddress[66];
	char NodeName[66];
	char LoginName[66];
	u_long ulDiagSocket;
	char OSDescription[16];
	char OSVersion[12];
	char HardwareType[16];
	u_long ulShellMajor;
	u_long ulShellMinor;
	u_long ulIPXMajor;
	u_long ulIPXMinor;
	u_long ulSPXMajor;
	u_long ulSPXMinor;
	char LanCard[80];
	char HWSettings[80];
	u_long ulMaxDataSize;
	u_long ulLastModDate;
	u_long ulAgentLoaded;
	char Reserved[4];
};
typedef struct _UNIASNODE _UNIASNODE;

typedef _UNIASNODE UNIASNODE;

typedef UNIASNODE *pUNIASNODE;

struct _UNIASDBNodeList {
	u_long Status;
	u_long ulNumItems;
	struct {
		u_int pNodeItemList_len;
		UNIASNODE *pNodeItemList_val;
	} pNodeItemList;
	u_long Reserved;
};
typedef struct _UNIASDBNodeList _UNIASDBNodeList;

typedef _UNIASDBNodeList UNIASDBNodeList;

typedef UNIASDBNodeList *pUNIASDBNodeList;

struct _UNIASTAPEDETAIL {
	u_long ulASTPSesID;
	u_long ulASHostID;
	u_long ulASPathID;
	u_long ulDataType;
	u_long ulDataDate;
	u_long ulDataTime;
	u_long ulDataAttrib;
	u_long ulDataFileSize;
	u_long ulQFAChunkNumOffset;
	u_long ulNameSpace;
	u_long ulASShortNameID;
	u_long ulASLongNameID;
	u_long ulASOwnerID;
	char Reserved[4];
};
typedef struct _UNIASTAPEDETAIL _UNIASTAPEDETAIL;

typedef _UNIASTAPEDETAIL UNIASTAPEDETAIL;

typedef UNIASTAPEDETAIL *pUNIASTAPEDETAIL;

struct _UNIASDBTapeDetailList {
	u_long Status;
	u_long ulNumItems;
	struct {
		u_int pTapeDetailItemList_len;
		UNIASTAPEDETAIL *pTapeDetailItemList_val;
	} pTapeDetailItemList;
	u_long Reserved;
};
typedef struct _UNIASDBTapeDetailList _UNIASDBTapeDetailList;

typedef _UNIASDBTapeDetailList UNIASDBTapeDetailList;

typedef UNIASDBTapeDetailList *pUNIASDBTapeDetailList;

struct _UNIASOBJECT {
	u_long ulID;
	u_long HashValue;
	char *pObjectItem;
	u_long Reserved[4];
};
typedef struct _UNIASOBJECT _UNIASOBJECT;

typedef _UNIASOBJECT UNIASOBJECT;

typedef UNIASOBJECT *pUNIASOBJECT;

struct _UNIASDBObjectList {
	u_long Status;
	u_long ulNumItems;
	struct {
		u_int pObjectItemList_len;
		UNIASOBJECT *pObjectItemList_val;
	} pObjectItemList;
	u_long Reserved;
};
typedef struct _UNIASDBObjectList _UNIASDBObjectList;

typedef _UNIASDBObjectList UNIASDBObjectList;

typedef UNIASDBObjectList *pUNIASDBObjectList;

struct _UNIASPROFILE {
	u_long ulID;
	char profName[31];
	char profile[32];
	char profDesc[252];
	u_long Reserved[4];
};
typedef struct _UNIASPROFILE _UNIASPROFILE;

typedef _UNIASPROFILE UNIASPROFILE;

typedef UNIASPROFILE *pUNIASPROFILE;

// Oripin: UNICODE_JIS Support kalsa03
struct _UNIASPROFILEW {
	u_long ulID;
	wchar_t profName[31];
	wchar_t profile[32];
	wchar_t profDesc[252];
	u_long Reserved[4];
};
typedef struct _UNIASPROFILEW _UNIASPROFILEW;

typedef _UNIASPROFILEW UNIASPROFILEW;

typedef UNIASPROFILEW *pUNIASPROFILEW;
struct _UNIASDBProfileList {
	u_long Status;
	u_long ulNumItems;
	struct {
		u_int pProfileItemList_len;
		UNIASPROFILE *pProfileItemList_val;
	} pProfileItemList;
	u_long Reserved;
};
typedef struct _UNIASDBProfileList _UNIASDBProfileList;

typedef _UNIASDBProfileList UNIASDBProfileList;

typedef UNIASDBProfileList *pUNIASDBProfileList;

struct _UNIASUSERPROFILE {
	u_long ulProfID;
	u_long ulUserNameID;
	char *pUserName;
	u_long Reserved[4];
};
typedef struct _UNIASUSERPROFILE _UNIASUSERPROFILE;

typedef _UNIASUSERPROFILE UNIASUSERPROFILE;

typedef UNIASUSERPROFILE *pUNIASUSERPROFILE;

struct _UNIASUSERPROFILEW {//kalsa03
	u_long ulProfID;
	u_long ulUserNameID;
	wchar_t *pUserName;
	u_long Reserved[4];
};
typedef struct _UNIASUSERPROFILEW _UNIASUSERPROFILEW;

typedef _UNIASUSERPROFILEW UNIASUSERPROFILEW;

typedef UNIASUSERPROFILEW *pUNIASUSERPROFILEW;//kalsa03
struct _UNIASDBUserProfileList {
	u_long Status;
	u_long ulNumItems;
	struct {
		u_int pUserProfileItemList_len;
		UNIASUSERPROFILE *pUserProfileItemList_val;
	} pUserProfileItemList;
	u_long Reserved;
};
typedef struct _UNIASDBUserProfileList _UNIASDBUserProfileList;

typedef _UNIASDBUserProfileList UNIASDBUserProfileList;

typedef UNIASDBUserProfileList *pUNIASDBUserProfileList;

struct _UNIASGROUPPROFILE {
	u_long ulProfID;
	char GrpOrPoolName[32];
	char GrpNameUse;
	u_long Reserved;
};
typedef struct _UNIASGROUPPROFILE _UNIASGROUPPROFILE;

typedef _UNIASGROUPPROFILE UNIASGROUPPROFILE;

typedef UNIASGROUPPROFILE *pUNIASGROUPPROFILE;

struct _UNIASDBGroupProfileList {
	u_long Status;
	u_long ulNumItems;
	struct {
		u_int pGroupProfileItemList_len;
		UNIASGROUPPROFILE *pGroupProfileItemList_val;
	} pGroupProfileItemList;
	u_long Reserved;
};
typedef struct _UNIASDBGroupProfileList _UNIASDBGroupProfileList;

typedef _UNIASDBGroupProfileList UNIASDBGroupProfileList;

typedef UNIASDBGroupProfileList *pUNIASDBGroupProfileList;

struct _UNIASUSERPREFERENCES {
	u_long ulUserPrefID;
	char Property[252];
	u_long Reserved;
};
typedef struct _UNIASUSERPREFERENCES _UNIASUSERPREFERENCES;

typedef _UNIASUSERPREFERENCES UNIASUSERPREFERENCES;

typedef UNIASUSERPREFERENCES *pUNIASUSERPREFERENCES;

struct _UNIASDBUserPreferencesList {
	u_long Status;
	u_long ulNumItems;
	struct {
		u_int pUserPreferencesItemList_len;
		UNIASUSERPREFERENCES *pUserPreferencesItemList_val;
	} pUserPreferencesItemList;
	u_long Reserved;
};
typedef struct _UNIASDBUserPreferencesList _UNIASDBUserPreferencesList;

typedef _UNIASDBUserPreferencesList UNIASDBUserPreferencesList;

typedef UNIASDBUserPreferencesList *pUNIASDBUserPreferencesList;

struct _UNIASUSERPREFSERVER {
	u_long ulUserPrefID;
	u_long ulServerID;
	char *pServerName;
	u_long Reserved[4];
};
typedef struct _UNIASUSERPREFSERVER _UNIASUSERPREFSERVER;

typedef _UNIASUSERPREFSERVER UNIASUSERPREFSERVER;

typedef UNIASUSERPREFSERVER *pUNIASUSERPREFSERVER;

struct _UNIASDBUserPrefServerList {
	u_long Status;
	u_long ulNumItems;
	struct {
		u_int pUserPrefServerItemList_len;
		UNIASUSERPREFSERVER *pUserPrefServerItemList_val;
	} pUserPrefServerItemList;
	u_long Reserved;
};
typedef struct _UNIASDBUserPrefServerList _UNIASDBUserPrefServerList;

typedef _UNIASDBUserPrefServerList UNIASDBUserPrefServerList;

typedef UNIASDBUserPrefServerList *pUNIASDBUserPrefServerList;

struct _UNIASUSERPASSWORD {
	u_long ulHostUserID;
	u_long ulDestServerID;
	u_long ulDestUserID;
	char *pHostUserName;
	char *pDestServerName;
	char *pDestUserName;
	char destPasswd[50];
	u_long Reserved;
};
typedef struct _UNIASUSERPASSWORD _UNIASUSERPASSWORD;

typedef _UNIASUSERPASSWORD UNIASUSERPASSWORD;

typedef UNIASUSERPASSWORD *pUNIASUSERPASSWORD;

struct _UNIASDBUserPasswordList {
	u_long Status;
	u_long ulNumItems;
	struct {
		u_int pUserPasswordItemList_len;
		UNIASUSERPASSWORD *pUserPasswordItemList_val;
	} pUserPasswordItemList;
	u_long Reserved;
};
typedef struct _UNIASDBUserPasswordList _UNIASDBUserPasswordList;

typedef _UNIASDBUserPasswordList UNIASDBUserPasswordList;

typedef UNIASDBUserPasswordList *pUNIASDBUserPasswordList;

struct _UNIASDBRecordUnionType {
	int RecordType;
	union {
		UNIASDBJobList UniASDBJobList;
		UNIASDBMediaList UniASDBMediaList;
		UNIASDBSessionList UniASDBSessionList;
		UNIASDBMediaDeviceList UniASDBMediaDeviceList;
		UNIASDBMediaPoolList UniASDBMediaPoolList;
		UNIASDBMediaLocationList UniASDBMediaLocationList;
		UNIASDBMediaErrorList UniASDBMediaErrorList;
		UNIASDBNodeList UniASDBNodeList;
		UNIASDBTapeDetailList UniASDBTapeDetailList;
		UNIASDBObjectList UniASDBObjectList;
		UNIASDBProfileList UniASDBProfileList;
		UNIASDBUserProfileList UniASDBUserProfileList;
		UNIASDBGroupProfileList UniASDBGroupProfileList;
		UNIASDBUserPreferencesList UniASDBUserPreferencesList;
		UNIASDBUserPrefServerList UniASDBUserPrefServerList;
		UNIASDBUserPasswordList UniASDBUserPasswordList;
	} _UNIASDBRecordUnionType_u;
};
typedef struct _UNIASDBRecordUnionType _UNIASDBRecordUnionType;

typedef _UNIASDBRecordUnionType UNIASDBRecordUnionType;

typedef UNIASDBRecordUnionType *pUNIASDBRecordUnionType;

struct _UNIASNODEFILTER {
	u_long ulIncExcOSFlag;
	u_long ulOSFlag;
	u_long Reserved;
};
typedef struct _UNIASNODEFILTER _UNIASNODEFILTER;

typedef _UNIASNODEFILTER UNIASNODEFILTER;

typedef UNIASNODEFILTER *pUNIASNODEFILTER;

struct _UNIASOBJECTFILTER {
	u_long ulObjectIDs[500];
	u_long ulNumObjectIDs;
	u_long Reserved[4];
};
typedef struct _UNIASOBJECTFILTER _UNIASOBJECTFILTER;

typedef _UNIASOBJECTFILTER UNIASOBJECTFILTER;

typedef UNIASOBJECTFILTER *pUNIASOBJECTFILTER;

struct _UNIASDBRecordListFilter {
	UNIASNODEFILTER UNIASNodeFilter;
	UNIASOBJECTFILTER UNIASObjectFilter;
};
typedef struct _UNIASDBRecordListFilter _UNIASDBRecordListFilter;

typedef _UNIASDBRecordListFilter UNIASDBRecordListFilter;

typedef UNIASDBRecordListFilter *pUNIASDBRecordListFilter;

struct _DISKSPACEINFOITEM {
	u_long ulTotalDiskSpace;
	u_long ulTotalARCserveDBSpace;
	u_long ulTotalFreeSpace;
	u_long Reserved;
};
typedef struct _DISKSPACEINFOITEM _DISKSPACEINFOITEM;

typedef _DISKSPACEINFOITEM DISKSPACEINFOITEM;

typedef DISKSPACEINFOITEM *pDISKSPACEINFOITEM;

struct _UNIASDBGetDiskSpaceInfo_Result {
	u_long Status;
	u_long ulNumDiskSpaceInfoItems;
	struct {
		u_int pDiskSpaceInfoItemList_len;
		DISKSPACEINFOITEM *pDiskSpaceInfoItemList_val;
	} pDiskSpaceInfoItemList;
	u_long Reserved;
};
typedef struct _UNIASDBGetDiskSpaceInfo_Result _UNIASDBGetDiskSpaceInfo_Result;

typedef _UNIASDBGetDiskSpaceInfo_Result UNIASDBGetDiskSpaceInfo_Result;

typedef UNIASDBGetDiskSpaceInfo_Result *pUNIASDBGetDiskSpaceInfo_Result;

struct _UNIASDBCFG {
	u_long ulAutoPurgeEnable;  // BOOLEAN
	u_long ulAutoPurgeTime; // Start Time
	u_long ulAutoPurgeDMY; // For Future
	u_long ulAutoPurgeThreshold; // Number days
	u_long ulAutoPruneEnable; 
	u_long ulAutoPruneTime;
	u_long ulAutoPruneDMY;
	u_long ulAutoPruneThreshold;
	u_long Reserved;
};
typedef struct _UNIASDBCFG _UNIASDBCFG;

typedef _UNIASDBCFG UNIASDBCFG;

typedef UNIASDBCFG *pUNIASDBCFG;

struct _NETADDRESS {
	char *pszNetAddress;
	u_long Reserved;
};
typedef struct _NETADDRESS _NETADDRESS;

typedef _NETADDRESS NETADDRESS;

typedef NETADDRESS *pNETADDRESS;

struct _UNICLIENTSCFG {
	u_long ulEnable;
	u_long ulStartTime;
	u_long ulEndTime;
	u_long ulNumIncNetAddress;
	struct {
		u_int IncNetAddress_len;
		NETADDRESS *IncNetAddress_val;
	} IncNetAddress;
	u_long ulNumExcNetAddress;
	struct {
		u_int ExcNetAddress_len;
		NETADDRESS *ExcNetAddress_val;
	} ExcNetAddress;
	u_long ulEnableScanWSInfo;
	u_long Reserved;
};
typedef struct _UNICLIENTSCFG _UNICLIENTSCFG;

typedef _UNICLIENTSCFG UNICLIENTSCFG;

typedef UNICLIENTSCFG *pUNICLIENTSCFG;

struct _UNISERVERCFG {
	u_long ulMergeStartTime;
	u_long ulMergeEndTime;
	u_long ulMergeThrottleSpeed;
	u_long ulMergeDetailEnable;
	u_long ulBackupJobBuffer;
	u_long ulCopyJobBuffer;
	u_long ulDeleteDetailEnable;
	u_long ulAutoRepairEnable;
	u_long ulKeyBuildTime;
	u_long ulPostponePurgeFTS;
	u_long ulAPPruneEnable;
	u_long ulAPPruneRetention;
	u_long ulAPPruneThrottle;
	u_long ulDiskSpaceThreshold;
	u_long Reserved;
};
typedef struct _UNISERVERCFG _UNISERVERCFG;

typedef _UNISERVERCFG UNISERVERCFG;

typedef UNISERVERCFG *pUNISERVERCFG;

struct _UNIASDBGetDBConfiguration_Result {
	u_long Status;
	UNIASDBCFG AsdbConfig;
	UNICLIENTSCFG ClientsConfig;
	UNISERVERCFG ServerConfig;
	u_long Reserved;
};
typedef struct _UNIASDBGetDBConfiguration_Result _UNIASDBGetDBConfiguration_Result;

typedef _UNIASDBGetDBConfiguration_Result UNIASDBGetDBConfiguration_Result;

typedef UNIASDBGetDBConfiguration_Result *pUNIASDBGetDBConfiguration_Result;

struct _UNITAPESERVERCFG {
	u_long ulDebugMsgsToScreen;
	u_long ulDebugMsgsToFile;
	u_long ulDebugLevel;
	u_long Reserved;
};
typedef struct _UNITAPESERVERCFG _UNITAPESERVERCFG;

typedef _UNITAPESERVERCFG UNITAPESERVERCFG;

typedef UNITAPESERVERCFG *pUNITAPESERVERCFG;

struct _UNISCHEDULERSERVERCFG {
	char *pszProductName;
	u_long ulFileInterleavingProtocol;  // IP/IPX/Automatic - default Automatic
	u_long ulFileInterleavingBufferSize; // 64 - 32769 (in KB) default 128
	u_long ulFullSMS; // BOOLEAN default TRUE
	u_long ulTurnOffMessagesToWS; // For Future
	u_long ulAgentsUse512BytePackets; // BOOLEAN default TRUE
	u_long ulSkipBigFiles; // BOOLEAN (skip large files bigger than 2 GB) default FALSE
	u_long ulOverwriteAnyTape;
	u_long ulDisableFTS; // BOOLEAN default FALSE
	u_long ulFileInterleavingTimeout; // 1-60 (in minutes) default 15
	u_long ulFileInterleavingMaxNodes; // 1-8 default 4
	u_long ulDateTimeFormat; // US/EUROPEAN/ASIAN default US
	u_long ulBinderyEmulation;
	u_long ulPasswordDatabase;
	u_long ulDSSchemaModification;
	u_long ulDisableActivityLog; // BOOLEAN defualt FALSE
	u_long ulMaximumConcurrentJobs; // 1-16 default 16
	u_long ulStatisticsBroadcastFrequency; // 1-100 default 1
	u_long ulCacheBufferThreshold; // 1-100 default 10 (minumum cache buffers required to start jobs %)
	u_long ulActivityLogGroomDays; // 1-366 default 30
	u_long ulChangeScreenOnAlert;
	u_long ulNotifyUserAtEndOfJob; // BOOLEAN default TRUE
	u_long Reserved;
};
typedef struct _UNISCHEDULERSERVERCFG _UNISCHEDULERSERVERCFG;

typedef _UNISCHEDULERSERVERCFG UNISCHEDULERSERVERCFG;

typedef UNISCHEDULERSERVERCFG *pUNISCHEDULERSERVERCFG;

struct _UNIASDBConfigType {
	u_long Status;
	UNIASDBCFG AsdbConfig;
	UNICLIENTSCFG ClientsConfig;
	UNISERVERCFG ServerConfig;
	UNITAPESERVERCFG TapeServerConfig;
	UNISCHEDULERSERVERCFG SchedulerServerConfig;
	u_long Reserved;
};
typedef struct _UNIASDBConfigType _UNIASDBConfigType;

typedef _UNIASDBConfigType UNIASDBConfigType;

typedef UNIASDBConfigType *pUNIASDBConfigType;

struct _UNIASFILE {
	u_long ulFileID;
	char Reserved[4];
};
typedef struct _UNIASFILE _UNIASFILE;

typedef _UNIASFILE UNIASFILE;

typedef UNIASFILE *pUNIASFILE;

struct _UNIASDBGetQueryFileList_Result {
	u_long Status;
	u_long ulNumItems;
	struct {
		u_int pFileItemList_len;
		UNIASFILE *pFileItemList_val;
	} pFileItemList;
	u_long Reserved;
};
typedef struct _UNIASDBGetQueryFileList_Result _UNIASDBGetQueryFileList_Result;

typedef _UNIASDBGetQueryFileList_Result UNIASDBGetQueryFileList_Result;

typedef UNIASDBGetQueryFileList_Result *pUNIASDBGetQueryFileList_Result;

struct _UNIASDBGetWSCountList_Result {
	u_long Status;
	u_long WSCountList[20];
	u_long Reserved;
};
typedef struct _UNIASDBGetWSCountList_Result _UNIASDBGetWSCountList_Result;

typedef _UNIASDBGetWSCountList_Result UNIASDBGetWSCountList_Result;

typedef UNIASDBGetWSCountList_Result *pUNIASDBGetWSCountList_Result;

struct _UNIASDBGetSessAndTapeInfoByID_Result {
	u_long Status;
	UNIASMEDIA ASTape;
	UNIASTPSES ASTpses;
	u_long Reserved;
};
typedef struct _UNIASDBGetSessAndTapeInfoByID_Result _UNIASDBGetSessAndTapeInfoByID_Result;

typedef _UNIASDBGetSessAndTapeInfoByID_Result UNIASDBGetSessAndTapeInfoByID_Result;

typedef UNIASDBGetSessAndTapeInfoByID_Result *pUNIASDBGetSessAndTapeInfoByID_Result;

struct uni_asdbopendb_1_argument {
	char *pszServerName;
	u_long ulDatabaseID;
	u_long lOpenMode;
};
typedef struct uni_asdbopendb_1_argument uni_asdbopendb_1_argument;

struct uni_asdbclosedb_1_argument {
	char *pszServerName;
	u_long ulDatabaseID;
	u_long ulHnd;
};
typedef struct uni_asdbclosedb_1_argument uni_asdbclosedb_1_argument;

struct uni_asdbgetnumberofrecordsindb_1_argument {
	char *pszServerName;
	u_long ulDatabaseID;
};
typedef struct uni_asdbgetnumberofrecordsindb_1_argument uni_asdbgetnumberofrecordsindb_1_argument;

struct uni_asdbgettapelist_1_argument {
	char *pszServerName;
	u_long ulHnd;
	u_long ulInCount;
	u_long ulNumRecsToSkip;
};
typedef struct uni_asdbgettapelist_1_argument uni_asdbgettapelist_1_argument;

struct uni_asdbgetsessionlist_1_argument {
	char *pszServerName;
	u_long ulHnd;
	u_long ulInCount;
	u_long ulNumRecsToSkip;
	u_long ulTapeID;
};
typedef struct uni_asdbgetsessionlist_1_argument uni_asdbgetsessionlist_1_argument;

struct uni_asdbgetdetaillist_1_argument {
	char *pszServerName;
	u_long ulHnd;
	u_long ulInCount;
	u_long ulNumRecsToSkip;
	u_long ulSessionID;
	char *pszPath;
};
typedef struct uni_asdbgetdetaillist_1_argument uni_asdbgetdetaillist_1_argument;

struct uni_asdbgetserverlist_1_argument {
	char *pszServerName;
	u_long ulHnd;
	u_long ulInCount;
	u_long ulNumRecsToSkip;
	UNIVERSIONFILTER VerFilter;
	char *pszHostServer;
	char *pszHostUser;
	char *pszTargetUser;
	u_long ulUserLevelFlag;
};
typedef struct uni_asdbgetserverlist_1_argument uni_asdbgetserverlist_1_argument;

struct uni_asdbgetvolumelist_1_argument {
	char *pszServerName;
	u_long ulHnd;
	u_long ulInCount;
	u_long ulNumRecsToSkip;
	UNIVERSIONFILTER VerFilter;
	char *pszHostServer;
	char *pszHostUser;
	char *pszTargetUser;
	u_long ulUserLevelFlag;
};
typedef struct uni_asdbgetvolumelist_1_argument uni_asdbgetvolumelist_1_argument;

struct uni_asdbgetfilelist_1_argument {
	char *pszServerName;
	u_long ulHnd;
	u_long ulInCount;
	u_long ulNumRecsToSkip;
	UNIVERSIONFILTER VerFilter;
	char *pszHostServer;
	char *pszHostUser;
	char *pszTargetUser;
	u_long ulUserLevelFlag;
};
typedef struct uni_asdbgetfilelist_1_argument uni_asdbgetfilelist_1_argument;

struct uni_asdbgetversionhistory_1_argument {
	char *pszServerName;
	char *pszName;
	char *pszPath;
	char *pszHostServer;
	char *pszHostUser;
	char *pszTargetUser;
	u_long ulUserLevelFlag;
	u_long ulDataType;
};
typedef struct uni_asdbgetversionhistory_1_argument uni_asdbgetversionhistory_1_argument;

struct uni_asdbgetsessionlistbyid_1_argument {
	char *pszServerName;
	u_long ulHnd;
	u_long ulInCount;
	u_long ulNumRecsToSkip;
	u_long ulTapeID;
};
typedef struct uni_asdbgetsessionlistbyid_1_argument uni_asdbgetsessionlistbyid_1_argument;

struct uni_asdbgetdetaillistbyid_1_argument {
	char *pszServerName;
	u_long ulHnd;
	u_long ulInCount;
	u_long ulNumRecsToSkip;
	u_long ulSessionID;
	u_long ulSourcePathID;
};
typedef struct uni_asdbgetdetaillistbyid_1_argument uni_asdbgetdetaillistbyid_1_argument;

struct uni_asdbgetobjectitem_1_argument {
	char *pszServerName;
	u_long ulObjectID;
};
typedef struct uni_asdbgetobjectitem_1_argument uni_asdbgetobjectitem_1_argument;

struct uni_asdbgetobjectid_1_argument {
	char *pszServerName;
	char *pszObjectItem;
};
typedef struct uni_asdbgetobjectid_1_argument uni_asdbgetobjectid_1_argument;

struct uni_asdbgetrecordlist_1_argument {
	char *pszServerName;
	u_long ulHnd;
	u_long ulDatabaseID;
	u_long ulInCount;
	u_long ulNumRecsToSkip;
	UNIASDBRecordListFilter RecordListFilter;
};
typedef struct uni_asdbgetrecordlist_1_argument uni_asdbgetrecordlist_1_argument;

struct uni_asdbupdatedbconfiguration_1_argument {
	char *pszServerName;
	UNIASDBCFG AsdbConfig;
	UNICLIENTSCFG ClientsConfig;
	UNISERVERCFG ServerConfig;
};
typedef struct uni_asdbupdatedbconfiguration_1_argument uni_asdbupdatedbconfiguration_1_argument;

struct uni_asdbupdaterecord_1_argument {
	char *pszServerName;
	u_long ulHnd;
	u_long ulDatabaseID;
	UNIASDBRecordUnionType RecordUnionData;
	u_long ulDataSize;
};
typedef struct uni_asdbupdaterecord_1_argument uni_asdbupdaterecord_1_argument;

struct uni_asdbdeleterecord_1_argument {
	char *pszServerName;
	u_long ulHnd;
	u_long ulDatabaseID;
	UNIASDBRecordUnionType RecordUnionData;
	u_long ulDataSize;
};
typedef struct uni_asdbdeleterecord_1_argument uni_asdbdeleterecord_1_argument;

struct uni_asdbinsertrecord_1_argument {
	char *pszServerName;
	u_long ulHnd;
	u_long ulDatabaseID;
	UNIASDBRecordUnionType RecordUnionData;
	u_long ulDataSize;
};
typedef struct uni_asdbinsertrecord_1_argument uni_asdbinsertrecord_1_argument;

struct uni_asdbgetqueryfilelist_1_argument {
	char *pszServerName;
	u_long ulHnd;
	u_long ulInCount;
	u_long ulNumRecsToSkip;
	UNIVERSIONFILTER VerFilter;
};
typedef struct uni_asdbgetqueryfilelist_1_argument uni_asdbgetqueryfilelist_1_argument;

struct uni_asdbgetquerydatalist_1_argument {
	char *pszServerName;
	u_long ulHnd;
	u_long ulInCount;
	u_long ulNumRecsToSkip;
	UNIVERSIONFILTER VerFilter;
};
typedef struct uni_asdbgetquerydatalist_1_argument uni_asdbgetquerydatalist_1_argument;

struct uni_asdbdoesnodeexist_1_argument {
	char *pszServerName;
	char *pszNodeName;
	char *pszNodeAddress;
	u_long ulOSType;
};
typedef struct uni_asdbdoesnodeexist_1_argument uni_asdbdoesnodeexist_1_argument;

struct uni_asdbgetasconfig_1_argument {
	char *pszServerName;
	u_long ulFilter;
};
typedef struct uni_asdbgetasconfig_1_argument uni_asdbgetasconfig_1_argument;

struct uni_asdbsetasconfig_1_argument {
	char *pszServerName;
	u_long ulFilter;
	UNIASDBConfigType ASConfigData;
};
typedef struct uni_asdbsetasconfig_1_argument uni_asdbsetasconfig_1_argument;

struct uni_asdbgetsessandtapeinfobyid_1_argument {
	char *pszServerName;
	u_long ulSessionID;
};
typedef struct uni_asdbgetsessandtapeinfobyid_1_argument uni_asdbgetsessandtapeinfobyid_1_argument;

#define	UNIDB_SERVERPROG ((unsigned long)(351474))
#define	DBSERVER_VERS_1 ((unsigned long)(1))
#define	UNI_ASDBOpenDB ((unsigned long)(ASUNIRPC_PROC_UNIOpenDB))
extern  enum clnt_stat uni_asdbopendb_1();
extern  bool_t uni_asdbopendb_1_svc();
#define	UNI_ASDBCloseDB ((unsigned long)(ASUNIRPC_PROC_UNICloseDB))
extern  enum clnt_stat uni_asdbclosedb_1();
extern  bool_t uni_asdbclosedb_1_svc();
#define	UNI_ASDBGetNumberOfRecordsInDB ((unsigned long)(ASUNIRPC_PROC_UNIGetNumberOfRecordsInDB))
extern  enum clnt_stat uni_asdbgetnumberofrecordsindb_1();
extern  bool_t uni_asdbgetnumberofrecordsindb_1_svc();
#define	UNI_ASDBGetTapeList ((unsigned long)(ASUNIRPC_PROC_UNIGetTapeList))
extern  enum clnt_stat uni_asdbgettapelist_1();
extern  bool_t uni_asdbgettapelist_1_svc();
#define	UNI_ASDBGetSessionList ((unsigned long)(ASUNIRPC_PROC_UNIGetSessionList))
extern  enum clnt_stat uni_asdbgetsessionlist_1();
extern  bool_t uni_asdbgetsessionlist_1_svc();
#define	UNI_ASDBGetDetailList ((unsigned long)(ASUNIRPC_PROC_UNIGetDetailList))
extern  enum clnt_stat uni_asdbgetdetaillist_1();
extern  bool_t uni_asdbgetdetaillist_1_svc();
#define	UNI_ASDBGetServerList ((unsigned long)(ASUNIRPC_PROC_UNIGetServerList))
extern  enum clnt_stat uni_asdbgetserverlist_1();
extern  bool_t uni_asdbgetserverlist_1_svc();
#define	UNI_ASDBGetVolumeList ((unsigned long)(ASUNIRPC_PROC_UNIGetVolumeList))
extern  enum clnt_stat uni_asdbgetvolumelist_1();
extern  bool_t uni_asdbgetvolumelist_1_svc();
#define	UNI_ASDBGetFileList ((unsigned long)(ASUNIRPC_PROC_UNIGetFileList))
extern  enum clnt_stat uni_asdbgetfilelist_1();
extern  bool_t uni_asdbgetfilelist_1_svc();
#define	UNI_ASDBGetVersionHistory ((unsigned long)(ASUNIRPC_PROC_UNIGetVersionHistory))
extern  enum clnt_stat uni_asdbgetversionhistory_1();
extern  bool_t uni_asdbgetversionhistory_1_svc();
#define	UNI_ASDBGetSessionListByID ((unsigned long)(ASUNIRPC_PROC_UNIGetSessionListByID))
extern  enum clnt_stat uni_asdbgetsessionlistbyid_1();
extern  bool_t uni_asdbgetsessionlistbyid_1_svc();
#define	UNI_ASDBGetDetailListByID ((unsigned long)(ASUNIRPC_PROC_UNIGetDetailListByID))
extern  enum clnt_stat uni_asdbgetdetaillistbyid_1();
extern  bool_t uni_asdbgetdetaillistbyid_1_svc();
#define	UNI_ASDBGetObjectItem ((unsigned long)(ASUNIRPC_PROC_UNIGetObjectItem))
extern  enum clnt_stat uni_asdbgetobjectitem_1();
extern  bool_t uni_asdbgetobjectitem_1_svc();
#define	UNI_ASDBGetObjectID ((unsigned long)(ASUNIRPC_PROC_UNIGetObjectID))
extern  enum clnt_stat uni_asdbgetobjectid_1();
extern  bool_t uni_asdbgetobjectid_1_svc();
#define	UNI_ASDBGetRecordList ((unsigned long)(ASUNIRPC_PROC_UNIGetRecordList))
extern  enum clnt_stat uni_asdbgetrecordlist_1();
extern  bool_t uni_asdbgetrecordlist_1_svc();
#define	UNI_ASDBGetDiskSpaceInfo ((unsigned long)(ASUNIRPC_PROC_UNIGetDiskSpaceInfo))
extern  enum clnt_stat uni_asdbgetdiskspaceinfo_1();
extern  bool_t uni_asdbgetdiskspaceinfo_1_svc();
#define	UNI_ASDBGetDBConfiguration ((unsigned long)(ASUNIRPC_PROC_UNIGetDBConfiguration))
extern  enum clnt_stat uni_asdbgetdbconfiguration_1();
extern  bool_t uni_asdbgetdbconfiguration_1_svc();
#define	UNI_ASDBUpdateDBConfiguration ((unsigned long)(ASUNIRPC_PROC_UNIUpdateDBConfiguration))
extern  enum clnt_stat uni_asdbupdatedbconfiguration_1();
extern  bool_t uni_asdbupdatedbconfiguration_1_svc();
#define	UNI_ASDBUpdateRecord ((unsigned long)(ASUNIRPC_PROC_UNIUpdateRecord))
extern  enum clnt_stat uni_asdbupdaterecord_1();
extern  bool_t uni_asdbupdaterecord_1_svc();
#define	UNI_ASDBDeleteRecord ((unsigned long)(ASUNIRPC_PROC_UNIDeleteRecord))
extern  enum clnt_stat uni_asdbdeleterecord_1();
extern  bool_t uni_asdbdeleterecord_1_svc();
#define	UNI_ASDBInsertRecord ((unsigned long)(ASUNIRPC_PROC_UNIInsertRecord))
extern  enum clnt_stat uni_asdbinsertrecord_1();
extern  bool_t uni_asdbinsertrecord_1_svc();
#define	UNI_ASDBGetQueryFileList ((unsigned long)(ASUNIRPC_PROC_UNIGetQueryFileList))
extern  enum clnt_stat uni_asdbgetqueryfilelist_1();
extern  bool_t uni_asdbgetqueryfilelist_1_svc();
#define	UNI_ASDBGetQueryDataList ((unsigned long)(ASUNIRPC_PROC_UNIGetQueryDataList))
extern  enum clnt_stat uni_asdbgetquerydatalist_1();
extern  bool_t uni_asdbgetquerydatalist_1_svc();
#define	UNI_ASDBGetWSCountList ((unsigned long)(ASUNIRPC_PROC_UNIGetWSCountList))
extern  enum clnt_stat uni_asdbgetwscountlist_1();
extern  bool_t uni_asdbgetwscountlist_1_svc();
#define	UNI_ASDBDoesNodeExist ((unsigned long)(ASUNIRPC_PROC_UNIDoesNodeExist))
extern  enum clnt_stat uni_asdbdoesnodeexist_1();
extern  bool_t uni_asdbdoesnodeexist_1_svc();
#define	UNI_ASDBGetASConfig ((unsigned long)(ASUNIRPC_PROC_UNIGetASConfig))
extern  enum clnt_stat uni_asdbgetasconfig_1();
extern  bool_t uni_asdbgetasconfig_1_svc();
#define	UNI_ASDBSetASConfig ((unsigned long)(ASUNIRPC_PROC_UNISetASConfig))
extern  enum clnt_stat uni_asdbsetasconfig_1();
extern  bool_t uni_asdbsetasconfig_1_svc();
#define	UNI_ASDBGetSessAndTapeInfoByID ((unsigned long)(ASUNIRPC_PROC_UNIGetSessAndTapeInfoByID))
extern  enum clnt_stat uni_asdbgetsessandtapeinfobyid_1();
extern  bool_t uni_asdbgetsessandtapeinfobyid_1_svc();
extern int unidb_serverprog_1_freeresult();

/* the xdr functions */
extern bool_t xdr__UNIASDBOpenDB_Result();
extern bool_t xdr_UNIASDBOpenDB_Result();
extern bool_t xdr_pUNIASDBOpenDB_Result();
extern bool_t xdr__UNIASDBGeneric_Result();
extern bool_t xdr_UNIASDBGeneric_Result();
extern bool_t xdr_pUNIASDBGeneric_Result();
extern bool_t xdr__UNIASDBGetNumberOfRecordsInDB_Result();
extern bool_t xdr_UNIASDBGetNumberOfRecordsInDB_Result();
extern bool_t xdr_pUNIASDBGetNumberOfRecordsInDB_Result();
extern bool_t xdr__TAPEITEM();
extern bool_t xdr_TAPEITEM();
extern bool_t xdr_pTAPEITEM();
extern bool_t xdr__UNIASDBGetTapeList_Result();
extern bool_t xdr_UNIASDBGetTapeList_Result();
extern bool_t xdr_pUNIASDBGetTapeList_Result();
extern bool_t xdr__SESSIONITEM();
extern bool_t xdr_SESSIONITEM();
extern bool_t xdr_pSESSIONITEM();
extern bool_t xdr__UNIASDBGetSessionList_Result();
extern bool_t xdr_UNIASDBGetSessionList_Result();
extern bool_t xdr_pUNIASDBGetSessionList_Result();
extern bool_t xdr__DETAILITEM();
extern bool_t xdr_DETAILITEM();
extern bool_t xdr_pDETAILITEM();
extern bool_t xdr__UNIASDBGetDetailList_Result();
extern bool_t xdr_UNIASDBGetDetailList_Result();
extern bool_t xdr_pUNIASDBGetDetailList_Result();
extern bool_t xdr__UNIVERSIONFILTER();
extern bool_t xdr_UNIVERSIONFILTER();
extern bool_t xdr_pUNIVERSIONFILTER();
extern bool_t xdr__TAPEDATAITEM();
extern bool_t xdr_TAPEDATAITEM();
extern bool_t xdr_pTAPEDATAITEM();
extern bool_t xdr__UNIASDBGetServerVolumeList_Result();
extern bool_t xdr_UNIASDBGetServerVolumeList_Result();
extern bool_t xdr_pUNIASDBGetServerVolumeList_Result();
extern bool_t xdr__VERSIONHISTORYITEM();
extern bool_t xdr_VERSIONHISTORYITEM();
extern bool_t xdr_pVERSIONHISTORYITEM();
extern bool_t xdr__UNIASDBGetVersionHistory_Result();
extern bool_t xdr_UNIASDBGetVersionHistory_Result();
extern bool_t xdr_pUNIASDBGetVersionHistory_Result();
extern bool_t xdr__SESSIONITEMBYID();
extern bool_t xdr_SESSIONITEMBYID();
extern bool_t xdr_pSESSIONITEMBYID();
extern bool_t xdr__UNIASDBGetSessionListByID_Result();
extern bool_t xdr_UNIASDBGetSessionListByID_Result();
extern bool_t xdr_pUNIASDBGetSessionListByID_Result();
extern bool_t xdr__DETAILITEMBYID();
extern bool_t xdr_DETAILITEMBYID();
extern bool_t xdr_pDETAILITEMBYID();
extern bool_t xdr__UNIASDBGetDetailListByID_Result();
extern bool_t xdr_UNIASDBGetDetailListByID_Result();
extern bool_t xdr_pUNIASDBGetDetailListByID_Result();
extern bool_t xdr__UNIASDBGetObjectItem_Result();
extern bool_t xdr_UNIASDBGetObjectItem_Result();
extern bool_t xdr_pUNIASDBGetObjectItem_Result();
extern bool_t xdr__UNIASDBGetObjectID_Result();
extern bool_t xdr_UNIASDBGetObjectID_Result();
extern bool_t xdr_pUNIASDBGetObjectID_Result();
extern bool_t xdr__UNIASJOB();
extern bool_t xdr_UNIASJOB();
extern bool_t xdr_pUNIASJOB();
extern bool_t xdr__UNIASDBJobList();
extern bool_t xdr_UNIASDBJobList();
extern bool_t xdr_pUNIASDBJobList();
extern bool_t xdr__UNIASMEDIA();
extern bool_t xdr_UNIASMEDIA();
extern bool_t xdr_pUNIASMEDIA();
extern bool_t xdr__UNIASDBMediaList();
extern bool_t xdr_UNIASDBMediaList();
extern bool_t xdr_pUNIASDBMediaList();
extern bool_t xdr__UNIASTPSES();
extern bool_t xdr_UNIASTPSES();
extern bool_t xdr_pUNIASTPSES();
extern bool_t xdr__UNIASDBSessionList();
extern bool_t xdr_UNIASDBSessionList();
extern bool_t xdr_pUNIASDBSessionList();
extern bool_t xdr__UNIASMEDIADEVICE();
extern bool_t xdr_UNIASMEDIADEVICE();
extern bool_t xdr_pUNIASMEDIADEVICE();
extern bool_t xdr__UNIASDBMediaDeviceList();
extern bool_t xdr_UNIASDBMediaDeviceList();
extern bool_t xdr_pUNIASDBMediaDeviceList();
extern bool_t xdr__UNIASMEDIAPOOL();
extern bool_t xdr_UNIASMEDIAPOOL();
extern bool_t xdr_pUNIASMEDIAPOOL();
extern bool_t xdr__UNIASDBMediaPoolList();
extern bool_t xdr_UNIASDBMediaPoolList();
extern bool_t xdr_pUNIASDBMediaPoolList();
extern bool_t xdr__UNIASMEDIALOCATION();
extern bool_t xdr_UNIASMEDIALOCATION();
extern bool_t xdr_pUNIASMEDIALOCATION();
extern bool_t xdr__UNIASDBMediaLocationList();
extern bool_t xdr_UNIASDBMediaLocationList();
extern bool_t xdr_pUNIASDBMediaLocationList();
extern bool_t xdr__UNIASMEDIAERROR();
extern bool_t xdr_UNIASMEDIAERROR();
extern bool_t xdr_pUNIASMEDIAERROR();
extern bool_t xdr__UNIASDBMediaErrorList();
extern bool_t xdr_UNIASDBMediaErrorList();
extern bool_t xdr_pUNIASDBMediaErrorList();
extern bool_t xdr__UNIASNODE();
extern bool_t xdr_UNIASNODE();
extern bool_t xdr_pUNIASNODE();
extern bool_t xdr__UNIASDBNodeList();
extern bool_t xdr_UNIASDBNodeList();
extern bool_t xdr_pUNIASDBNodeList();
extern bool_t xdr__UNIASTAPEDETAIL();
extern bool_t xdr_UNIASTAPEDETAIL();
extern bool_t xdr_pUNIASTAPEDETAIL();
extern bool_t xdr__UNIASDBTapeDetailList();
extern bool_t xdr_UNIASDBTapeDetailList();
extern bool_t xdr_pUNIASDBTapeDetailList();
extern bool_t xdr__UNIASOBJECT();
extern bool_t xdr_UNIASOBJECT();
extern bool_t xdr_pUNIASOBJECT();
extern bool_t xdr__UNIASDBObjectList();
extern bool_t xdr_UNIASDBObjectList();
extern bool_t xdr_pUNIASDBObjectList();
extern bool_t xdr__UNIASPROFILE();
extern bool_t xdr_UNIASPROFILE();
extern bool_t xdr_pUNIASPROFILE();
extern bool_t xdr__UNIASDBProfileList();
extern bool_t xdr_UNIASDBProfileList();
extern bool_t xdr_pUNIASDBProfileList();
extern bool_t xdr__UNIASUSERPROFILE();
extern bool_t xdr_UNIASUSERPROFILE();
extern bool_t xdr_pUNIASUSERPROFILE();
extern bool_t xdr__UNIASDBUserProfileList();
extern bool_t xdr_UNIASDBUserProfileList();
extern bool_t xdr_pUNIASDBUserProfileList();
extern bool_t xdr__UNIASGROUPPROFILE();
extern bool_t xdr_UNIASGROUPPROFILE();
extern bool_t xdr_pUNIASGROUPPROFILE();
extern bool_t xdr__UNIASDBGroupProfileList();
extern bool_t xdr_UNIASDBGroupProfileList();
extern bool_t xdr_pUNIASDBGroupProfileList();
extern bool_t xdr__UNIASUSERPREFERENCES();
extern bool_t xdr_UNIASUSERPREFERENCES();
extern bool_t xdr_pUNIASUSERPREFERENCES();
extern bool_t xdr__UNIASDBUserPreferencesList();
extern bool_t xdr_UNIASDBUserPreferencesList();
extern bool_t xdr_pUNIASDBUserPreferencesList();
extern bool_t xdr__UNIASUSERPREFSERVER();
extern bool_t xdr_UNIASUSERPREFSERVER();
extern bool_t xdr_pUNIASUSERPREFSERVER();
extern bool_t xdr__UNIASDBUserPrefServerList();
extern bool_t xdr_UNIASDBUserPrefServerList();
extern bool_t xdr_pUNIASDBUserPrefServerList();
extern bool_t xdr__UNIASUSERPASSWORD();
extern bool_t xdr_UNIASUSERPASSWORD();
extern bool_t xdr_pUNIASUSERPASSWORD();
extern bool_t xdr__UNIASDBUserPasswordList();
extern bool_t xdr_UNIASDBUserPasswordList();
extern bool_t xdr_pUNIASDBUserPasswordList();
extern bool_t xdr__UNIASDBRecordUnionType();
extern bool_t xdr_UNIASDBRecordUnionType();
extern bool_t xdr_pUNIASDBRecordUnionType();
extern bool_t xdr__UNIASNODEFILTER();
extern bool_t xdr_UNIASNODEFILTER();
extern bool_t xdr_pUNIASNODEFILTER();
extern bool_t xdr__UNIASOBJECTFILTER();
extern bool_t xdr_UNIASOBJECTFILTER();
extern bool_t xdr_pUNIASOBJECTFILTER();
extern bool_t xdr__UNIASDBRecordListFilter();
extern bool_t xdr_UNIASDBRecordListFilter();
extern bool_t xdr_pUNIASDBRecordListFilter();
extern bool_t xdr__DISKSPACEINFOITEM();
extern bool_t xdr_DISKSPACEINFOITEM();
extern bool_t xdr_pDISKSPACEINFOITEM();
extern bool_t xdr__UNIASDBGetDiskSpaceInfo_Result();
extern bool_t xdr_UNIASDBGetDiskSpaceInfo_Result();
extern bool_t xdr_pUNIASDBGetDiskSpaceInfo_Result();
extern bool_t xdr__UNIASDBCFG();
extern bool_t xdr_UNIASDBCFG();
extern bool_t xdr_pUNIASDBCFG();
extern bool_t xdr__NETADDRESS();
extern bool_t xdr_NETADDRESS();
extern bool_t xdr_pNETADDRESS();
extern bool_t xdr__UNICLIENTSCFG();
extern bool_t xdr_UNICLIENTSCFG();
extern bool_t xdr_pUNICLIENTSCFG();
extern bool_t xdr__UNISERVERCFG();
extern bool_t xdr_UNISERVERCFG();
extern bool_t xdr_pUNISERVERCFG();
extern bool_t xdr__UNIASDBGetDBConfiguration_Result();
extern bool_t xdr_UNIASDBGetDBConfiguration_Result();
extern bool_t xdr_pUNIASDBGetDBConfiguration_Result();
extern bool_t xdr__UNITAPESERVERCFG();
extern bool_t xdr_UNITAPESERVERCFG();
extern bool_t xdr_pUNITAPESERVERCFG();
extern bool_t xdr__UNISCHEDULERSERVERCFG();
extern bool_t xdr_UNISCHEDULERSERVERCFG();
extern bool_t xdr_pUNISCHEDULERSERVERCFG();
extern bool_t xdr__UNIASDBConfigType();
extern bool_t xdr_UNIASDBConfigType();
extern bool_t xdr_pUNIASDBConfigType();
extern bool_t xdr__UNIASFILE();
extern bool_t xdr_UNIASFILE();
extern bool_t xdr_pUNIASFILE();
extern bool_t xdr__UNIASDBGetQueryFileList_Result();
extern bool_t xdr_UNIASDBGetQueryFileList_Result();
extern bool_t xdr_pUNIASDBGetQueryFileList_Result();
extern bool_t xdr__UNIASDBGetWSCountList_Result();
extern bool_t xdr_UNIASDBGetWSCountList_Result();
extern bool_t xdr_pUNIASDBGetWSCountList_Result();
extern bool_t xdr__UNIASDBGetSessAndTapeInfoByID_Result();
extern bool_t xdr_UNIASDBGetSessAndTapeInfoByID_Result();
extern bool_t xdr_pUNIASDBGetSessAndTapeInfoByID_Result();
extern bool_t xdr_uni_asdbopendb_1_argument();
extern bool_t xdr_uni_asdbclosedb_1_argument();
extern bool_t xdr_uni_asdbgetnumberofrecordsindb_1_argument();
extern bool_t xdr_uni_asdbgettapelist_1_argument();
extern bool_t xdr_uni_asdbgetsessionlist_1_argument();
extern bool_t xdr_uni_asdbgetdetaillist_1_argument();
extern bool_t xdr_uni_asdbgetserverlist_1_argument();
extern bool_t xdr_uni_asdbgetvolumelist_1_argument();
extern bool_t xdr_uni_asdbgetfilelist_1_argument();
extern bool_t xdr_uni_asdbgetversionhistory_1_argument();
extern bool_t xdr_uni_asdbgetsessionlistbyid_1_argument();
extern bool_t xdr_uni_asdbgetdetaillistbyid_1_argument();
extern bool_t xdr_uni_asdbgetobjectitem_1_argument();
extern bool_t xdr_uni_asdbgetobjectid_1_argument();
extern bool_t xdr_uni_asdbgetrecordlist_1_argument();
extern bool_t xdr_uni_asdbupdatedbconfiguration_1_argument();
extern bool_t xdr_uni_asdbupdaterecord_1_argument();
extern bool_t xdr_uni_asdbdeleterecord_1_argument();
extern bool_t xdr_uni_asdbinsertrecord_1_argument();
extern bool_t xdr_uni_asdbgetqueryfilelist_1_argument();
extern bool_t xdr_uni_asdbgetquerydatalist_1_argument();
extern bool_t xdr_uni_asdbdoesnodeexist_1_argument();
extern bool_t xdr_uni_asdbgetasconfig_1_argument();
extern bool_t xdr_uni_asdbsetasconfig_1_argument();
extern bool_t xdr_uni_asdbgetsessandtapeinfobyid_1_argument();

#ifdef __cplusplus
}
#endif
#endif /* !_DB_H_RPCGEN */
