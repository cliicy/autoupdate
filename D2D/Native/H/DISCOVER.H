/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _DISCOVER_H_RPCGEN
#define	_DISCOVER_H_RPCGEN

#define NW_6X 9600	// Added by CATS
#define NW_5X 9500	// Added by CATS
#define NW_4X 9400	// Added by CATS

#ifdef __cplusplus
extern "C" {
#endif

#ifdef _NETWARE_NLM
#include <rpc/newnames.h>
#endif
#include "bebenabled.h"
#include <rpc/rpc.h>

#ifdef UNIX_ONLY
#ifndef _KERNEL
#include <synch.h>
#include <thread.h>
#endif /* !_KERNEL */
#endif

typedef char char512[512];

typedef char char64[64];
/*[Start]***************Added by CA_TCG*****************/
typedef char char28[28];

#if defined(UNICODE_JIS_SUPPORT) 
typedef WCHAR wchar28[28];
#endif
typedef char char128[128];

typedef char char16[16];
typedef char char15[15];	//Added by CATS


struct  _UNI_POOLVOLUMELIST
{
   char*   pszVolumeName;
   int     isMounted;
};

typedef  struct  _UNI_POOLVOLUMELIST  _UNI_POOLVOLUMELIST;
typedef _UNI_POOLVOLUMELIST UNI_POOLVOLUMELIST;

struct _UNIV_RESULT_POOLVOLUMELIST {
	u_short funcResult;
	struct {
		u_int plist_len;
		UNI_POOLVOLUMELIST *plist_val;
		} plist;
	int    iVolumeCount;
	char*  pszPoolName;
//	int    iStatus;
};
typedef struct _UNIV_RESULT_POOLVOLUMELIST  _UNIV_RESULT_POOLVOLUMELIST;
typedef _UNIV_RESULT_POOLVOLUMELIST UNIV_RESULT_POOLVOLUMELIST;

/*
//ByAsim05.30.02ForNewWayOfRpc
struct _GW_RES {
   char128   szResName;
   char16    szResType; 	
};

typedef struct _GW_RES  _GW_RES ;
typedef _GW_RES GW_RES; 
#define MAX_RES	20 

struct _UNIV_RESULT_GW_RES_LIST {
	u_short funcResult; 
	GW_RES  resList[MAX_RES];
	int     iResType; 	
	int     iTotalRes;  
};

typedef struct _UNIV_RESULT_GW_RES_LIST _UNIV_RESULT_GW_RES_LIST;
typedef _UNIV_RESULT_GW_RES_LIST  UNIV_RESULT_GW_RES_LIST;
*/

// [START] Added by CATS
typedef struct _UNIV_SYSTEM_INFO
{
	int os_platform;
	int beb_language;
	char64 beb_name;
	int beb_build_number;
	long extra_flag;
	char15 extra_data;
	long productID;
	char subtype;

}UNIV_SYSTEM_INFO;
typedef struct _UNIV_SYSTEM_INFO _UNIV_SYSTEM_INFO;

// [END] Added by CATS

#if defined(UNICODE_JIS_SUPPORT) 
typedef struct _UNIV_SYSTEM_INFOW
{
	int os_platform;
	int beb_language;
	wchar_t beb_name[64];
	int beb_build_number;
	long extra_flag;
	wchar_t extra_data[15];
	long productID;
	char subtype;

}UNIV_SYSTEM_INFOW;
typedef struct _UNIV_SYSTEM_INFOW _UNIV_SYSTEM_INFOW;
#endif
#ifndef _IP_STRT_
#define _IP_STRT_
struct  _IP_STRT {
	
	char28 ipAdd;
	int    iUseFlag;	

} ;
#endif
#ifndef _IP_STRTW_
#define _IP_STRTW_

#if defined(UNICODE_JIS_SUPPORT) 
struct  _IP_STRTW {

	wchar28 ipAdd;
	int    iUseFlag;	

} ;
typedef struct  _IP_STRTW _IP_STRTW;
typedef _IP_STRTW IP_STRTW;
#endif
#endif //_IP_STRT_

typedef struct  _IP_STRT _IP_STRT;
typedef _IP_STRT IP_STRT;

#define MAX_NIC 10
struct  _UNIV_RESULT_MULTI_NIC {
	u_short funcResult;  
	int	iDefaultValue; 
	int	ipNumber;
	IP_STRT	IPs[MAX_NIC];
		
} ;
typedef struct _UNIV_RESULT_MULTI_NIC _UNIV_RESULT_MULTI_NIC;
typedef struct _UNIV_RESULT_MULTI_NIC UNIV_RESULT_MULTI_NIC;

#if defined(UNICODE_JIS_SUPPORT) 
struct  _UNIV_RESULT_MULTI_NICW {
	u_short funcResult;  
	int	iDefaultValue; 
	int	ipNumber;
	IP_STRTW	IPs[MAX_NIC];

} ;
typedef struct _UNIV_RESULT_MULTI_NICW _UNIV_RESULT_MULTI_NICW;
typedef struct _UNIV_RESULT_MULTI_NICW UNIV_RESULT_MULTI_NICW;
#endif
/*[End]***************Added by CA_TCG*****************/

struct _UNIV_RESULT_LISTSERVER {
	u_short funcResult;
	u_long numServer;
	u_long bufSize;
	char *retString;
};
typedef struct _UNIV_RESULT_LISTSERVER _UNIV_RESULT_LISTSERVER;

typedef _UNIV_RESULT_LISTSERVER UNIV_RESULT_LISTSERVER;

typedef UNIV_RESULT_LISTSERVER *PUNIV_RESULT_LISTSERVER;

struct _UNIV_RESULT_GETHOMEDIR {
	u_short funcResult;
	char *retString;
};
typedef struct _UNIV_RESULT_GETHOMEDIR _UNIV_RESULT_GETHOMEDIR;

typedef _UNIV_RESULT_GETHOMEDIR UNIV_RESULT_GETHOMEDIR;

typedef UNIV_RESULT_GETHOMEDIR *PUNIV_RESULT_GETHOMEDIR;

struct _UNIV_RESULT_VERIFYUSER {
	u_short funcResult;
	u_long rights;
	char *retString;
	char *szUserName;
};
typedef struct _UNIV_RESULT_VERIFYUSER _UNIV_RESULT_VERIFYUSER;

typedef _UNIV_RESULT_VERIFYUSER UNIV_RESULT_VERIFYUSER;

typedef UNIV_RESULT_VERIFYUSER *PUNIV_RESULT_VERIFYUSER;

struct _UNIV_RESULT_ADMINRIGHTS {
	u_short funcResult;
	u_long rights;
	char *retString;
};
typedef struct _UNIV_RESULT_ADMINRIGHTS _UNIV_RESULT_ADMINRIGHTS;

typedef _UNIV_RESULT_ADMINRIGHTS UNIV_RESULT_ADMINRIGHTS;

typedef UNIV_RESULT_ADMINRIGHTS *PUNIV_RESULT_ADMINRIGHTS;

struct _UNIV_RESULT_GETMAILDIR {
	u_short funcResult;
	char *retString;
};
typedef struct _UNIV_RESULT_GETMAILDIR _UNIV_RESULT_GETMAILDIR;

typedef _UNIV_RESULT_GETMAILDIR UNIV_RESULT_GETMAILDIR;

typedef UNIV_RESULT_GETMAILDIR *PUNIV_RESULT_GETMAILDIR;

struct _UNIV_RESULT_SERVERDETAIL {
	u_short funcResult;
	u_long retCmd;
	u_long numServer;
	u_long bufSize;
	char *retString;
	struct {
		u_int buffer_len;
		char *buffer_val;
	} buffer;
};
typedef struct _UNIV_RESULT_SERVERDETAIL _UNIV_RESULT_SERVERDETAIL;

typedef _UNIV_RESULT_SERVERDETAIL UNIV_RESULT_SERVERDETAIL;

typedef UNIV_RESULT_SERVERDETAIL *PUNIV_RESULT_SERVERDETAIL;

struct _UNIV_RESULT_OPENFILE {
	u_short funcResult;
	u_long fileHandle;
	u_long retCmd;
	char *pszUserName;
	char *retString;
};
typedef struct _UNIV_RESULT_OPENFILE _UNIV_RESULT_OPENFILE;

typedef _UNIV_RESULT_OPENFILE UNIV_RESULT_OPENFILE;

typedef UNIV_RESULT_OPENFILE *PUNIV_RESULT_OPENFILE;

struct _UNIV_RESULT_CLOSEFILE {
	u_short funcResult;
	u_long retCmd;
	char *retString;
};
typedef struct _UNIV_RESULT_CLOSEFILE _UNIV_RESULT_CLOSEFILE;

typedef _UNIV_RESULT_CLOSEFILE UNIV_RESULT_CLOSEFILE;

typedef UNIV_RESULT_CLOSEFILE *PUNIV_RESULT_CLOSEFILE;

struct _UNIV_RESULT_VERIFYREPORTPATH {
	u_short funcResult;
	u_long retCmd;
	char *retString;
};
typedef struct _UNIV_RESULT_VERIFYREPORTPATH _UNIV_RESULT_VERIFYREPORTPATH;

typedef _UNIV_RESULT_VERIFYREPORTPATH UNIV_RESULT_VERIFYREPORTPATH;

typedef UNIV_RESULT_VERIFYREPORTPATH *PUNIV_RESULT_VERIFYREPORTPATH;

struct _UNIV_RESULT_READBUFFER {
	u_short funcResult;
	u_long retCmd;
	u_long numItem;
	u_long maxItems;
	char *retString;
	struct {
		u_int retBuffer_len;
		char *retBuffer_val;
	} retBuffer;
};
typedef struct _UNIV_RESULT_READBUFFER _UNIV_RESULT_READBUFFER;

typedef _UNIV_RESULT_READBUFFER UNIV_RESULT_READBUFFER;

typedef UNIV_RESULT_READBUFFER *PUNIV_RESULT_READBUFFER;

struct _UNIV_RESULT_GETFILESIZE {
	u_short funcResult;
	u_long retDataForkSize;
	u_long retResForkSize;
	u_long retDataForkKB;
	u_long retResForkKB;
	char *retString;
};
typedef struct _UNIV_RESULT_GETFILESIZE _UNIV_RESULT_GETFILESIZE;

typedef _UNIV_RESULT_GETFILESIZE UNIV_RESULT_GETFILESIZE;

typedef UNIV_RESULT_GETFILESIZE *PUNIV_RESULT_GETFILESIZE;

struct _UNIV_RESULT_HANDLEINFO {
	u_short funcResult;
	u_long retCmd;
	char *retString;
	char *treeName;
	char *serverName;
	char *serverContext;
	u_long serverVersion;
	char *userName;
	u_long userObjectID;
	char *password;
	char *IPAddr;
	char *IPXAddr;
};
typedef struct _UNIV_RESULT_HANDLEINFO _UNIV_RESULT_HANDLEINFO;

typedef _UNIV_RESULT_HANDLEINFO UNIV_RESULT_HANDLEINFO;

typedef UNIV_RESULT_HANDLEINFO *PUNIV_RESULT_HANDLEINFO;

struct _UNIV_RESULT_READFILE {
	u_short funcResult;
	u_long retCmd;
	u_long bufSize;
	char *retString;
	struct {
		u_int buffer_len;
		char *buffer_val;
	} buffer;
};
typedef struct _UNIV_RESULT_READFILE _UNIV_RESULT_READFILE;

typedef _UNIV_RESULT_READFILE UNIV_RESULT_READFILE;

typedef UNIV_RESULT_READFILE *PUNIV_RESULT_READFILE;

struct _UNIV_RESULT_LISTCALLBACK {
	u_short funcResult;
	u_long retCmd;
	u_long numItem;
	u_long bufSize;
	char *retString;
	struct {
		u_int retBuffer_len;
		char *retBuffer_val;
	} retBuffer;
};
typedef struct _UNIV_RESULT_LISTCALLBACK _UNIV_RESULT_LISTCALLBACK;

typedef _UNIV_RESULT_LISTCALLBACK UNIV_RESULT_LISTCALLBACK;

typedef UNIV_RESULT_LISTCALLBACK *PUNIV_RESULT_LISTCALLBACK;

struct _UNIV_PARAM_READINPUT {
	u_long retCmd;
	u_long numItem;
	u_long bufSize;
	char *retString;
	struct {
		u_int retBuffer_len;
		char *retBuffer_val;
	} retBuffer;
};
typedef struct _UNIV_PARAM_READINPUT _UNIV_PARAM_READINPUT;

typedef _UNIV_PARAM_READINPUT UNIV_PARAM_READINPUT;

typedef UNIV_PARAM_READINPUT *PUNIV_PARAM_READINPUT;

struct _UNIV_PARAM_LISTINPUT {
	u_long retCmd;
	u_long numItem;
	u_long bufSize;
	char *retString;
	struct {
		u_int retBuffer_len;
		char *retBuffer_val;
	} retBuffer;
};
typedef struct _UNIV_PARAM_LISTINPUT _UNIV_PARAM_LISTINPUT;

typedef _UNIV_PARAM_LISTINPUT UNIV_PARAM_LISTINPUT;

typedef UNIV_PARAM_LISTINPUT *PUNIV_PARAM_LISTINPUT;

//[START] Added by CATS 
struct uni_getSystemInfo_1_argument  {
	   char *pszServerName;
};
typedef struct uni_getSystemInfo_1_argument uni_getSystemInfo_1_argument;
//[END] Added by CATS

/*[Start]*********Added by CA_TCG******************/
struct uni_getpoolvolumelist_1_argument  {
	   char *pszServerName;
	   char* pszVolumeName;
};
typedef struct uni_getpoolvolumelist_1_argument uni_getpoolvolumelist_1_argument;

struct uni_isimageoptionenable_1_argument {
	char *pszServerName;
};

typedef struct uni_isimageoptionenable_1_argument uni_isimageoptionenable_1_argument;

struct uni_getservermultiniclistrpc_1_argument {
	char *pszServerName;
};

typedef struct uni_getservermultiniclistrpc_1_argument uni_getservermultiniclistrpc_1_argument;

struct uni_configservermultinicrpc_1_argument {
	 char *pszServerName;
     UNIV_RESULT_MULTI_NIC nic;
};
typedef struct uni_configservermultinicrpc_1_argument  uni_configservermultinicrpc_1_argument;

typedef struct uni_isimageoptionenable_1_argument uni_isimageoptionenable_1_argument;

struct uni_getgwresourcelist_1_argument {
   char *pszServerName;
   char *pszGWServerName;
   char *pszUserName;
   char *pszUserPW;
   u_long cmd;
   u_long numResource;
   u_long bufSize;
   char *pszObjectName;

/* 
   //ByAsim05.30.02ForNewWayOfRpc
   char *pszHostServer;
	char *pszServerName;
	char *pszUser;
	char *pszPassword;
*/
};
typedef struct uni_getgwresourcelist_1_argument uni_getgwresourcelist_1_argument;

/*[End]***********Added by CA_TCG******************/



struct uni_listarcserveservers_1_argument {
	char *pszServerName;
	char *pszObjectName;
	u_long numServer;
	u_long bufSize;
};
typedef struct uni_listarcserveservers_1_argument uni_listarcserveservers_1_argument;

struct uni_verifyuserandpassword_1_argument {
	char *pszHostServerName;
	char *pszServerName;
	char512 pszUserName;
	char64 pszPassword;
//	char* pszUserName;//rajarshi 0402
//	char* pszPassword;
	char *pszContext;
	char *pszClient;
};
typedef struct uni_verifyuserandpassword_1_argument uni_verifyuserandpassword_1_argument;

struct uni_getarcservehomedirectory_1_argument {
	char *pszServerName;
	char *pszHomeDirectory;
};
typedef struct uni_getarcservehomedirectory_1_argument uni_getarcservehomedirectory_1_argument;

struct uni_verifyadminrights_1_argument {
	char *pszHostServerName;
	char *pszServerName;
	char512 pszUserName;
	char64 pszPassword;
	//rajarshi 0402
//	char* pszUserName;
//	char* pszPassword;

};
typedef struct uni_verifyadminrights_1_argument uni_verifyadminrights_1_argument;

struct uni_getusermaildirectory_1_argument {
	char *pszServerName;
	char *pszUserName;
	char *pszMailDirectory;
};
typedef struct uni_getusermaildirectory_1_argument uni_getusermaildirectory_1_argument;

struct uni_getserverdetail_1_argument {
	char *pszServerName;
	u_long cmd;
	u_long numServer;
	u_long bufSize;
	char *pszObjectName;
	u_long ulOptions;
};
typedef struct uni_getserverdetail_1_argument uni_getserverdetail_1_argument;

struct uni_openarcfile_1_argument {
	char *pszServerName;
	char *fullPathName;
	u_long openFlags;
};
typedef struct uni_openarcfile_1_argument uni_openarcfile_1_argument;

struct uni_closearcfile_1_argument {
	char *pszServerName;
	char *fullPathName;
	u_long fileHandle;
};
typedef struct uni_closearcfile_1_argument uni_closearcfile_1_argument;

struct uni_verifyreportpath_1_argument {
	char *pszServerName;
	char *pszReportPath;
};
typedef struct uni_verifyreportpath_1_argument uni_verifyreportpath_1_argument;

struct uni_diraccessbyuser_1_argument {
	char *pszServerName;
	char *pszUserName;
	char *pszPassword;
	char *pszReportPath;
};
typedef struct uni_diraccessbyuser_1_argument uni_diraccessbyuser_1_argument;

struct uni_readbuffer_1_argument {
	char *pszServerName;
	char *pszFileName;
	u_long bufSize;
	u_long offset;
	u_long flags;
	u_long options;
};
typedef struct uni_readbuffer_1_argument uni_readbuffer_1_argument;

struct uni_getfilesize_1_argument {
	char *pszServerName;
	char *pszFileName;
	u_long options;
};
typedef struct uni_getfilesize_1_argument uni_getfilesize_1_argument;

struct uni_listserverbytype_1_argument {
	char *pszServerName;
	u_long start;
	u_long end;
	u_long bufSize;
	u_long numItem;
	u_long options;
};
typedef struct uni_listserverbytype_1_argument uni_listserverbytype_1_argument;

struct uni_listalltree_1_argument {
	char *pszServerName;
	u_long start;
	u_long end;
	u_long bufSize;
	u_long numItem;
	u_long options;
};
typedef struct uni_listalltree_1_argument uni_listalltree_1_argument;

struct uni_ndsbrowsertree_1_argument {
	char *pszServerName;
	u_long handle;
	char *pszObjectName;
	u_long start;
	u_long end;
	u_long bufSize;
	u_long numItem;
	u_long options;
};
typedef struct uni_ndsbrowsertree_1_argument uni_ndsbrowsertree_1_argument;

struct uni_openconnhandle_1_argument {
	char *pszServerName;
	char *pszHostServerName;
	char *treeName;
	char512 pszUserName;
	char64 pszPassword;
	//rajarshi 0402
	/*char* pszUserName;
	char* pszPassword;*/

	u_long options;
	char *pszContext;
	char *pszClient;
};
typedef struct uni_openconnhandle_1_argument uni_openconnhandle_1_argument;

struct uni_closeconnhandle_1_argument {
	char *pszServerName;
	char *pszClient;
	u_long handle;
	u_long options;
};
typedef struct uni_closeconnhandle_1_argument uni_closeconnhandle_1_argument;

struct uni_gethandleinfo_1_argument {
	char *pszServerName;
	u_long handle;
	char *pszClient;
};
typedef struct uni_gethandleinfo_1_argument uni_gethandleinfo_1_argument;

struct uni_getserverbytree_1_argument {
	char *pszServerName;
	char *pszTreeName;
	u_long start;
	u_long end;
	u_long bufSize;
	u_long numItem;
	u_long options;
};
typedef struct uni_getserverbytree_1_argument uni_getserverbytree_1_argument;

struct uni_browseserverbyhandle_1_argument {
	char *pszServerName;
	u_long handle;
	char *pszObjectName;
	u_long bufSize;
	u_long start;
	u_long level;
	u_long options;
	u_long numItem;
};
typedef struct uni_browseserverbyhandle_1_argument uni_browseserverbyhandle_1_argument;

struct uni_getservicestatus_1_argument {
	char *pszServerName;
	u_long userHandle;
	u_long options;
};
typedef struct uni_getservicestatus_1_argument uni_getservicestatus_1_argument;

struct uni_getarcservelog_1_argument {
	char *pszServerName;
	char *pszSetName;
	u_long logType;
	u_long jobID;
	u_long offset;
	u_long numLines;
	u_long bufSize;
};
typedef struct uni_getarcservelog_1_argument uni_getarcservelog_1_argument;

struct uni_getlognames_1_argument {
	char *pszServerName;
	u_long logType;
	u_long bufSize;
	u_long numItems;
	u_long maxItems;
	u_long options;
};
typedef struct uni_getlognames_1_argument uni_getlognames_1_argument;

struct uni_deletelog_1_argument {
	char *pszServerName;
	char *pszLogName;
	u_long logType;
	u_long jobID;
};
typedef struct uni_deletelog_1_argument uni_deletelog_1_argument;

struct uni_getobjectattributes_1_argument {
	char *pszServerName;
	u_long objectType;
	char *pszObjectPath;
};
typedef struct uni_getobjectattributes_1_argument uni_getobjectattributes_1_argument;

struct uni_getproductlist_1_argument {
	char *pszServerName;
	u_long ulBufSize;
	u_long ulOptions;
};
typedef struct uni_getproductlist_1_argument uni_getproductlist_1_argument;

struct uni_getgroupsforuser_1_argument {
	char *pszServerName;
	char *pszUserName;
	u_long ulBufSize;
	u_long ulOptions;
};
typedef struct uni_getgroupsforuser_1_argument uni_getgroupsforuser_1_argument;

#define	DISCOVERSERV ((unsigned long)(0x55CF0))
#define	DISCOVERVERS ((unsigned long)(1))

#if defined(__STDC__) || defined(__cplusplus)
#define	UNI_ListARCserveServers ((unsigned long)(1))
extern  enum clnt_stat uni_listarcserveservers_1(char *, char *, u_long , u_long , UNIV_RESULT_LISTSERVER *, CLIENT *);
extern  bool_t uni_listarcserveservers_1_svc(char *, char *, u_long , u_long , UNIV_RESULT_LISTSERVER *, struct svc_req *);
#define	UNI_VerifyUserAndPassword ((unsigned long)(2))
extern  enum clnt_stat uni_verifyuserandpassword_1(char *, char *, char512 , char64 , char *, char *, UNIV_RESULT_VERIFYUSER *, CLIENT *);
extern  bool_t uni_verifyuserandpassword_1_svc(char *, char *, char512 , char64 , char *, char *, UNIV_RESULT_VERIFYUSER *, struct svc_req *);
#define	UNI_GetARCserveHomeDirectory ((unsigned long)(3))
extern  enum clnt_stat uni_getarcservehomedirectory_1(char *, char *, UNIV_RESULT_GETHOMEDIR *, CLIENT *);
extern  bool_t uni_getarcservehomedirectory_1_svc(char *, char *, UNIV_RESULT_GETHOMEDIR *, struct svc_req *);
#define	UNI_VerifyAdminRights ((unsigned long)(4))
extern  enum clnt_stat uni_verifyadminrights_1(char *, char *, char512 , char64 , UNIV_RESULT_ADMINRIGHTS *, CLIENT *);
extern  bool_t uni_verifyadminrights_1_svc(char *, char *, char512 , char64 , UNIV_RESULT_ADMINRIGHTS *, struct svc_req *);
#define	UNI_GetUserMailDirectory ((unsigned long)(5))
extern  enum clnt_stat uni_getusermaildirectory_1(char *, char *, char *, UNIV_RESULT_GETMAILDIR *, CLIENT *);
extern  bool_t uni_getusermaildirectory_1_svc(char *, char *, char *, UNIV_RESULT_GETMAILDIR *, struct svc_req *); 
#define	UNI_GetServerDetail ((unsigned long)(6))
extern  enum clnt_stat uni_getserverdetail_1(char *, u_long , u_long , u_long , char *, u_long , UNIV_RESULT_SERVERDETAIL *, CLIENT *);
extern  bool_t uni_getserverdetail_1_svc(char *, u_long , u_long , u_long , char *, u_long , UNIV_RESULT_SERVERDETAIL *, struct svc_req *);
#define	UNI_OpenARCFile ((unsigned long)(7))
extern  enum clnt_stat uni_openarcfile_1(char *, char *, u_long , UNIV_RESULT_OPENFILE *, CLIENT *);
extern  bool_t uni_openarcfile_1_svc(char *, char *, u_long , UNIV_RESULT_OPENFILE *, struct svc_req *);
#define	UNI_CloseARCFile ((unsigned long)(8))
extern  enum clnt_stat uni_closearcfile_1(char *, char *, u_long , UNIV_RESULT_CLOSEFILE *, CLIENT *);
extern  bool_t uni_closearcfile_1_svc(char *, char *, u_long , UNIV_RESULT_CLOSEFILE *, struct svc_req *);
#define	UNI_VerifyReportPath ((unsigned long)(9))
extern  enum clnt_stat uni_verifyreportpath_1(char *, char *, UNIV_RESULT_GETHOMEDIR *, CLIENT *);
extern  bool_t uni_verifyreportpath_1_svc(char *, char *, UNIV_RESULT_GETHOMEDIR *, struct svc_req *);  //YES Change
#define	UNI_DirAccessByUser ((unsigned long)(10))
extern  enum clnt_stat uni_diraccessbyuser_1(char *, char *, char *, char *, UNIV_RESULT_VERIFYREPORTPATH *, CLIENT *);
extern  bool_t uni_diraccessbyuser_1_svc(char *, char *, char *, char *, UNIV_RESULT_VERIFYREPORTPATH *, struct svc_req *);  //YES Change
#define	Uni_ReadBuffer ((unsigned long)(11))
extern  enum clnt_stat uni_readbuffer_1(char *, char *, u_long , u_long , u_long , u_long , UNIV_RESULT_READBUFFER *, CLIENT *);
extern  bool_t uni_readbuffer_1_svc(char *, char *, u_long , u_long , u_long , u_long , UNIV_RESULT_READBUFFER *, struct svc_req *);  //YES Change
#define	Uni_GetFileSize ((unsigned long)(12))
extern  enum clnt_stat uni_getfilesize_1(char *, char *, u_long , UNIV_RESULT_GETFILESIZE *, CLIENT *);
extern  bool_t uni_getfilesize_1_svc(char *, char *, u_long , UNIV_RESULT_GETFILESIZE *, struct svc_req *);   //YES Change
#define	Uni_ListServerByType ((unsigned long)(13))
extern  enum clnt_stat uni_listserverbytype_1(char *, u_long , u_long , u_long , u_long , u_long , UNIV_RESULT_READBUFFER *, CLIENT *);
extern  bool_t uni_listserverbytype_1_svc(char *, u_long , u_long , u_long , u_long , u_long , UNIV_RESULT_READBUFFER *, struct svc_req *);
#define	Uni_ListAllTree ((unsigned long)(14))
extern  enum clnt_stat uni_listalltree_1(char *, u_long , u_long , u_long , u_long , u_long , UNIV_RESULT_READBUFFER *, CLIENT *);
extern  bool_t uni_listalltree_1_svc(char *, u_long , u_long , u_long , u_long , u_long , UNIV_RESULT_READBUFFER *, struct svc_req *);   //YES change
#define	Uni_NDSBrowseRTree ((unsigned long)(15))
extern  enum clnt_stat uni_ndsbrowsertree_1(char *, u_long , char *, u_long , u_long , u_long , u_long , u_long , UNIV_RESULT_READBUFFER *, CLIENT *);
extern  bool_t uni_ndsbrowsertree_1_svc(char *, u_long , char *, u_long , u_long , u_long , u_long , u_long , UNIV_RESULT_READBUFFER *, struct svc_req *);
#define	Uni_OpenConnHandle ((unsigned long)(16))
extern  enum clnt_stat uni_openconnhandle_1(char *, char *, char *, char512 , char64 , u_long , char *, char *, UNIV_RESULT_OPENFILE *, CLIENT *);
extern  bool_t uni_openconnhandle_1_svc(char *, char *, char *, char512 , char64 , u_long , char *, char *, UNIV_RESULT_OPENFILE *, struct svc_req *);
#define	Uni_CloseConnHandle ((unsigned long)(17))
extern  enum clnt_stat uni_closeconnhandle_1(char *, char *, u_long , u_long , UNIV_RESULT_CLOSEFILE *, CLIENT *);
extern  bool_t uni_closeconnhandle_1_svc(char *, char *, u_long , u_long , UNIV_RESULT_CLOSEFILE *, struct svc_req *);
#define	Uni_GetHandleInfo ((unsigned long)(18))
extern  enum clnt_stat uni_gethandleinfo_1(char *, u_long , char *, UNIV_RESULT_HANDLEINFO *, CLIENT *);
extern  bool_t uni_gethandleinfo_1_svc(char *, u_long , char *, UNIV_RESULT_HANDLEINFO *, struct svc_req *);
#define	Uni_GetServerByTree ((unsigned long)(19))
extern  enum clnt_stat uni_getserverbytree_1(char *, char *, u_long , u_long , u_long , u_long , u_long , UNIV_RESULT_READBUFFER *, CLIENT *);
extern  bool_t uni_getserverbytree_1_svc(char *, char *, u_long , u_long , u_long , u_long , u_long , UNIV_RESULT_READBUFFER *, struct svc_req *);   //YES Change
#define	Uni_BrowseServerByHandle ((unsigned long)(21))
extern  enum clnt_stat uni_browseserverbyhandle_1(char *, u_long , char *, u_long , u_long , u_long , u_long , u_long , UNIV_RESULT_READBUFFER *, CLIENT *);
extern  bool_t uni_browseserverbyhandle_1_svc(char *, u_long , char *, u_long , u_long , u_long , u_long , u_long , UNIV_RESULT_READBUFFER *, struct svc_req *);
#define	Uni_GetServiceStatus ((unsigned long)(22))
extern  enum clnt_stat uni_getservicestatus_1(char *, u_long , u_long , UNIV_RESULT_VERIFYREPORTPATH *, CLIENT *);
extern  bool_t uni_getservicestatus_1_svc(char *, u_long , u_long , UNIV_RESULT_VERIFYREPORTPATH *, struct svc_req *);
#define	Uni_GetARCserveLog ((unsigned long)(23))
extern  enum clnt_stat uni_getarcservelog_1(char *, char *, u_long , u_long , u_long , u_long , u_long , UNIV_RESULT_READBUFFER *, CLIENT *);
extern  bool_t uni_getarcservelog_1_svc(char *, char *, u_long , u_long , u_long , u_long , u_long , UNIV_RESULT_READBUFFER *, struct svc_req *);
#define	Uni_GetLogNames ((unsigned long)(24))
extern  enum clnt_stat uni_getlognames_1(char *, u_long , u_long , u_long , u_long , u_long , UNIV_RESULT_READBUFFER *, CLIENT *);
extern  bool_t uni_getlognames_1_svc(char *, u_long , u_long , u_long , u_long , u_long , UNIV_RESULT_READBUFFER *, struct svc_req *);
#define	Uni_DeleteLog ((unsigned long)(25))
extern  enum clnt_stat uni_deletelog_1(char *, char *, u_long , u_long , UNIV_RESULT_GETHOMEDIR *, CLIENT *);
extern  bool_t uni_deletelog_1_svc(char *, char *, u_long , u_long , UNIV_RESULT_GETHOMEDIR *, struct svc_req *);
#define	Uni_GetObjectAttributes ((unsigned long)(26))
extern  enum clnt_stat uni_getobjectattributes_1(char *, u_long , char *, UNIV_RESULT_READBUFFER *, CLIENT *);
extern  bool_t uni_getobjectattributes_1_svc(char *, u_long , char *, UNIV_RESULT_READBUFFER *, struct svc_req *);  //YES Change
#define	Uni_GetProductList ((unsigned long)(27))
extern  enum clnt_stat uni_getproductlist_1(char *, u_long , u_long , UNIV_RESULT_READBUFFER *, CLIENT *);
extern  bool_t uni_getproductlist_1_svc(char *, u_long , u_long , UNIV_RESULT_READBUFFER *, struct svc_req *);
#define	Uni_GetGroupsForUser ((unsigned long)(28))
extern  enum clnt_stat uni_getgroupsforuser_1(char *, char *, u_long , u_long , UNIV_RESULT_READBUFFER *, CLIENT *);
extern  bool_t uni_getgroupsforuser_1_svc(char *, char *, u_long , u_long , UNIV_RESULT_READBUFFER *, struct svc_req *);
extern int discoverserv_1_freeresult(SVCXPRT *, xdrproc_t, caddr_t);

/*[Start]******Added by CA-TCG*****************************/
#define UNI_GetServerMultiNICListRpc ((unsigned long)(29))
extern  enum clnt_stat uni_getservermultiniclistrpc_1(char*,UNIV_RESULT_MULTI_NIC *,CLIENT *);
extern  bool_t uni_getservermultiniclistrpc_1_svc(char*,UNIV_RESULT_MULTI_NIC *,struct svc_req *);  
#define UNI_ConfigServerMultiNICRpc ((unsigned long)(30))
extern  enum clnt_stat uni_configservermultinicrpc_1(char*,UNIV_RESULT_MULTI_NIC,int *,CLIENT *);
extern  bool_t uni_configservermultinicrpc_1_svc(char*,UNIV_RESULT_MULTI_NIC,int *, struct svc_req *); 
#define UNI_isImageOptionEnable  ((unsigned long)(31))
extern  enum clnt_stat uni_isimageoptionenable_1(char*, int *,CLIENT *);
extern  bool_t uni_isimageoptionenable_1_svc(char*, int *, struct svc_req *); 
#define UNI_GetGwResourceList ((unsigned long)(32))
//extern  enum clnt_stat uni_getgwresourcelist_1(char*,char*,char*,char*,UNIV_RESULT_GW_RES_LIST *,CLIENT *);
extern  enum clnt_stat uni_getgwresourcelist_1(char*, char*, char*, char*, u_long, u_long, u_long, char*, UNIV_RESULT_SERVERDETAIL *, CLIENT *);
extern  bool_t uni_getgwresourcelist_1_svc(char*, char*, char*, char*, u_long, u_long, u_long, char*, UNIV_RESULT_SERVERDETAIL *, struct svc_req *); 
#define UNI_GetPoolVolumeList ((unsigned long)(33))
extern  enum clnt_stat uni_getpoolvolumelist_1(char*, char* ,UNIV_RESULT_POOLVOLUMELIST *,CLIENT *);
extern  bool_t uni_getpoolvolumelist_1_svc(char*, char*,UNIV_RESULT_POOLVOLUMELIST *,struct svc_req *);
//[START] Added by CATS
#define UNI_GetSystemInfo ((unsigned long)(34))
extern  enum clnt_stat uni_getSystemInfo_1( char*, UNIV_SYSTEM_INFO *,CLIENT *);
extern  bool_t uni_getSystemInfo_1_svc( char*, UNIV_SYSTEM_INFO *,struct svc_req *);  
/*[End]********Added by CA-TCG*****************************/

#else /* K&R C */
#define	UNI_ListARCserveServers ((unsigned long)(1))
extern  enum clnt_stat uni_listarcserveservers_1();
extern  bool_t uni_listarcserveservers_1_svc();
#define	UNI_VerifyUserAndPassword ((unsigned long)(2))
extern  enum clnt_stat uni_verifyuserandpassword_1();
extern  bool_t uni_verifyuserandpassword_1_svc();
#define	UNI_GetARCserveHomeDirectory ((unsigned long)(3))
extern  enum clnt_stat uni_getarcservehomedirectory_1();
extern  bool_t uni_getarcservehomedirectory_1_svc();
#define	UNI_VerifyAdminRights ((unsigned long)(4))
extern  enum clnt_stat uni_verifyadminrights_1();
extern  bool_t uni_verifyadminrights_1_svc();
#define	UNI_GetUserMailDirectory ((unsigned long)(5))
extern  enum clnt_stat uni_getusermaildirectory_1();
extern  bool_t uni_getusermaildirectory_1_svc();   //YES change
#define	UNI_GetServerDetail ((unsigned long)(6))
extern  enum clnt_stat uni_getserverdetail_1();
extern  bool_t uni_getserverdetail_1_svc();
#define	UNI_OpenARCFile ((unsigned long)(7))
extern  enum clnt_stat uni_openarcfile_1();
extern  bool_t uni_openarcfile_1_svc();
#define	UNI_CloseARCFile ((unsigned long)(8))
extern  enum clnt_stat uni_closearcfile_1();
extern  bool_t uni_closearcfile_1_svc();
#define	UNI_VerifyReportPath ((unsigned long)(9))
extern  enum clnt_stat uni_verifyreportpath_1();
extern  bool_t uni_verifyreportpath_1_svc();   //YES Change
#define	UNI_DirAccessByUser ((unsigned long)(10))
extern  enum clnt_stat uni_diraccessbyuser_1();
extern  bool_t uni_diraccessbyuser_1_svc();  //YES Change
#define	Uni_ReadBuffer ((unsigned long)(11))
extern  enum clnt_stat uni_readbuffer_1();
extern  bool_t uni_readbuffer_1_svc();	//YES Change
#define	Uni_GetFileSize ((unsigned long)(12))
extern  enum clnt_stat uni_getfilesize_1();
extern  bool_t uni_getfilesize_1_svc();   //YES Change
#define	Uni_ListServerByType ((unsigned long)(13))
extern  enum clnt_stat uni_listserverbytype_1();
extern  bool_t uni_listserverbytype_1_svc();
#define	Uni_ListAllTree ((unsigned long)(14))
extern  enum clnt_stat uni_listalltree_1();
extern  bool_t uni_listalltree_1_svc();   //YES Change
#define	Uni_NDSBrowseRTree ((unsigned long)(15))
extern  enum clnt_stat uni_ndsbrowsertree_1();
extern  bool_t uni_ndsbrowsertree_1_svc();
#define	Uni_OpenConnHandle ((unsigned long)(16))
extern  enum clnt_stat uni_openconnhandle_1();
extern  bool_t uni_openconnhandle_1_svc();
#define	Uni_CloseConnHandle ((unsigned long)(17))
extern  enum clnt_stat uni_closeconnhandle_1();
extern  bool_t uni_closeconnhandle_1_svc();
#define	Uni_GetHandleInfo ((unsigned long)(18))
extern  enum clnt_stat uni_gethandleinfo_1();
extern  bool_t uni_gethandleinfo_1_svc();
#define	Uni_GetServerByTree ((unsigned long)(19))
extern  enum clnt_stat uni_getserverbytree_1();
extern  bool_t uni_getserverbytree_1_svc();     //YES change
#define	Uni_BrowseServerByHandle ((unsigned long)(21))
extern  enum clnt_stat uni_browseserverbyhandle_1();
extern  bool_t uni_browseserverbyhandle_1_svc();
#define	Uni_GetServiceStatus ((unsigned long)(22))
extern  enum clnt_stat uni_getservicestatus_1();
extern  bool_t uni_getservicestatus_1_svc();
#define	Uni_GetARCserveLog ((unsigned long)(23))
extern  enum clnt_stat uni_getarcservelog_1();
extern  bool_t uni_getarcservelog_1_svc();
#define	Uni_GetLogNames ((unsigned long)(24))
extern  enum clnt_stat uni_getlognames_1();
extern  bool_t uni_getlognames_1_svc();
#define	Uni_DeleteLog ((unsigned long)(25))
extern  enum clnt_stat uni_deletelog_1();
extern  bool_t uni_deletelog_1_svc();
#define	Uni_GetObjectAttributes ((unsigned long)(26))
extern  enum clnt_stat uni_getobjectattributes_1();
extern  bool_t uni_getobjectattributes_1_svc();   //YES Chnage
#define	Uni_GetProductList ((unsigned long)(27))
extern  enum clnt_stat uni_getproductlist_1();
extern  bool_t uni_getproductlist_1_svc();
#define	Uni_GetGroupsForUser ((unsigned long)(28))
extern  enum clnt_stat uni_getgroupsforuser_1();
extern  bool_t uni_getgroupsforuser_1_svc();

/*[Start]******Added by CA-TCG***************************/
#define UNI_GetServerMultiNICListRpc ((unsigned long)(29))
extern  enum clnt_stat uni_getservermultiniclistrpc_1();
extern  bool_t uni_getservermultiniclistrpc_1_svc();  
#define UNI_ConfigServerMultiNICRpc ((unsigned long)(30))
extern  enum clnt_stat uni_configservermultinicrpc_1();
extern  bool_t uni_configservermultinicrpc_1_svc(); 
#define UNI_isImageOptionEnable ((unsigned long)(31))/*Compiler wants a space between "Enable" & "(" rajarshi 0402*/
extern  enum clnt_stat uni_isimageoptionenable_1();
extern  bool_t uni_isimageoptionenable_1_svc(); 
#define UNI_GetGwResourceList ((unsigned long)(32))
extern  enum clnt_stat uni_getgwresourcelist_1();
extern  bool_t uni_getgwresourcelist_1_svc(); 
#define UNI_GetPoolVolumeList ((unsigned long)(33)) /*Compiler wants a space between "List" & "(" rajarshi 0402*/
extern  enum clnt_stat uni_getpoolvolumelist_1();
extern  bool_t uni_getpoolvolumelist_1_svc();
//Added by CATS
#define UNI_GetSystemInfo ((unsigned long)(34))
extern  enum clnt_stat uni_getSystemInfo_1();
extern  bool_t uni_getSystemInfo_1_svc();    
/*[End]*******Added by CA-TCG****************************/
extern int discoverserv_1_freeresult();
#endif /* K&R C */

struct uni_readfilecallback_1_argument {
	char *pszClientName;
	char *fullPath;
	u_long fileHandle;
	PUNIV_PARAM_READINPUT readBuf;
};
typedef struct uni_readfilecallback_1_argument uni_readfilecallback_1_argument;

struct uni_listservercallback_1_argument {
	char *pszClientName;
	PUNIV_PARAM_LISTINPUT listServer;
};
typedef struct uni_listservercallback_1_argument uni_listservercallback_1_argument;

#define	UNI_DISC_CALLBACK_PROG ((unsigned long)(89))
#define	UNI_DISC_CALLBACK_VERS_1 ((unsigned long)(1))

#if defined(__STDC__) || defined(__cplusplus)
#define	UNI_ReadFileCallback ((unsigned long)(26))
extern  enum clnt_stat uni_readfilecallback_1(char *, char *, u_long , PUNIV_PARAM_READINPUT , UNIV_RESULT_READFILE *, CLIENT *);
extern  bool_t uni_readfilecallback_1_svc(char *, char *, u_long , PUNIV_PARAM_READINPUT , UNIV_RESULT_READFILE *, struct svc_req *);
#define	UNI_ListServerCallback ((unsigned long)(27))
extern  enum clnt_stat uni_listservercallback_1(char *, PUNIV_PARAM_LISTINPUT , UNIV_RESULT_LISTCALLBACK *, CLIENT *);
extern  bool_t uni_listservercallback_1_svc(char *, PUNIV_PARAM_LISTINPUT , UNIV_RESULT_LISTCALLBACK *, struct svc_req *);
extern int uni_disc_callback_prog_1_freeresult(SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define	UNI_ReadFileCallback ((unsigned long)(26))
extern  enum clnt_stat uni_readfilecallback_1();
extern  bool_t uni_readfilecallback_1_svc();
#define	UNI_ListServerCallback ((unsigned long)(27))
extern  enum clnt_stat uni_listservercallback_1();
extern  bool_t uni_listservercallback_1_svc();
extern int uni_disc_callback_prog_1_freeresult();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_char512(XDR *, char512);
extern  bool_t xdr_char64(XDR *, char64);

extern  bool_t xdr_char15(XDR *,char15);	//Added by CATS

/*[Start]*******Added by CA-TCG**********************/
extern  bool_t xdr_char28(XDR *,char28);
extern  bool_t xdr_char128(XDR *,char128);
extern  bool_t xdr_char16(XDR *,char16);

extern bool_t xdr__IP_STRT(XDR *,_IP_STRT*);
extern bool_t xdr_IP_STRT(XDR *,IP_STRT*);
extern bool_t xdr__UNIV_RESULT_MULTI_NIC(XDR *,_UNIV_RESULT_MULTI_NIC*);
extern bool_t xdr_UNIV_RESULT_MULTI_NIC(XDR *,UNIV_RESULT_MULTI_NIC*);
//extern bool_t xdr__GW_RES(XDR *,_GW_RES*);
//extern bool_t xdr_GW_RES(XDR *,GW_RES*); 
//extern bool_t xdr__UNIV_RESULT_GW_RES_LIST(XDR *,_UNIV_RESULT_GW_RES_LIST*);
//extern bool_t xdr_UNIV_RESULT_GW_RES_LIST(XDR *,UNIV_RESULT_GW_RES_LIST*);
extern bool_t xdr__UNIV_RESULT_GWRESLIST(XDR *, _UNIV_RESULT_SERVERDETAIL *);
extern bool_t xdr_UNIV_RESULT_GWRESLIST(XDR *, UNIV_RESULT_SERVERDETAIL *);
extern bool_t xdr__UNI_POOLVOLUMELIST(XDR *,_UNI_POOLVOLUMELIST*);
extern bool_t xdr_UNI_POOLVOLUMELIST(XDR *,UNI_POOLVOLUMELIST*); 
extern bool_t xdr__UNIV_RESULT_POOLVOLUMELIST (XDR *,_UNIV_RESULT_POOLVOLUMELIST *);
extern bool_t xdr_UNIV_RESULT_POOLVOLUMELIST (XDR *,UNIV_RESULT_POOLVOLUMELIST *);
/*[End]*********Added by CA-TCG**********************/ 

extern bool_t xdr__UNIV_SYSTEM_INFO (XDR *,_UNIV_SYSTEM_INFO *);	// Added by CATS
extern bool_t xdr_UNIV_SYSTEM_INFO (XDR *,UNIV_SYSTEM_INFO *);		// Added by CATS

extern  bool_t xdr__UNIV_RESULT_LISTSERVER(XDR *,_UNIV_RESULT_LISTSERVER*);
extern  bool_t xdr_UNIV_RESULT_LISTSERVER(XDR *, UNIV_RESULT_LISTSERVER*);
extern  bool_t xdr_PUNIV_RESULT_LISTSERVER(XDR *, PUNIV_RESULT_LISTSERVER*);
extern  bool_t xdr__UNIV_RESULT_GETHOMEDIR(XDR *, _UNIV_RESULT_GETHOMEDIR*);
extern  bool_t xdr_UNIV_RESULT_GETHOMEDIR(XDR *, UNIV_RESULT_GETHOMEDIR*);
extern  bool_t xdr_PUNIV_RESULT_GETHOMEDIR(XDR *, PUNIV_RESULT_GETHOMEDIR*);
extern  bool_t xdr__UNIV_RESULT_VERIFYUSER(XDR *, _UNIV_RESULT_VERIFYUSER*);
extern  bool_t xdr_UNIV_RESULT_VERIFYUSER(XDR *, UNIV_RESULT_VERIFYUSER*);
extern  bool_t xdr_PUNIV_RESULT_VERIFYUSER(XDR *, PUNIV_RESULT_VERIFYUSER*);
extern  bool_t xdr__UNIV_RESULT_ADMINRIGHTS(XDR *, _UNIV_RESULT_ADMINRIGHTS*);
extern  bool_t xdr_UNIV_RESULT_ADMINRIGHTS(XDR *, UNIV_RESULT_ADMINRIGHTS*);
extern  bool_t xdr_PUNIV_RESULT_ADMINRIGHTS(XDR *, PUNIV_RESULT_ADMINRIGHTS*);
extern  bool_t xdr__UNIV_RESULT_GETMAILDIR(XDR *, _UNIV_RESULT_GETMAILDIR*);  //YES Change 
extern  bool_t xdr_UNIV_RESULT_GETMAILDIR(XDR *, UNIV_RESULT_GETMAILDIR*);  //YES Change	
extern  bool_t xdr_PUNIV_RESULT_GETMAILDIR(XDR *, PUNIV_RESULT_GETMAILDIR*);  //YES change	

extern  bool_t xdr__UNIV_RESULT_SERVERDETAIL(XDR *, _UNIV_RESULT_SERVERDETAIL*);
extern  bool_t xdr_UNIV_RESULT_SERVERDETAIL(XDR *, UNIV_RESULT_SERVERDETAIL*);
extern  bool_t xdr_PUNIV_RESULT_SERVERDETAIL(XDR *, PUNIV_RESULT_SERVERDETAIL*);
extern  bool_t xdr__UNIV_RESULT_OPENFILE(XDR *, _UNIV_RESULT_OPENFILE*);
extern  bool_t xdr_UNIV_RESULT_OPENFILE(XDR *, UNIV_RESULT_OPENFILE*);
extern  bool_t xdr_PUNIV_RESULT_OPENFILE(XDR *, PUNIV_RESULT_OPENFILE*);
extern  bool_t xdr__UNIV_RESULT_CLOSEFILE(XDR *, _UNIV_RESULT_CLOSEFILE*);
extern  bool_t xdr_UNIV_RESULT_CLOSEFILE(XDR *, UNIV_RESULT_CLOSEFILE*);
extern  bool_t xdr_PUNIV_RESULT_CLOSEFILE(XDR *, PUNIV_RESULT_CLOSEFILE*);
extern  bool_t xdr__UNIV_RESULT_VERIFYREPORTPATH(XDR *, _UNIV_RESULT_VERIFYREPORTPATH*);
extern  bool_t xdr_UNIV_RESULT_VERIFYREPORTPATH(XDR *, UNIV_RESULT_VERIFYREPORTPATH*);
extern  bool_t xdr_PUNIV_RESULT_VERIFYREPORTPATH(XDR *, PUNIV_RESULT_VERIFYREPORTPATH*);
extern  bool_t xdr__UNIV_RESULT_READBUFFER(XDR *, _UNIV_RESULT_READBUFFER*);
extern  bool_t xdr_UNIV_RESULT_READBUFFER(XDR *, UNIV_RESULT_READBUFFER*);
extern  bool_t xdr_PUNIV_RESULT_READBUFFER(XDR *, PUNIV_RESULT_READBUFFER*);
extern  bool_t xdr__UNIV_RESULT_GETFILESIZE(XDR *, _UNIV_RESULT_GETFILESIZE*);  //YES Change
extern  bool_t xdr_UNIV_RESULT_GETFILESIZE(XDR *, UNIV_RESULT_GETFILESIZE*);   //YES Change
extern  bool_t xdr_PUNIV_RESULT_GETFILESIZE(XDR *, PUNIV_RESULT_GETFILESIZE*);  //YES Change
extern  bool_t xdr__UNIV_RESULT_HANDLEINFO(XDR *, _UNIV_RESULT_HANDLEINFO*);
extern  bool_t xdr_UNIV_RESULT_HANDLEINFO(XDR *, UNIV_RESULT_HANDLEINFO*);
extern  bool_t xdr_PUNIV_RESULT_HANDLEINFO(XDR *, PUNIV_RESULT_HANDLEINFO*);
extern  bool_t xdr__UNIV_RESULT_READFILE(XDR *, _UNIV_RESULT_READFILE*);
extern  bool_t xdr_UNIV_RESULT_READFILE(XDR *, UNIV_RESULT_READFILE*);
extern  bool_t xdr_PUNIV_RESULT_READFILE(XDR *, PUNIV_RESULT_READFILE*);
extern  bool_t xdr__UNIV_RESULT_LISTCALLBACK(XDR *, _UNIV_RESULT_LISTCALLBACK*);
extern  bool_t xdr_UNIV_RESULT_LISTCALLBACK(XDR *, UNIV_RESULT_LISTCALLBACK*);
extern  bool_t xdr_PUNIV_RESULT_LISTCALLBACK(XDR *, PUNIV_RESULT_LISTCALLBACK*);
extern  bool_t xdr__UNIV_PARAM_READINPUT(XDR *, _UNIV_PARAM_READINPUT*);
extern  bool_t xdr_UNIV_PARAM_READINPUT(XDR *, UNIV_PARAM_READINPUT*);
extern  bool_t xdr_PUNIV_PARAM_READINPUT(XDR *, PUNIV_PARAM_READINPUT*);
extern  bool_t xdr__UNIV_PARAM_LISTINPUT(XDR *, _UNIV_PARAM_LISTINPUT*);
extern  bool_t xdr_UNIV_PARAM_LISTINPUT(XDR *, UNIV_PARAM_LISTINPUT*);
extern  bool_t xdr_PUNIV_PARAM_LISTINPUT(XDR *, PUNIV_PARAM_LISTINPUT*);



/*[Start]*******Added by CA-TCG**********************/
extern  bool_t xdr_uni_getservermultiniclistrpc_1_argument(XDR *,uni_getservermultiniclistrpc_1_argument*);
extern  bool_t xdr_uni_configservermultinicrpc_1_argument(XDR *,uni_configservermultinicrpc_1_argument*);
extern  bool_t xdr_uni_isimageoptionenable_1_argument(XDR *,uni_isimageoptionenable_1_argument*);
extern  bool_t xdr_uni_getgwresourcelist_1_argument(XDR *,uni_getgwresourcelist_1_argument*);
extern  bool_t xdr_uni_getpoolvolumelist_1_argument(XDR *,uni_getpoolvolumelist_1_argument*);
extern  bool_t xdr_uni_getSystemInfo_1_argument(XDR *,uni_getSystemInfo_1_argument*); //CATS
/*[End]*******Added by CA-TCG************************/

extern  bool_t xdr_uni_listarcserveservers_1_argument(XDR *, uni_listarcserveservers_1_argument*);
extern  bool_t xdr_uni_verifyuserandpassword_1_argument(XDR *, uni_verifyuserandpassword_1_argument*);
extern  bool_t xdr_uni_getarcservehomedirectory_1_argument(XDR *, uni_getarcservehomedirectory_1_argument*);
extern  bool_t xdr_uni_verifyadminrights_1_argument(XDR *, uni_verifyadminrights_1_argument*);
extern  bool_t xdr_uni_getusermaildirectory_1_argument(XDR *, uni_getusermaildirectory_1_argument*);  //YES Change 
extern  bool_t xdr_uni_getserverdetail_1_argument(XDR *, uni_getserverdetail_1_argument*);
extern  bool_t xdr_uni_openarcfile_1_argument(XDR *, uni_openarcfile_1_argument*);
extern  bool_t xdr_uni_closearcfile_1_argument(XDR *, uni_closearcfile_1_argument*);
extern  bool_t xdr_uni_verifyreportpath_1_argument(XDR *, uni_verifyreportpath_1_argument*);  //YES Change	
extern  bool_t xdr_uni_diraccessbyuser_1_argument(XDR *, uni_diraccessbyuser_1_argument*);  //YES Change	
extern  bool_t xdr_uni_readbuffer_1_argument(XDR *, uni_readbuffer_1_argument*);   //YES change	
extern  bool_t xdr_uni_getfilesize_1_argument(XDR *, uni_getfilesize_1_argument*);  //YES Change
extern  bool_t xdr_uni_listserverbytype_1_argument(XDR *, uni_listserverbytype_1_argument*);
extern  bool_t xdr_uni_listalltree_1_argument(XDR *, uni_listalltree_1_argument*);   //YES Change	
extern  bool_t xdr_uni_ndsbrowsertree_1_argument(XDR *, uni_ndsbrowsertree_1_argument*);
extern  bool_t xdr_uni_openconnhandle_1_argument(XDR *, uni_openconnhandle_1_argument*);
extern  bool_t xdr_uni_closeconnhandle_1_argument(XDR *, uni_closeconnhandle_1_argument*);
extern  bool_t xdr_uni_gethandleinfo_1_argument(XDR *, uni_gethandleinfo_1_argument*);
extern  bool_t xdr_uni_getserverbytree_1_argument(XDR *, uni_getserverbytree_1_argument*);  //YES Change
extern  bool_t xdr_uni_browseserverbyhandle_1_argument(XDR *, uni_browseserverbyhandle_1_argument*);
extern  bool_t xdr_uni_getservicestatus_1_argument(XDR *, uni_getservicestatus_1_argument*);
extern  bool_t xdr_uni_getarcservelog_1_argument(XDR *, uni_getarcservelog_1_argument*);
extern  bool_t xdr_uni_getlognames_1_argument(XDR *, uni_getlognames_1_argument*);
extern  bool_t xdr_uni_deletelog_1_argument(XDR *, uni_deletelog_1_argument*);
extern  bool_t xdr_uni_getobjectattributes_1_argument(XDR *, uni_getobjectattributes_1_argument*);  //YES Change
extern  bool_t xdr_uni_getproductlist_1_argument(XDR *, uni_getproductlist_1_argument*);
extern  bool_t xdr_uni_getgroupsforuser_1_argument(XDR *, uni_getgroupsforuser_1_argument*);
extern  bool_t xdr_uni_readfilecallback_1_argument(XDR *, uni_readfilecallback_1_argument*);
extern  bool_t xdr_uni_listservercallback_1_argument(XDR *, uni_listservercallback_1_argument*);

#else /* K&R C */
extern bool_t xdr_char512();
extern bool_t xdr_char64();

extern bool_t xdr_char15();	//Added by CATS

/*[Start]*******Added by CA-TCG*******************/
extern bool_t xdr_char28();
extern  bool_t xdr_char128();
extern  bool_t xdr_char16();
extern bool_t xdr__IP_STRT();
extern bool_t xdr_IP_STRT();
extern bool_t xdr__UNIV_RESULT_MULTI_NIC();
extern bool_t xdr_UNIV_RESULT_MULTI_NIC();
//extern bool_t xdr__GW_RES();
//extern bool_t xdr_GW_RES(); 
//extern bool_t xdr__UNIV_RESULT_GW_RES_LIST();
//extern bool_t xdr_UNIV_RESULT_GW_RES_LIST();
extern bool_t xdr__UNIV_RESULT_GWRESLIST();
extern bool_t xdr_UNIV_RESULT_GWRESLIST();
extern bool_t xdr__UNI_POOLVOLUMELIST();
extern bool_t xdr_UNI_POOLVOLUMELIST(); 
extern bool_t xdr__UNIV_RESULT_POOLVOLUMELIST();
extern bool_t xdr_UNIV_RESULT_POOLVOLUMELIST();
/*[End]********Added by CA-TCG********************/

extern bool_t xdr__UNIV_SYSTEM_INFO();	// Added by CATS
extern bool_t xdr_UNIV_SYSTEM_INFO();		// Added by CATS

extern bool_t xdr__UNIV_RESULT_LISTSERVER();
extern bool_t xdr_UNIV_RESULT_LISTSERVER();
extern bool_t xdr_PUNIV_RESULT_LISTSERVER();
extern bool_t xdr__UNIV_RESULT_GETHOMEDIR();
extern bool_t xdr_UNIV_RESULT_GETHOMEDIR();
extern bool_t xdr_PUNIV_RESULT_GETHOMEDIR();
extern bool_t xdr__UNIV_RESULT_VERIFYUSER();
extern bool_t xdr_UNIV_RESULT_VERIFYUSER();
extern bool_t xdr_PUNIV_RESULT_VERIFYUSER();
extern bool_t xdr__UNIV_RESULT_ADMINRIGHTS();
extern bool_t xdr_UNIV_RESULT_ADMINRIGHTS();
extern bool_t xdr_PUNIV_RESULT_ADMINRIGHTS();
extern bool_t xdr__UNIV_RESULT_GETMAILDIR();  //YES Change	
extern bool_t xdr_UNIV_RESULT_GETMAILDIR();  //YES change	
extern bool_t xdr_PUNIV_RESULT_GETMAILDIR();  //YES change	
extern bool_t xdr__UNIV_RESULT_SERVERDETAIL();
extern bool_t xdr_UNIV_RESULT_SERVERDETAIL();
extern bool_t xdr_PUNIV_RESULT_SERVERDETAIL();
extern bool_t xdr__UNIV_RESULT_OPENFILE();
extern bool_t xdr_UNIV_RESULT_OPENFILE();
extern bool_t xdr_PUNIV_RESULT_OPENFILE();
extern bool_t xdr__UNIV_RESULT_CLOSEFILE();
extern bool_t xdr_UNIV_RESULT_CLOSEFILE();
extern bool_t xdr_PUNIV_RESULT_CLOSEFILE();
extern bool_t xdr__UNIV_RESULT_VERIFYREPORTPATH();
extern bool_t xdr_UNIV_RESULT_VERIFYREPORTPATH();
extern bool_t xdr_PUNIV_RESULT_VERIFYREPORTPATH();
extern bool_t xdr__UNIV_RESULT_READBUFFER();
extern bool_t xdr_UNIV_RESULT_READBUFFER();
extern bool_t xdr_PUNIV_RESULT_READBUFFER();
extern bool_t xdr__UNIV_RESULT_GETFILESIZE();  //YES Change	
extern bool_t xdr_UNIV_RESULT_GETFILESIZE();  //YES Change	
extern bool_t xdr_PUNIV_RESULT_GETFILESIZE();  //YES Change	
extern bool_t xdr__UNIV_RESULT_HANDLEINFO();
extern bool_t xdr_UNIV_RESULT_HANDLEINFO();
extern bool_t xdr_PUNIV_RESULT_HANDLEINFO();
extern bool_t xdr__UNIV_RESULT_READFILE();
extern bool_t xdr_UNIV_RESULT_READFILE();
extern bool_t xdr_PUNIV_RESULT_READFILE();
extern bool_t xdr__UNIV_RESULT_LISTCALLBACK();
extern bool_t xdr_UNIV_RESULT_LISTCALLBACK();
extern bool_t xdr_PUNIV_RESULT_LISTCALLBACK();
extern bool_t xdr__UNIV_PARAM_READINPUT();
extern bool_t xdr_UNIV_PARAM_READINPUT();
extern bool_t xdr_PUNIV_PARAM_READINPUT();
extern bool_t xdr__UNIV_PARAM_LISTINPUT();
extern bool_t xdr_UNIV_PARAM_LISTINPUT();
extern bool_t xdr_PUNIV_PARAM_LISTINPUT();


/*[Start]*******Added by CA-TCG*******************/
extern  bool_t xdr_uni_getservermultiniclistrpc_1_argument();
extern  bool_t xdr_uni_configservermultinicrpc_1_argument();
extern  bool_t xdr_uni_isimageoptionenable_1_argument();
extern  bool_t xdr_uni_getgwresourcelist_1_argument();
extern  bool_t xdr_uni_getpoolvolumelist_1_argument();

extern  bool_t xdr_uni_getSystemInfo_1_argument();	//CATS
/*[End]*********Added by CA-TCG*******************/

 
extern bool_t xdr_uni_listarcserveservers_1_argument();
extern bool_t xdr_uni_verifyuserandpassword_1_argument();
extern bool_t xdr_uni_getarcservehomedirectory_1_argument();
extern bool_t xdr_uni_verifyadminrights_1_argument();
extern bool_t xdr_uni_getusermaildirectory_1_argument();   //Yes Change	
extern bool_t xdr_uni_getserverdetail_1_argument();
extern bool_t xdr_uni_openarcfile_1_argument();
extern bool_t xdr_uni_closearcfile_1_argument();
extern bool_t xdr_uni_verifyreportpath_1_argument();  //YES Change	
extern bool_t xdr_uni_diraccessbyuser_1_argument();  //YES Change	
extern bool_t xdr_uni_readbuffer_1_argument();    //YES change	
extern bool_t xdr_uni_getfilesize_1_argument();    //YES Change	
extern bool_t xdr_uni_listserverbytype_1_argument();
extern bool_t xdr_uni_listalltree_1_argument();   //YES Change	

extern bool_t xdr_uni_ndsbrowsertree_1_argument();
extern bool_t xdr_uni_openconnhandle_1_argument();
extern bool_t xdr_uni_closeconnhandle_1_argument();
extern bool_t xdr_uni_gethandleinfo_1_argument();
extern bool_t xdr_uni_getserverbytree_1_argument();   //YES Change	

extern bool_t xdr_uni_browseserverbyhandle_1_argument();
extern bool_t xdr_uni_getservicestatus_1_argument();
extern bool_t xdr_uni_getarcservelog_1_argument();
extern bool_t xdr_uni_getlognames_1_argument();
extern bool_t xdr_uni_deletelog_1_argument();
extern bool_t xdr_uni_getobjectattributes_1_argument();  //YES Change

extern bool_t xdr_uni_getproductlist_1_argument();
extern bool_t xdr_uni_getgroupsforuser_1_argument();
extern bool_t xdr_uni_readfilecallback_1_argument();
extern bool_t xdr_uni_listservercallback_1_argument();

#endif /* K&R C */

#if defined(__STDC__) || defined(__cplusplus)
short GetSystemInformation( char *, UNIV_SYSTEM_INFO * );	//CATS
#else
short GetSystemInformation( char *, UNIV_SYSTEM_INFO * );	//CATS
#endif
//UNICODE_SUPPORT_START
short GetSystemInformationW(wchar_t* pszServerNameW, UNIV_SYSTEM_INFOW *clnt_resW);
//UNICODE_SUPPORT_END

#ifdef __cplusplus
}
#endif

#endif /* !_DISCOVER_H_RPCGEN */
