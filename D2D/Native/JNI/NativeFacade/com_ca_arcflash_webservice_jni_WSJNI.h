/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_ca_arcflash_webservice_jni_WSJNI */

#ifndef _Included_com_ca_arcflash_webservice_jni_WSJNI
#define _Included_com_ca_arcflash_webservice_jni_WSJNI
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    validate
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_validate
  (JNIEnv *, jclass, jstring, jstring, jstring);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    browseAppInforamtion
 * Signature: (Ljava/util/ArrayList;)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_browseAppInforamtion
  (JNIEnv *, jclass, jobject);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    BrowseVolumeInforamtion
 * Signature: (Ljava/util/ArrayList;ZLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_BrowseVolumeInforamtion
  (JNIEnv *, jclass, jobject, jboolean, jstring);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    browseAppInforamtion2File
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_browseAppInforamtion2File
  (JNIEnv *, jclass, jstring);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    browseCatalogDetail
 * Signature: (Ljava/lang/String;Ljava/util/ArrayList;)I
 */
JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_browseCatalogDetail
  (JNIEnv *, jclass, jstring, jobject);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    browseCatalogChildren
 * Signature: (Ljava/lang/String;JLjava/util/ArrayList;)I
 */
JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_browseCatalogChildren
  (JNIEnv *, jclass, jstring, jlong, jobject);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    GenerateIndexFiles
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GenerateIndexFiles
  (JNIEnv *, jclass, jstring);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    OpenCatalogFile
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_OpenCatalogFile
  (JNIEnv *, jclass, jstring);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    GetChildren
 * Signature: (JJLjava/util/ArrayList;)I
 */
JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetChildren
  (JNIEnv *, jclass, jlong, jlong, jobject);

/*
* Class:     com_ca_arcflash_webservice_jni_WSJNI
* Method:    GetChildrenCount
* Signature: (JJ)J
*/
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetChildrenCount
(JNIEnv *, jclass, jlong, jlong, jobject);

/*
* Class:     com_ca_arcflash_webservice_jni_WSJNI
* Method:    GetChildrenEx
* Signature: (JJIILcom/ca/arcflash/webservice/jni/model/JRWLong;)J
*/
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetChildrenEx
(JNIEnv *, jclass, jlong, jlong, jint, jint, jobject, jobject);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    GetFullPath
 * Signature: (JJLjava/util/ArrayList;)I
 */
JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetFullPath
  (JNIEnv *, jclass, jlong, jlong, jobject);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    CloseCatalogFile
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_CloseCatalogFile
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    SearchCatalogFile
 * Signature: (Ljava/lang/String;Ljava/lang/String;ZZLjava/lang/String;Lcom/ca/arcflash/webservice/jni/model/JRWLong;)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_SearchCatalogFile
  (JNIEnv *, jclass, jstring, jstring, jboolean, jboolean, jstring, jobject);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    FindNextCatalogFile
 * Signature: (JJLjava/util/ArrayList;Lcom/ca/arcflash/webservice/jni/model/JRWLong;Lcom/ca/arcflash/webservice/jni/model/JRWLong;)I
 */
JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_FindNextCatalogFile
  (JNIEnv *, jclass, jlong, jlong, jobject, jobject, jobject);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    GetD2DFileSizeByte
 * Signature: (JJLjava/lang/String;)I
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetD2DFileSizeByte
  (JNIEnv *, jclass, jstring, jstring, jstring, jstring, jint, jint, jint);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    GetFindFullPath
 * Signature: (JJLjava/util/ArrayList;)I
 */
JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetFindFullPath
  (JNIEnv *, jclass, jlong, jlong, jobject);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    FindCloseCatalogFile
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_FindCloseCatalogFile
  (JNIEnv *, jclass, jlong);

JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_SearchCatalogFileEx
(JNIEnv *env, jclass clz, jstring catalogFileFolder, jstring sDir, jboolean bCaseSensitive, jboolean bIncludeSubDir, jstring pattern, jobject totalCnt);

JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_FindNextCatalogFileEx
(JNIEnv *env, jclass clz, jlong jhandle, jlong nRequest, jobject retArr, jobject jnFound, jobject jnCurrent);


/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    AFBackup
 * Signature: (Lcom/ca/arcflash/webservice/jni/model/JJobScript;)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFBackup
  (JNIEnv *, jclass, jobject);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    AFRestore
 * Signature: (Lcom/ca/arcflash/webservice/jni/model/JJobScript;)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFRestore
  (JNIEnv *, jclass, jobject);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    AFCopy
 * Signature: (Lcom/ca/arcflash/webservice/jni/model/JJobScript;)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFCopy
  (JNIEnv *, jclass, jobject);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    AFSetJobStatus
 * Signature: (Lcom/ca/arcflash/webservice/jni/model/JJobStatus;)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFSetJobStatus
  (JNIEnv *, jclass, jobject);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    AFGetJobStatus
 * Signature: (Lcom/ca/arcflash/webservice/jni/model/JJobStatus;)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFGetJobStatus
  (JNIEnv *, jclass, jobject);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    GetRecoveryPoint
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Z)I
 */
JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetRecoveryPoint
  (JNIEnv *, jclass, jstring, jstring, jstring, jstring, jstring, jstring, jobject, jboolean);

/*
* Class:     com_ca_arcflash_webservice_jni_WSJNI
* Method:    ASBUGetRecoveryPoint
* Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Z)I
*/
JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_ASBUGetRecoveryPoint
  (JNIEnv *env, jclass, jstring, jstring, jstring, jobject, jboolean);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    GetBackupInfoSummary
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/ca/arcflash/webservice/jni/model/JBackupInfoSummary;Z)I
 */
JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetBackupInfoSummary
  (JNIEnv *, jclass, jstring, jstring, jstring, jstring, jobject, jboolean,jstring);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    GetProtectionInformation
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)I
 */
JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetProtectionInformation
  (JNIEnv *, jclass, jstring, jstring, jstring, jstring, jobject);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    GetProtectionInformation
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)I
 */
JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetCopyProtectionInformation
  (JNIEnv *, jclass, jstring, jstring, jstring, jstring, jobject);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    GetRecentBakcupInfo
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/util/List;)I
 */
JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetRecentBakcupInfo
  (JNIEnv *, jclass, jstring, jstring, jstring, jstring, jint, jint, jint, jobject,jstring);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    GetRecentBackupsByServerTime
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/util/List;)I
 */
JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetRecentBackupsByServerTime
  (JNIEnv *, jclass, jstring, jstring, jstring, jstring, jint, jint, jstring, jstring, jobject,jstring);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    GetBakcupInfo
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/util/List;)I
 */
JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetBakcupInfo
(JNIEnv *, jclass, jstring, jstring, jstring, jstring, jstring, jstring,jint,jobject);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    LogActivity
 * Signature: (JJ[Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_LogActivity
  (JNIEnv *, jclass, jlong, jlong, jobjectArray);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    LogActivityWithID
 * Signature: (JJJ[Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_LogActivityWithID
  (JNIEnv *, jclass, jlong, jlong, jlong, jobjectArray);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    LogActivity
 * Signature: (JJ[Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_VMLogActivity
  (JNIEnv *, jclass, jlong, jlong, jobjectArray,jstring);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    LogActivityWithID
 * Signature: (JJJ[Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_VMLogActivityWithID
  (JNIEnv *, jclass, jlong, jlong, jlong, jobjectArray,jstring);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    LogActivityWithDetailsEx
 * Signature: (JJJ[Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_LogActivityWithDetailsEx
  (JNIEnv *, jclass, jobject, jlong, jobjectArray);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    GetLogActivity
 * Signature: (IILcom/ca/arcflash/webservice/jni/model/JActivityLogResult;)I
 */
JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetLogActivity
  (JNIEnv *, jclass, jint, jint, jobject);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    GetJobLogActivity
 * Signature: (IILcom/ca/arcflash/webservice/jni/model/JActivityLogResult;)I
 */
JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetJobLogActivity
  (JNIEnv *, jclass, jlong, jint, jint, jobject);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    DeleteLogActivity
 * Signature: (IIIIII)I
 */
JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_DeleteLogActivity
  (JNIEnv *, jclass, jint, jint, jint, jint, jint, jint);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    AFEncryptString
 * Signature: (Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFEncryptString
  (JNIEnv *, jclass, jstring);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    AFDecryptString
 * Signature: (Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFDecryptString
  (JNIEnv *, jclass, jstring);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    AFEncryptStringEx
 * Signature: (Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFEncryptStringEx
  (JNIEnv *, jclass, jstring);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    AFDecryptStringEx
 * Signature: (Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFDecryptStringEx
  (JNIEnv *, jclass, jstring);


JNIEXPORT jbyteArray JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFEncryptBinary		//zxh,add JNI
(JNIEnv *env, jclass clz, jbyteArray inputArray);

JNIEXPORT jbyteArray JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFDecryptBinary		//zxh,add JNI
(JNIEnv *env, jclass clz, jbyteArray inputArray);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    AFCheckCompressLevelChanged
 * Signature: (Lcom/ca/arcflash/webservice/jni/model/JNetConnInfo;I)Z
 */
JNIEXPORT jboolean JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFCheckCompressLevelChanged
  (JNIEnv *, jclass, jobject, jint);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    checkRecoveryVMJobExist
 * Signature: (Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jboolean JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFCheckRecoveryVMJobExist
  (JNIEnv *, jclass, jstring, jstring);


/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    AFCheckEncryptionAlgorithmAndKeyChanged
 * Signature: (Lcom/ca/arcflash/webservice/jni/model/JNetConnInfo;I)Z
 */
JNIEXPORT jboolean JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFCheckEncryptionAlgorithmAndKeyChanged
  (JNIEnv *, jclass, jobject, jint, jstring);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    StartToDeploy
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;ZZZLcom/ca/arcflash/webservice/jni/model/IRemoteDeployCallback;)V
 */
JNIEXPORT void JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_StartToDeploy
  (JNIEnv *, jclass, jstring, jstring, jstring, jstring, jstring, jstring, jstring, jint, jstring, jboolean, jboolean, jboolean, jobject);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    StartToDeploy
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;ZZZLcom/ca/arcflash/webservice/jni/model/IRemoteDeployCallback;)V
 */
JNIEXPORT void JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_StartToDeployWithDriver
  (JNIEnv *, jclass, jstring, jstring, jstring, jstring, jstring, jstring, jstring, jint, jstring, jboolean, jboolean, jboolean, jboolean, jboolean, jobject);

  
/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    BrowseFileFolderItem
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/ArrayList;)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_BrowseFileFolderItem
  (JNIEnv *, jclass, jstring, jstring, jstring, jstring, jobject);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    BrowseFileFolderItem
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/ArrayList;)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_BrowseFileFolderItemEx
  (JNIEnv *, jclass, jstring, jint, jint, jstring, jstring, jstring, jobject);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    AFCheckFolderAccess
 * Signature: (Lcom/ca/arcflash/webservice/jni/model/JNetConnInfo;Ljava/util/ArrayList;)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFCheckFolderAccess
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    AFInitDestination
 * Signature: (Lcom/ca/arcflash/webservice/jni/model/JNetConnInfo;Lcom/ca/arcflash/webservice/jni/model/JNetConnInfo;JZ)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFInitDestination
  (JNIEnv *, jclass, jobject, jobject, jlong, jboolean);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    AFRetrieveSharedResource
 * Signature: (Lcom/ca/arcflash/webservice/jni/model/JNetConnInfo;Ljava/util/ArrayList;)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFRetrieveSharedResource
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    createJobMonitor
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_createJobMonitor
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    getJobMonitor
 * Signature: (JLcom/ca/arcflash/webservice/jni/model/JJobMonitor;)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_getJobMonitor
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    releaseJobMonitor
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_releaseJobMonitor
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    getJobID
 * Signature: (J)V
 */
JNIEXPORT jboolean JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_getJobID
  (JNIEnv *, jclass, jobject);

/*
* Class:     com_ca_arcflash_webservice_jni_WSJNI
* Method:    getJobIDs
* Signature: (J)V
*/
JNIEXPORT jboolean JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_getJobIDs
(JNIEnv *, jclass, jint, jobject);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    getCurrentJobID
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_getCurrentJobID
  (JNIEnv *, jclass);

/*
* Class:     com_ca_arcflash_webservice_jni_WSJNI
* Method:    getOSVersion
* Signature: ()J
*/
JNIEXPORT jstring JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_getOSVersion
(JNIEnv *, jclass);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    checkJobExist
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_checkJobExist
  (JNIEnv *, jclass);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    checkBMRPerformed
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_checkBMRPerformed
  (JNIEnv *, jclass);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    cancelJob
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_cancelJob
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    updateThrottling
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_updateThrottling
(JNIEnv *env, jclass clz, jlong jobID, jlong throttling);


/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    TestADTConnect
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLcom/ca/arcflash/webservice/data/DeployUpgradeInfo;)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_TestADTConnect
  (JNIEnv *, jclass, jstring, jstring, jstring, jstring, jstring, jstring, jstring, jboolean,jobject);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    TestADTConnect
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLcom/ca/arcflash/webservice/data/DeployUpgradeInfo;)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_TestADTConnectWithDriver
  (JNIEnv *, jclass, jstring, jstring, jstring, jstring, jstring, jstring, jstring, jboolean, jboolean, jobject);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    AFGetErrorMsg
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFGetErrorMsg
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    AFCheckDestValid
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFCheckDestValid
(JNIEnv *env, jclass, jstring dir);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    AFGetPathMaxLength
 * Signature: (J);
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFGetPathMaxLength
(JNIEnv *env, jclass);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    AFGetVSpherePathMaxLength
 * Signature: (J);
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFGetVSpherePathMaxLength
(JNIEnv *env, jclass);
 
/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    AFCheckDestNeedHostName
 * Signature: (Ljava/lang/String;Ljava/util/ArrayList;Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFCheckDestNeedHostName
  (JNIEnv *, jclass, jstring, jstring, jstring, jboolean, jobject);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    AFCheckDestNeedHostName
 * Signature: (Ljava/lang/String;Ljava/util/ArrayList;Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFCheckDestNeedVMInfo
  (JNIEnv *, jclass, jstring, jstring, jobject,jstring);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    AFSaveAdminAccount
 * Signature: (Lcom/ca/arcflash/webservice/data/backup/Account;)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFSaveAdminAccount
  (JNIEnv *, jclass, jobject);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    AFCheckAdminAccountValid
 * Signature: (Lcom/ca/arcflash/webservice/data/backup/Account;)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFCheckAdminAccountValid
  (JNIEnv *, jclass, jobject);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    AFReadAdminAccount
 * Signature: (Lcom/ca/arcflash/webservice/data/backup/Account;)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFReadAdminAccount
  (JNIEnv *, jclass, jobject);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    AFGetBakDestDriveType
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFGetBakDestDriveType
 (JNIEnv *env, jclass, jstring dir);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    AFCreateDir
 * Signature: (Ljava/lang/String;Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFCreateDir
(JNIEnv *env, jclass clz, jstring parentdir, jstring subdir);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    AFCutConnection
 * Signature: (Lcom/ca/arcflash/webservice/jni/model/JNetConnInfo;Z)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFCutConnection
(JNIEnv *env, jclass clz, jobject jConn, jboolean force);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    AFCreateConnection
 * Signature: (Lcom/ca/arcflash/webservice/jni/model/JNetConnInfo;)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFCreateConnection
(JNIEnv *env, jclass clz, jobject jConn);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    AFCheckPathAccess
 * Signature: (Lcom/ca/arcflash/webservice/jni/model/JNetConnInfo;)Z
 */
JNIEXPORT jboolean JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFCheckPathAccess
(JNIEnv *env, jclass clz, jobject jConn);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    AFSetThreshold
 * Signature: (Lcom/ca/arcflash/webservice/jni/model/JNetConnInfo;)Z
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFSetThreshold
(JNIEnv *, jclass, jlong);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    AFTryToFindDest
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jstring JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFTryToFindDest
(JNIEnv *, jclass, jstring oldDestination);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    AFCheckSQLAlternateLocation
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/ArrayList;)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFCheckSQLAlternateLocation
(JNIEnv *, jclass, jstring, jstring, jstring, jobject);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    AFCheckBLILic
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFCheckBLILic
  (JNIEnv *, jclass);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    AFCheckDestContainRecoverPoint
 * Signature: (Lcom/ca/arcflash/webservice/jni/model/JNetConnInfo;)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFCheckDestContainRecoverPoint
(JNIEnv *, jclass, jobject);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    AFCheckDirPathValid
 * Signature: (Lcom/ca/arcflash/webservice/jni/model/JNetConnInfo;)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFCheckDirPathValid
(JNIEnv *, jclass, jobject);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    AFCheckBaseLic
 */
JNIEXPORT jboolean JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFCheckBaseLic
  (JNIEnv *, jclass);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    GetLocalPackage
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetLocalPackage
  (JNIEnv *, jclass);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    GatherExcludedFileListInWriter
 * Signature: (Ljava/util/List;Ljava/util/List;)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GatherExcludedFileListInWriter
(JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    GetDestSizeInformation
 * Signature: (Ljava/lang/String;Lcom/ca/arcflash/webservice/jni/model/JBackupDestinationInfo;)I
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetDestSizeInformation
  (JNIEnv *, jclass, jstring, jobject);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    RegenerateWriterMetadata
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_RegenerateWriterMetadata
  (JNIEnv *, jclass);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    AFGetLocalDestVolumes
 * Signature: (Ljava/lang/String;Ljava/util/ArrayList;)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFGetLocalDestVolumes
  (JNIEnv *, jclass, jstring, jobject);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    GetAllBackupDestinations
 * Signature: (Ljava/lang/String;Ljava/util/List;)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetAllBackupDestinations
  (JNIEnv *, jclass, jstring, jobject);
/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    GetBackupItem
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetBackupItem
  (JNIEnv *, jclass, jstring, jstring, jstring, jstring, jstring, jobject);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    AFGetNetworkPathForMappedDrive
 * Signature: (Ljava/lang/String;Ljava/util/List;)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFGetNetworkPathForMappedDrive
  (JNIEnv *, jclass, jstring, jobject);
/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    GetReplicatedSessions
 * Signature: (Ljava/lang/String;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetReplicatedSessions
  (JNIEnv *, jclass, jstring, jobject, jstring, jstring, jstring, jstring);
  
/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    HyperVRep
 * Signature: (Lcom/ca/arcflash/webservice/jni/HyperVRepParameterModel;)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_HyperVRep
  (JNIEnv *, jclass, jobject);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    getFlashAdrConfigureXML
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_getFlashAdrConfigureXML
  (JNIEnv *, jclass, jstring);
  
/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    getDiskSignatureFromGPTGuid
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_getDiskSignatureFromGPTGuid
  (JNIEnv *, jclass, jstring);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    GetHostAdapterList
 * Signature: ()Ljava/util/Map;
 */
JNIEXPORT jobject JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetHostAdapterList
  (JNIEnv *, jclass);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    EnableHostDHCP
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_EnableHostDHCP
  (JNIEnv *, jclass, jstring);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    EnableHostStatic
 * Signature: (Ljava/lang/String;Ljava/util/List;Ljava/util/List;)V
 */
JNIEXPORT void JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_EnableHostStatic
  (JNIEnv *, jclass, jstring, jobject, jobject);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    EnableHostDNS
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_EnableHostDNS
  (JNIEnv *, jclass, jstring);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    SetHostDNSDomain
 * Signature: (Ljava/lang/String;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_SetHostDNSDomain
  (JNIEnv *, jclass, jstring, jstring);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    SetHostGateways
 * Signature: (Ljava/lang/String;Ljava/util/List;Ljava/util/List;)V
 */
JNIEXPORT void JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_SetHostGateways
  (JNIEnv *, jclass, jstring, jobject, jobject);
  
/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    SetHostDNSServerSearchOrder
 * Signature: (Ljava/lang/String;Ljava/util/List;)V
 */
JNIEXPORT void JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_SetHostDNSServerSearchOrder
  (JNIEnv *, jclass, jstring, jobject);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    AFGetLicenseInfo
 * Signature: (Ljava/util/List;)Lcom/ca/arcflash/webservice/data/LicInfo;
 */
JNIEXPORT jobject JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFGetLicenseInfo
  (JNIEnv *, jclass, jobject);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    AFGetLicenseInfoEx
 * Signature: (Ljava/util/List;)Lcom/ca/arcflash/webservice/data/LicInfo;
 */
JNIEXPORT jobject JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFGetLicenseInfoEx
  (JNIEnv *, jclass, jobject, jboolean bFilterLicInfo);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    AFGetLicenseError
 * Signature: (Ljava/util/List;)Lcom/ca/arcflash/webservice/data/LicInfo;
 */
JNIEXPORT jobject JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFGetLicenseError
  (JNIEnv *, jclass);



JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFGetLicenseStatus(JNIEnv *env, jclass clz, jboolean isStandalone);
 
/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    AFCheckSessExist
 * Signature: (Ljava/lang/String;J)Z
 */
JNIEXPORT jboolean JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFCheckSessExist
  (JNIEnv *, jclass, jstring, jlong);


/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    AFGetMntFromPath
 * Signature: (Ljava/lang/String;Ljava/util/List;)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFGetMntFromPath
  (JNIEnv *, jclass, jstring, jobject);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    AFValidateSessPassword
 * Signature: (Ljava/lang/String;Ljava/lang/String;J)Z
 */
JNIEXPORT jboolean JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFValidateSessPassword
  (JNIEnv *, jclass, jstring, jstring, jlong);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    AFValidateSessPasswordByHash
 *			  password: string of password
			  lpwdlen: length of password string, does not include the trailing '\0'
			  hasvalue: password hash value string
			  lhashlen: length of hash value string
 */
JNIEXPORT jboolean JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFValidateSessPasswordByHash
  (JNIEnv *env, jclass clz, jstring password, jlong lpwdlen, jstring hashvalue, jlong lhashlen);


JNIEXPORT jobject JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFGetSessionPasswordBySessionGuid
(JNIEnv *, jclass, jobjectArray);

JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_updateSessionPasswordByGUID
(JNIEnv *, jclass, jobjectArray, jobjectArray);

/*
* ----------------------------------------------------------------------------------------------
*                                     {{{ Update Manager Start
* ----------------------------------------------------------------------------------------------
*/
/* !!! To Delete
 * Class:     com_ca_arcflash_ui_trayicon_PMCommInterface
 * Method:    CreateFile
 * Signature: (Ljava/lang/String;IIIIII)I
 */
JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_CreateFile
  (JNIEnv *, jclass, jstring, jint, jint, jint, jint, jint, jint);

/* !!! To Delete
 */
JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_CreateFileEx
  (JNIEnv *, jclass, jstring, jint, jint, jint, jint, jint, jint, jint);

/* !!! To Delete
 * Class:     Java_com_ca_arcflash_webservice_jni_WSJNI
 * Method:    ReadFile
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_ReadFile
  (JNIEnv *, jclass, jint);

/* !!! To Delete
 * Class:     Java_com_ca_arcflash_webservice_jni_WSJNI
 * Method:    ReadFile
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_ReadFileEx
  (JNIEnv *, jclass, jint, jint);

/* !!! To Delete
 * Class:     Java_com_ca_arcflash_webservice_jni_WSJNI
 * Method:    IsPatchManagerRunning
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_IsPatchManagerRunning
  (JNIEnv *, jclass, jstring);

/* !!! To Delete
 * Class:     Java_com_ca_arcflash_webservice_jni_WSJNI
 * Method:    IsPatchManagerRunning
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_IsPatchManagerRunningEx
  (JNIEnv *, jclass, jstring, jint);


/* !!! To Delete
 * Class:     com_ca_arcflash_ui_trayicon_PMCommInterface
 * Method:    CloseFile
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_CloseFile
  (JNIEnv *, jclass, jint);


/* !!! To Delete
 * Class:     com_ca_arcflash_ui_trayicon_PMCommInterface
 * Method:    CloseFile
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_CloseFileEx
  (JNIEnv *, jclass, jint, jint);

/* !!! To Delete
 * Class:     Java_com_ca_arcflash_webservice_jni_WSJNI
 * Method:    WriteFile
 * Signature: (ILjava/lang/String;I)I
 */
JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_WriteFile
  (JNIEnv *, jclass, jint, jstring, jint);

/* !!! To Delete
 * Class:     Java_com_ca_arcflash_webservice_jni_WSJNI
 * Method:    WriteFile
 * Signature: (ILjava/lang/String;I)I
 */
JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_WriteFileEx
  (JNIEnv *, jclass, jint, jstring, jint, jint);

/* !!! To Delete
*/
JNIEXPORT jobject JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_testDownloadServerConnection
( JNIEnv *, jclass,jstring strDownloadURI, jint iServerType, jstring strDownloadServer, jstring strDownloadServerPort, 
  jstring strProxyServerName, jstring strProxyPort, jstring strProxyUserName, jstring strProxyPassword);

/* !!! To Delete
*/
JNIEXPORT jobject JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_testDownloadServerConnectionEx
( JNIEnv *, jclass,jstring strDownloadURI, jint iServerType, jstring strDownloadServer, jstring strDownloadServerPort, 
  jstring strProxyServerName, jstring strProxyPort, jstring strProxyUserName, jstring strProxyPassword, jint );


/* !!! To Delete
*/
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFRunPatchJob
  (JNIEnv *env,jclass className,jstring spatchURL);

/* !!! To Delete
*/
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFRunPatchJobEx
  (JNIEnv *env,jclass className,jstring spatchURL, jint type);

/* !!! To Delete
 * Class:     Java_com_ca_arcflash_webservice_jni_WSJNI
 * Method:    GetLastError
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetLastError
  (JNIEnv *, jclass);

/* !!! To Delete
 * Class:     Java_com_ca_arcflash_webservice_jni_WSJNI
 * Method:    FormatMessage
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_FormatMessage
  (JNIEnv *, jclass, jint);

/* 
 * Class:     Java_com_ca_arcflash_webservice_jni_WSJNI
 * Method:    IsPatchManagerBusy
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_IsPatchManagerBusy
  (JNIEnv *, jclass, jstring);

/*
 * Class:     Java_com_ca_arcflash_webservice_jni_WSJNI
 * Method:    IsPatchManagerBusy
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_IsPatchManagerBusyEx
  (JNIEnv *, jclass, jstring, jint);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    testUpdateServerConnection
 * Signature: (ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_testUpdateServerConnection
  (JNIEnv *, jclass, jint, jstring, jstring, jstring, jstring, jstring, jstring);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    testUpdateServerConnectionEx
 * Signature: (ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)Z
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_testUpdateServerConnectionEx
  (JNIEnv *, jclass, jint, jstring, jstring, jstring, jstring, jstring, jstring, jint);


/*
* Class:     com_ca_arcflash_webservice_jni_WSJNI
* Method:    testBIUpdateServerConnection added by cliicy.luo
* Signature: (ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
*/
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_testBIUpdateServerConnection
(JNIEnv *, jclass, jint, jstring, jstring, jstring, jstring, jstring, jstring);

/*
* Class:     com_ca_arcflash_webservice_jni_WSJNI
* Method:    testBIUpdateServerConnectionEx added by cliicy.luo
* Signature: (ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)Z
*/
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_testBIUpdateServerConnectionEx
(JNIEnv *, jclass, jint, jstring, jstring, jstring, jstring, jstring, jstring, jint);


/*
* Class:     com_ca_arcflash_webservice_jni_WSJNI
* Method:    installBIUpdate
* Signature: ()I
*/
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_installBIUpdate
(JNIEnv *, jclass);

/*
* Class:     com_ca_arcflash_webservice_jni_WSJNI
* Method:    installBIUpdateEx
* Signature: (I)I
*/
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_installBIUpdateEx
(JNIEnv *, jclass, jint);


/*
* Class:     com_ca_arcflash_webservice_jni_WSJNI added by cliicy.luo
* Method:    getBIUpdateStatusFile
* Signature: ()Ljava/lang/String;
*/
JNIEXPORT jstring JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_getBIUpdateStatusFile
(JNIEnv *, jclass);

/*
* Class:     com_ca_arcflash_webservice_jni_WSJNI added by cliicy.luo
* Method:    getBIUpdateStatusFileEx
* Signature: (I)Ljava/lang/String;
*/
JNIEXPORT jstring JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_getBIUpdateStatusFileEx
(JNIEnv *, jclass, jint);

//added by cliicy.luo
/*
* Class:     com_ca_arcflash_webservice_jni_WSJNI
* Method:    checkBIUpdate
* Signature: ()I
*/
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_checkBIUpdate
(JNIEnv *, jclass);

/*
* Class:     com_ca_arcflash_webservice_jni_WSJNI
* Method:    checkBIUpdateEx
* Signature: (I)I
*/
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_checkBIUpdateEx
(JNIEnv *, jclass, jint);
//added by cliicy.luo

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    checkUpdate
 * Signature: ()I
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_checkUpdate
  (JNIEnv *, jclass);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    checkUpdateEx
 * Signature: (I)I
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_checkUpdateEx
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    installUpdate
 * Signature: ()I
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_installUpdate
  (JNIEnv *, jclass);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    installUpdateEx
 * Signature: (I)I
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_installUpdateEx
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    getUpdateStatusFile
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_getUpdateStatusFile
  (JNIEnv *, jclass);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    getUpdateStatusFileEx
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_getUpdateStatusFileEx
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    getUpdateSettingsFile
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_getUpdateSettingsFile
  (JNIEnv *env, jclass className);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    getUpdateSettingsFileEx
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_getUpdateSettingsFileEx
  (JNIEnv *env, jclass className, jint type);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    getUpdateErrorMessage
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_getUpdateErrorMessage
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    getUpdateErrorMessageEx
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_getUpdateErrorMessageEx
  (JNIEnv *, jclass, jint, jint);

/*
* ----------------------------------------------------------------------------------------------
*                             Update Manager END }}}
* ----------------------------------------------------------------------------------------------
*/
/*
 * For D2D data sync to Edge
 */
JNIEXPORT jstring JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetCacheFile4Sync
	(JNIEnv *, jclass);

JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_DeleteCacheFile4Sync
	(JNIEnv *, jclass);

JNIEXPORT jstring JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetReSyncCacheFile
	(JNIEnv *, jclass);

JNIEXPORT jstring JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetD2DSysFolder
	(JNIEnv *env, jclass clz);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    GetBackupVMList
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetBackupVMList
  (JNIEnv *, jclass, jstring,jstring, jstring, jstring, jobject);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    GetBackupVMList
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetBackupVM
  (JNIEnv *, jclass, jstring,jstring, jstring, jstring, jobject);

/*
* Class:     com_ca_arcflash_webservice_jni_WSJNI
* Method:    getVAppChildBackupVMsAndRecoveryPoints
* Signature: (Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/Map;)I
*/
JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_getVAppChildBackupVMsAndRecoveryPoints
  (JNIEnv *, jclass, jstring, jint, jstring, jstring, jstring, jobject, jobject);


/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    AFCheckVMDestination
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)J
 */
JNIEXPORT jboolean JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFCheckVMDestination
  (JNIEnv *, jclass, jstring,jstring, jstring, jstring);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    AFGetBackupVMDisk
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFGetBackupVMDisk
  (JNIEnv *, jclass, jstring ,jstring , jstring, jstring, jstring, jobject);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    AFGetHyperVBackupVMDisk
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFGetHyperVBackupVMDisk
	(JNIEnv *env, jclass clz, jstring path,jstring subPath,jstring domain,jstring username,jstring password, jobject diskList);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    AFGetHyperVVMNetworkList
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFGetHyperVVMNetworkList
	(JNIEnv *env, jclass clz, jstring path,jstring subPath,jstring domain,jstring username,jstring password, jobject adapterList);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    AFGetBackupVMOriginalInfo
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFGetBackupVMOriginalInfo
  (JNIEnv *, jclass, jstring ,jint , jstring, jstring, jstring, jobject);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    createJobMonitor
 * Signature: (Ljava/lang/String)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_createVMJobMonitor
  (JNIEnv *, jclass, jstring);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    cancelJob
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_cancelVMJob
  (JNIEnv *, jclass, jlong,jstring);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    getHyperVVMPathType
 * Signature: (J)I
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_getHyperVVMPathType
  (JNIEnv *, jclass, jstring);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    GetLogActivity
 * Signature: (IILcom/ca/arcflash/webservice/jni/model/JActivityLogResult;)I
 */
JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetVMLogActivity
  (JNIEnv *, jclass, jint, jint, jobject,jstring);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    GetJobLogActivity
 * Signature: (IILcom/ca/arcflash/webservice/jni/model/JActivityLogResult;)I
 */
JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetVMJobLogActivity
  (JNIEnv *, jclass, jlong, jint, jint, jobject,jstring);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    GetJobLogActivity
 * Signature: (IILcom/ca/arcflash/webservice/jni/model/JActivityLogResult;)I
 */
JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetJobLogActivityForVM
  (JNIEnv *, jclass, jlong, jint, jint, jobject,jstring);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    DeleteLogActivity
 * Signature: (IIIIII)I
 */
JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_DeleteVMLogActivity
  (JNIEnv *, jclass, jint, jint, jint, jint, jint, jint,jstring);
/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    GetVDDKVersion
 * Signature: (IIIIII)I
 */
JNIEXPORT jstring JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetVDDKVersion
  (JNIEnv *, jclass);
/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    GetVIXVersion
 * Signature: (IIIIII)I
 */
JNIEXPORT jstring JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetVIXVersion
  (JNIEnv *, jclass);


  
JNIEXPORT jobject JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetOnlineDisks
  (JNIEnv *, jclass);

JNIEXPORT jobject JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetOnlineVolumes
  (JNIEnv *, jclass);

JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetOnlineDisksAndVolumes
(JNIEnv *, jclass, jobject, jobject);

JNIEXPORT jboolean JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_HAIsHostOSGreaterEqual(
									 JNIEnv *, jclass,
									 jint dwMajor,
									 jint dwMinor,
									 jshort usServicePackMajor,
									 jshort usServicePackMinor);

JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_CheckFolderCompressAttribute(
	JNIEnv *, jclass,jstring folderPath);

JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_CheckVolumeCompressAttribute(
	JNIEnv *, jclass, jstring volumePath);

JNIEXPORT jobject JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetOnlineVolumes
(JNIEnv *, jclass);

JNIEXPORT jobject JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetHostNetworkConfig
  (JNIEnv *, jclass);

JNIEXPORT jshort JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetHostProcessorArchitectural
(JNIEnv *, jclass);

/*
* Class:     com_ca_ha_webservice_jni_HyperVJNI
* Method:    GetOffcopySize
* Signature: (Ljava/util/List;)J
*/
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetOfflinecopySize(JNIEnv *, jclass, jstring);


/*
* Class:     Java_com_ca_arcflash_webservice_jni_WSJNI_AdjustVolumeBootCodeForHyperV
* Method:    AdjustVolumeBootCodeForHyperV
* Signature: (Ljava/lang/String;Ljava/lang/String;)V
*/
JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AdjustVolumeBootCodeForHyperV
(JNIEnv *, jclass, jstring, jstring);

/*
* Class:     com_ca_arcflash_webservice_jni_WSJNI
* Method:    GenerateAdrconfigure
* Signature: (V)J
*/
JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GenerateAdrconfigure
(JNIEnv *, jclass, jstring);

/*
* Class:     com_ca_arcflash_webservice_jni_WSJNI
* Method:    GenerateIVMAdrconfigure
* Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)J
*/
JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GenerateIVMAdrconfigure
(JNIEnv *, jclass, jstring, jstring, jstring);

/*
* Class:     com_ca_arcflash_webservice_jni_WSJNI
* Method:    GenerateAdrInfoZ
* Signature: (V)J
*/
JNIEXPORT jstring JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GenerateAdrInfoC
	(JNIEnv *, jclass);

JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_CancelReplicationForHyperV(JNIEnv *env, jclass klass, jstring jobId);

JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_StopHAServerProxy(JNIEnv *, jclass);

JNIEXPORT jboolean JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_CancelReplicationForVMware(JNIEnv *, jclass, jstring jobId);

JNIEXPORT jboolean JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_IsHyperVRoleInstalled(JNIEnv *, jclass);

JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_OnlineDisks(JNIEnv *, jclass);
/*
* Class:     com_ca_arcflash_webservice_jni_WSJNI
* Method:    GetDrInfoLocalCopyPathForSnapNow_HyperV
* Signature: (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
*/
JNIEXPORT jstring JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetDrInfoLocalCopyPath
(JNIEnv *, jclass, jstring,jstring);

/*
* Class:     com_ca_arcflash_webservice_jni_WSJNI
* Method:    GetAdrInfoCLocalCopyPathForSnapNow_HyperV
* Signature: (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
*/
JNIEXPORT jstring JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetAdrInfoCLocalCopyPath
(JNIEnv *, jclass, jstring,jstring);

/*
* Class:     com_ca_arcflash_webservice_jni_WSJNI
* Method:    GetDestSubRoot
* Signature: (Lcom/ca/arcflash/webservice/jni/HyperVRepParameterModel;)Ljava/lang/String;
*/
JNIEXPORT jstring JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetDestSubRoot
(JNIEnv *, jclass, jobject);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    CreateSessionBitmap
 * Signature: (Ljava/lang/String;Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_CreateSessionBitmap
  (JNIEnv *, jclass, jstring, jstring, jint);

/*
* Class:     com_ca_arcflash_webservice_jni_WSJNI
* Method:    GetIpAddressFromDns
* Signature: (Ljava/lang/String;Ljava/util/List;)I
*/
JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetIpAddressFromDns(JNIEnv *, jclass, jstring, jobject);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    MsgOpenCatalogFile
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_MsgOpenCatalogFile
  (JNIEnv *, jclass, jstring);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    MsgGetChildren
 * Signature: (JJJLjava/util/ArrayList;)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_MsgGetChildren
  (JNIEnv *, jclass, jlong, jlong, jlong, jobject);

/*
* Class:     com_ca_arcflash_webservice_jni_WSJNI
* Method:    GetMsgCatalogPath
* Signature: (JJ)J
*/
JNIEXPORT jstring JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetMsgCatalogPath
(JNIEnv *, jclass, jstring, jstring, jlong, jlong);

/*
* Class:     com_ca_arcflash_webservice_jni_WSJNI
* Method:    MsgGetChildrenCount
* Signature: (JJ)J
*/
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_MsgGetChildrenCount
(JNIEnv *, jclass, jlong, jlong, jlong, jobject);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    MsgGetChildrenEx
 * Signature: (JJJIILcom/ca/arcflash/webservice/jni/model/JRWLong;Ljava/util/ArrayList;)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_MsgGetChildrenEx
  (JNIEnv *, jclass, jlong, jlong, jlong, jint, jint, jobject, jobject);

/*
* Class:     com_ca_arcflash_webservice_jni_WSJNI
* Method:    D2DExCheckUser
* Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)J
*/
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_D2DExCheckUser
  (JNIEnv *, jclass, jstring, jstring, jstring);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    FindNextMsgCatalogFile
 * Signature: (JJLjava/util/ArrayList;Lcom/ca/arcflash/webservice/jni/model/JRWLong;Lcom/ca/arcflash/webservice/jni/model/JRWLong;)I
 */
JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_FindNextMsgCatalogFile
  (JNIEnv *, jclass, jlong, jlong, jobject, jobject, jobject);



/*
* Class:     com_ca_arcflash_webservice_jni_WSJNI
* Method:    AOEGetOrganizationName
* Signature: ()Ljava/lang/String;
*/
JNIEXPORT jstring JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AOEGetOrganizationName
(JNIEnv *env, jclass clz, jstring userNameWithDomain, jstring password);

/*
* Class:     com_ca_arcflash_webservice_jni_WSJNI
* Method:    AOEGetServers
* Signature: (Ljava/util/ArrayList;)J
*/
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AOEGetServers
(JNIEnv *env, jclass clz, jobject retArr, jstring userNameWithDomain, jstring password);

/*
* Class:     com_ca_arcflash_webservice_jni_WSJNI
* Method:    AEGetE15CASList
* Signature: (Ljava/util/ArrayList;)J
*/
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AEGetE15CASList
(JNIEnv *env, jclass clz, jobject retArr, jstring userNameWithDomain, jstring password);


/*
* Class:     com_ca_arcflash_webservice_jni_WSJNI
* Method:    AEGetDefaultE15CAS
* Signature: (Ljava/util/ArrayList;)J
*/
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AEGetDefaultE15CAS
(JNIEnv *, jclass, jobject);

/*
* Class:     com_ca_arcflash_webservice_jni_WSJNI
* Method:    AEGetDefaultE15CAS
* Signature: (Ljava/util/ArrayList;)J
*/
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AESetDefaultE15CAS
(JNIEnv *, jclass, jstring);


/*
* Class:     com_ca_arcflash_webservice_jni_WSJNI
* Method:    AOEGetStorageGroups
* Signature: (Ljava/lang/String;Ljava/util/ArrayList;)J
*/
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AOEGetStorageGroups
(JNIEnv *env, jclass clz, jstring dn, jobject retArr, jstring userNameWithDomain, jstring password);

/*
* Class:     com_ca_arcflash_webservice_jni_WSJNI
* Method:    WSJNI_AOEGetEDBs
* Signature: (Ljava/lang/String;Ljava/util/ArrayList;)J
*/
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AOEGetEDBs
(JNIEnv *env, jclass clz, jstring dn, jobject retArr, jstring userNameWithDomain, jstring password);

/*
* Class:     com_ca_arcflash_webservice_jni_WSJNI
* Method:    AOEGetMailboxes
* Signature: (Ljava/lang/String;Ljava/util/ArrayList;)J
*/
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AOEGetMailboxes
(JNIEnv *env, jclass clz, jstring dn, jobject retArr, jstring userNameWithDomain, jstring password);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
* Method:    AOECheckServiceStatus
* Signature: (Ljava/lang/String;)J
*/
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AOECheckServiceStatus
(JNIEnv *, jclass, jstring);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    AFGetMntFromPath
 * Signature: (Ljava/lang/String;Ljava/util/List;)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFGetMntFromPath
  (JNIEnv *, jclass, jstring, jobject);

/*
* Class:     com_ca_arcflash_webservice_jni_WSJNI
* Method:    AHDesktopFile
* Signature: (Ljava/lang/String;)J
*/
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AHDesktopFile
(JNIEnv *, jclass, jstring);


/*
* Class:     com_ca_arcflash_webservice_jni_WSJNI
* Method:    MsgGetChildrenByFilterFirst
* Signature: (JJJIILcom/ca/arcflash/webservice/jni/model/JRWLong;Ljava/lang/String;Ljava/util/ArrayList;)J
*/
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_MsgGetChildrenByFilterFirst
(JNIEnv *, jclass, jlong, jlong, jlong, jlong, jstring, jlong, jobject, jobject, jobject);

/*
* Class:     com_ca_arcflash_webservice_jni_WSJNI
* Method:    MsgGetChildrenByFilterNext
* Signature: (JJJIILcom/ca/arcflash/webservice/jni/model/JRWLong;Ljava/util/ArrayList;)J
*/
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_MsgGetChildrenByFilterNext
(JNIEnv *, jclass, jlong, jlong, jlong, jlong, jobject, jobject);

/*
* Class:     com_ca_arcflash_webservice_jni_WSJNI
* Method:    AFBackup
* Signature: (Lcom/ca/arcflash/webservice/jni/model/JCatalogJob;)J
*/
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFCatalogJob
(JNIEnv *, jclass, jobject);


/*
* Class:     com_ca_arcflash_webservice_jni_WSJNI
* Method:    AFIsCatalogJobRunning
* Signature: (java/lang/String;J)Z
*/
JNIEXPORT jboolean JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFIsCatalogJobRunning
(JNIEnv *, jclass, jstring, jlong, jlong);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    AFIsCatalogAvailable
 * Signature: (JLjava/lang/String;Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFIsCatalogAvailable
  (JNIEnv *, jclass, jlong, jstring, jstring);


/*
* Class:     com_ca_arcflash_webservice_jni_WSJNI
* Method:    AFIsCatalogJobInQueue
* Signature: (java/lang/String;J)Z
*/
JNIEXPORT jboolean JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFIsCatalogJobInQueue
(JNIEnv *, jclass, jlong, jstring, jlong, jlong, jstring);

/*
* Class:     com_ca_arcflash_webservice_jni_WSJNI
* Method:    AFCGRTSkipDisk
* Signature: (java/lang/String;J)J
*/
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFCGRTSkipDisk
(JNIEnv *, jclass, jstring, jobject);

/*
* Class:     com_ca_arcflash_webservice_jni_WSJNI
* Method:    CheckSessVerByNo
* Signature: (java/lang/String;J)J
*/
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_CheckSessVerByNo
(JNIEnv *, jclass, jstring, jlong);


JNIEXPORT void JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_RebootSystem(JNIEnv *, jclass, jboolean);



/*
* Class:     com_ca_arcflash_webservice_jni_WSJNI
* Method:    DeleteSessionBitmap
*/
JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_DeleteSessionBitmap(JNIEnv *, jclass, jstring, jstring);

/*
* Class:     com_ca_arcflash_webservice_jni_WSJNI
* Method:    GetSessionBitmapList
*/
JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetSessionBitmapList(JNIEnv *, jclass, jstring, jobject);

/*
* Class:     com_ca_arcflash_webservice_jni_WSJNI
* Method:    DetectAndRemoveObsolteBitmap
*/
JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_DetectAndRemoveObsolteBitmap(JNIEnv *, jclass, jstring, jstring, jstring);

/*
* Class:     com_ca_arcflash_webservice_jni_WSJNI
* Method:    GetIpAddressFromDns
* Signature: (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
*/
JNIEXPORT jstring JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_FindHAConfigurationFileURL(JNIEnv *, jclass, jstring, jstring);

/*
* Class:     com_ca_arcflash_webservice_jni_WSJNI
* Method:    GetIpAddressFromDns
* Signature: (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
*/
JNIEXPORT jstring JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_FindHAConfigurationFileURLByVMGUID(JNIEnv *, jclass, jstring, jstring);

/**
*Class:      com_ca_arcflash_webservice_jni_WSJNI
 Method:     launchCatalogJob
 Signature:  ()
*/
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_launchCatalogJob(JNIEnv *, jclass, jlong, jlong, jstring, jstring);

/**
*Class:      com_ca_arcflash_webservice_jni_WSJNI
 Method:     launchCatalogJob
 Signature:  ()
*/
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_launchVSphereCatalogJob(JNIEnv *, jclass, jlong, jlong,jstring, jstring, jstring);
/**
*Class:      com_ca_arcflash_webservice_jni_WSJNI
 Method:     addGRTCatalogInfo
 Signature:  ()
*/
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_addGRTCatalogInfo(JNIEnv *, jclass, jstring, jstring, jstring, jstring, jlong, jlong, jstring, jobject, jstring);

JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFSaveJS4FSOndemand(JNIEnv *env, jclass cls, jstring backupDest, jstring username, jstring pass, jstring domain, jlong sessionNum, jstring vmInstanceID, jlong subSession, jstring sessionPass);
/*
sonle01: D2D active log sync to Edge
*/
JNIEXPORT jstring JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetD2DActiveLogTransFileXML(JNIEnv *env, jclass clz);
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_DelD2DActiveLogTransFileXML(JNIEnv *env, jclass clz);
JNIEXPORT jstring JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetFullD2DActiveLogTransFileXML(JNIEnv *env, jclass clz);

JNIEXPORT jboolean JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_IsFirstD2DSyncCalled(JNIEnv *env, jclass clazz);
JNIEXPORT void JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_MarkFirstD2DSyncCalled(JNIEnv *env, jclass clazz);
JNIEXPORT jstring JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetCachedVmInfo4Trans(JNIEnv *env, jclass clazz);
JNIEXPORT jstring JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetAllVmInfo4Trans(JNIEnv *env, jclass clazz);
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_DeleteVmInfoTransFile(JNIEnv *env, jclass clazz);
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_DeleteAllVmInfoTransFile(JNIEnv *env, jclass clazz);


/*ARCHIVE */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFArchive
(JNIEnv *env, jclass jclz, jobject bkpJS);

JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFArchiveRestore
(JNIEnv *env, jclass jclz, jobject bkpJS);

JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFArchivePurge
(JNIEnv *env, jclass jclz, jobject bkpJS);

JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFArchiveCatalogSync
(JNIEnv *env, jclass jclz, jobject in_archiveCatalogSyncJobScript);

JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFArchiveSourceDelete
(JNIEnv *env, jclass jclz, jobject bkpJS);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    AFGetArchiveDestinationVolumes
 * Signature: (Ljava/lang/String;Ljava/util/ArrayList;)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFGetArchiveDestinationVolumes
  (JNIEnv *, jclass,jstring,jobject, jobject);

JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetArchivedVolumeHandle(JNIEnv *env, jclass clz, jstring strVolume);

JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_browseArchiveCatalogChildren
(JNIEnv *env, jclass clz,jlong lVolumeHandle,jstring inCatalogFilePath, jobject archiveCatalogItems);
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_browseArchiveCatalogChildrenEx(JNIEnv *env, jclass clz,jlong lVolumeHandle,jstring inCatalogFilePath,jlong in_lIndex,jlong in_lCount, jobject archiveCatalogItems);
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetArchiveChildrenCount(JNIEnv *env, jclass clz,jlong lVolumeHandle,jstring strCatalogPath, jobject childCount);

JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_CanArchiveJobBeSubmitted(JNIEnv *env, jclass clz, jobject out_jArchiveJob);
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_CanArchiveSourceDeleteJobBeSubmitted(JNIEnv *env, jclass clz, jobject inout_jArchiveJob);

JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetPreviewFilesHandle(JNIEnv *env, jclass clz, jstring in_strfilePath,jobject out_jHandle,jobject out_jFilesCnt);

JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_searchArchiveCatalogChildren(JNIEnv *env, jclass clz,jstring inFileName,jstring inHostName,jstring inSearchpath,jobject inArchiveDestConfig,
																							   jlong in_lSearchOptions,jlong in_lIndex,jlong in_lCount, jobject archiveCatalogItems);
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetArchiveJobsInfo(JNIEnv *env, jclass clz, jobject inout_jArchiveJob,jobject out_archiveJobsList);
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFGetArchiveJobInfoCount(JNIEnv *env, jclass clz, jobject inout_jArchiveJob, jobject jobCount);

JNIEXPORT jboolean JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_IsArchiveJobRunning(JNIEnv *env, jclass clz);
JNIEXPORT jboolean JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_IsFileArchiveJobRunning(JNIEnv *env, jclass clz);
JNIEXPORT jboolean JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_IsArchiveRestoreJobRunning(JNIEnv *env, jclass clz);
JNIEXPORT jboolean JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_IsArchivePurgeJobRunning(JNIEnv *env, jclass clz);
JNIEXPORT jboolean JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_IsArchiveCatalogSyncJobRunning(JNIEnv *env, jclass clz);
JNIEXPORT jboolean JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_IsArchiveSourceDeleteJobRunning(JNIEnv *env, jclass clz);
JNIEXPORT jstring JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetArchiveDNSHostName(JNIEnv *env, jclass jclz);
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_searchArchiveCatalogChildren2(JNIEnv *env, jclass clz, jstring catalogDirBasePath, jstring inFileName, jstring inHostName, jstring inSearchpath, jobject inArchiveDestConfig,
	jlong in_lSearchOptions, jlong in_lIndex, jlong in_lCount, jobject archiveCatalogItems);
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_ArchiveOpenMachine(JNIEnv *env, jclass clz, jstring catalogDirBasePath, jstring hostName, jobject jDestInfo, jobject pMachineHandle);
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetArchiveVolumeList(JNIEnv *env, jclass clz, jlong pMachineHandle, jobject volumeList);
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_rps_jni_WSJNI_ArchiveOpenVolume(JNIEnv *env, jclass clz, jlong pMachineHandle, jstring strVolume);
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetArchiveChildItemCount(JNIEnv *env, jclass clz, jlong pVolumeHandle, jstring strPath, jobject childCount);
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetArchiveChildItems(JNIEnv *env, jclass clz, jlong pVolumeHandle, jstring strPath, jobject archiveCatalogItems);
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetArchiveChildItemsEx(JNIEnv *env, jclass clz, jlong pVolumeHandle, jstring strPath, jlong in_lIndex, jlong in_lCount, jobject archiveCatalogItems);
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_rps_jni_WSJNI_ArchiveCloseVolume(JNIEnv *env, jclass clz, jlong pVolumeHandle);
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_ArchiveCloseMachine(JNIEnv *env, jclass clz, jlong pMachineHandle);
JNIEXPORT jstring JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetFileCopyCatalogPathy(JNIEnv *env, jclass, jstring MachineName, jlong ProductType);
/*ARCHIVE*/


/*
* Class:     com_ca_arcflash_webservice_jni_WSJNI
* Method:    AFSCheckCatalogExist
* Signature: (java/lang/String;J;Ljava/util/ArrayList;)J
*/
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFSCheckCatalogExist(JNIEnv *env, jclass clz, jstring jdest, jlong jsessNum, jobject jretAttray);


/*
* Class:     com_ca_arcflash_webservice_jni_WSJNI
* Method:    AFCheckGrtSession
* Signature: (java/lang/String;J;)J
*/
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFCheckGrtSession(JNIEnv *env, jclass clz, jstring jdest, jlong jsessNum);


//sonle01 archive synchronization
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_DeleteArchiveCacheFileTrans(JNIEnv *env, jclass clz);
JNIEXPORT jstring JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetArchiveCacheFileName4Trans(JNIEnv *env, jclass clz);

//Api's to support cloud test test connection
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_verifyBucketName(JNIEnv *env, jclass clz, jobject jcloudDestInfo);
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_getCloudBuckets(JNIEnv *env, jclass clz, jobject jCloudDestInfo,jobject out_Buckets);
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_getCloudRegions(JNIEnv *env, jclass clz,jobject jCloudDestInfo,jobject out_CloudRegions);
JNIEXPORT jstring JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_getRegionForBucket(JNIEnv *env, jclass clz,jobject jCloudDestInfo,jobject out_jrwLongRegion);

JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_testConnection(JNIEnv *env, jclass clz,jobject jCloudDestInfo);

JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_testBIConnection(JNIEnv *env, jclass clz, jobject jCloudDestInfo);

// APIs for archive catalog sync 
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetLastArchiveCatalogUpdateTime(JNIEnv *env, jclass clz,jobject inArchiveDestConfig,jobject outDestinationChangeDetails);

// Api for validation of the archive encryption settings
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_validateEncryptionSettings(JNIEnv *env, jclass clz,jobject in_archiveJobScript,jobject out_jErrorcode,jobject out_jCCIErrorCode);

/*scheduled export*/ //<sonmi01>2014-7-29 ###???
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFEnabledScheduledExport(JNIEnv *env, jclass clazz, jboolean enabled);
JNIEXPORT jboolean JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFCheckShExpBackupNum(JNIEnv *env, jclass clazz, jint interval);
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFAddSucceedBackupNum(JNIEnv *env, jclass clazz);
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFEnabledScheduledExportVM(JNIEnv *env, jclass clazz, jboolean enabled, jstring nodeInstanceId);
JNIEXPORT jboolean JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFCheckShExpBackupNumVM(JNIEnv *env, jclass clazz, jint interval, jstring nodeInstanceId);
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFAddSucceedBackupNumVM(JNIEnv *env, jclass clazz, jstring nodeInstanceId);
JNIEXPORT jstring JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFIGetSessPwdFromKeyMgmtBySessNum(JNIEnv *env, jclass clz, jlong sessionNum, jstring destPath);
JNIEXPORT jboolean JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFCheckFolderContainsBackup(JNIEnv *env, jclass clazz, jstring folder);

/*
* Class:     com_ca_arcflash_webservice_jni_WSJNI
* Method:    getActiveJobs
* Signature: (Ljava/util/ArrayList;)J
*/
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_getActiveJobs(JNIEnv *env, jclass clz, jobject jretAttray);

JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_getVMwareToolStatus(JNIEnv *env, jclass clz);

JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_getVMApplicationStatus(JNIEnv *env, jclass clz, jstring vmInstaceUUID,jobject appStatus);

JNIEXPORT jstring JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFGetMntFromVolumeGuid(JNIEnv *env, jclass clz, jstring volumeGUID);

JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFGetMntSess(JNIEnv *env, jclass clz, jobject sessionList);
JNIEXPORT jboolean JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFCheckDestChainAccess(JNIEnv *env, jclass clazz, jobject currentConn, jobject baseConn, jobject errConn, jboolean jbPrev);
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFCheckUpdateNetConn(JNIEnv *env, jclass clz, jobject baseConn,jobject updateConn, jboolean jbPrev);
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFRetrieveConnections(JNIEnv *env, jclass clz, jobject retConns);

JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFMoveLogs(JNIEnv *env, jclass clz);
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFDeleteLicError(JNIEnv *env, jclass clz,jlong licCode);

JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_CreateEvent(JNIEnv* env, jclass this_class, jstring eventName, jboolean manualReset, jboolean initialState);

JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_SetEvent(JNIEnv* env, jclass this_class, jlong handle);

JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_ResetEvent(JNIEnv* env, jclass this_class, jlong handle);

JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_WaitForSingleObject(JNIEnv* env, jclass this_class, jlong handle, jlong milliSeconds );

JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_createMutex(JNIEnv* env, jclass this_class, jboolean initiallyOwned, jstring mutexName);
JNIEXPORT jboolean JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_releaseMutex(JNIEnv* env, jclass this_class, jlong handle);

JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_getApplicationDetailsInESXVM(JNIEnv *, jclass, jobject, jstring, jstring, jstring, jstring, jstring, jstring, jstring);

JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_getVMInformation(JNIEnv *, jclass, jobject, jstring, jstring, jstring, jstring, jstring, jstring, jstring);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    AFISetPreAllocSpacePercent
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFISetPreAllocSpacePercent
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    AFIGetPreAllocSpacePercent
 * Signature: (Lcom/ca/arcflash/webservice/jni/model/JRWLong;)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFIGetPreAllocSpacePercent
  (JNIEnv *, jclass, jobject);

JNIEXPORT jboolean JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_IsFirmwareuEFI(JNIEnv *env, jclass clz);

JNIEXPORT jstring JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetRestorePointPath(JNIEnv *env, jclass clz, jstring dest,jstring domain,jstring user,jstring pwd, jstring subPath);

JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetAllMountedRecoveryPointItems(JNIEnv *env, jclass clz, jobject mountedItems);
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetMountedRecoveryPointItems(JNIEnv *env, jclass clz, jstring dest,jstring domain,jstring user,jstring pwd, jstring subPath,jobject mountedItems);
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_MountRecoveryPointItem(JNIEnv *env, jclass clz, jstring dest,jstring domain,jstring user,jstring pwd, jstring subPath,
																						jstring volGUID,jint encryptionType,jstring encryptPassword, jstring mountPath);
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_MountRecoveryPointItemEx(JNIEnv *env, jclass clz, jobject jMntParams);
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_DisMountRecoveryPointItem(JNIEnv *env, jclass clz, jstring mountPath,jint mountDiskSignature);
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetAvailableMountDriveLetters(JNIEnv *env, jclass clz, jobject avaliableMountDriveLetters);
JNIEXPORT jstring JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetWindowsTempDir(JNIEnv *env, jclass clz);
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFGetMntInfoForVolume(JNIEnv *env, jclass clz, jstring dest,jstring domain,jstring user,jstring pwd,jstring subPath, jstring volGUID, jobject mountVolInfo);
/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    CheckIfExistDiskLargerThan2T
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_CheckIfExistDiskLargerThan2T
  (JNIEnv *, jclass);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    StartD2dCallback
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_StartD2dCallback(JNIEnv *, jclass);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    StopD2dCallback
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_StopD2dCallback(JNIEnv *, jclass);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    getRegValue
 * Signature: (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_getRegValue
  (JNIEnv *, jclass, jstring, jstring);
  
//on demand catalog

JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_UnMountVolume(JNIEnv *env, jclass jclz, jstring jsDiskSign, jlong jhandle); //added handle //20415776

JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_browseFileChildren(JNIEnv *env, jclass jclz,jstring volumeGUID, jstring filePath, jobject retArr);

JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetFileChildrenCount(JNIEnv *env, jclass jclz, jstring mountVolGUID, jstring filePath, jobject jnCnt);

JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_MountVolume(JNIEnv *env, jclass jclz, jstring userName, jstring passWord, jstring rootFolder, jlong sessionNumber,jstring volumeGUID, jobject jsVolMount, jstring encryptKey );

JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetFileChildrenEx(JNIEnv *env, jclass jclz,jstring volumeGUID, jstring filePath, jint jnStart, jint jnRequest ,jobject jnCnt, jobject retArr);

JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_SearchMountPoint
(JNIEnv *env, jclass clz, jstring mntVolumeGUID, jstring backupDestination, jstring sDriveLetter,jstring sDir, jboolean bCaseSensitive, jboolean bIncludeSubDir, jstring pattern);

JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_FindNextSearchItems
(JNIEnv *env, jclass clz, jlong jhandle, jlong nRequest, jobject retArr, jobject jnFound);
JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_FindCloseSearchItems
(JNIEnv *env, jclass clz, jlong jhandle);

JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_InitGRTMounter(JNIEnv *env, jclass jclz);
JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_ExitGRTMounter(JNIEnv *env, jclass jclz, jlong handle);

JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetCatalogStatus(JNIEnv *env, jclass jclz, jstring sessionPath);

JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_SetCatalogStatus(JNIEnv *env, jclass jclz, jstring jbackupDest, jstring sessionPath);

JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_UpdateCatalogJobScript
  (JNIEnv *, jclass, jstring, jstring, jstring, jlong, jstring, jstring);

//JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetFileChildrenCount(JNIEnv *env, jclass jclz, jstring userName, jstring passWord, jstring rootFolder, jlong sessionNumber,jstring volumeGUID, jstring filePath, jobject jnCnt);
//
//JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_browseFileChildren(JNIEnv *env, jclass jclz, jstring userName, jstring passWord, jstring rootFolder, jlong sessionNumber,jstring volumeGUID, jstring filePath, jobject retArr);
JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetRegIntValue
(JNIEnv *, jclass, jstring, jstring, jstring, jobject);

JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_SetRegIntValue
(JNIEnv *, jclass, jstring, jstring, jstring, jint);

JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetRegMultiStringValue
(JNIEnv *, jclass, jstring, jstring, jstring, jobject);

JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_SetRegMultiStringValue
(JNIEnv *, jclass, jstring, jstring, jstring, jobject);

JNIEXPORT jbyteArray JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetRegBinaryValue	//zxh,add JNI
(JNIEnv *env, jclass clz, jstring rootReg, jstring valueName);

JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_SetRegBinaryValue	//zxh,add JNI
(JNIEnv *env, jclass clz, jstring rootReg, jstring valueName, jbyteArray byteArray);

//////////////////////////////////////////////////////////////////////////////
// Manual Conversion

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    createVssManager
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_createVssManager
  (JNIEnv *, jclass);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    vssManager_Init
 * Signature: (JIZ)I
 */
JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_vssManager_1Init
  (JNIEnv *, jclass, jlong, jint, jboolean);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    vssManager_CreateSnapshotSet
 * Signature: (JLjava/util/List;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_vssManager_1CreateSnapshotSet
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    vssManager_DeleteSnapshotSet
 * Signature: (JLjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_vssManager_1DeleteSnapshotSet
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    vssManager_GetSnapshotSetByGuid
 * Signature: (JLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_vssManager_1GetSnapshotSetByGuid
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    vssManager_Release
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_vssManager_1Release
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    vcmSnapshotSet_QuerySnapshotDeviceName
 * Signature: (JLjava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_vcmSnapshotSet_1QuerySnapshotDeviceName
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    vcmSnapshotSet_Release
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_vcmSnapshotSet_1Release
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    GetIntactSessions
 * Signature: (Ljava/lang/String;Ljava/util/List;)I
 */
JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetIntactSessions
  (JNIEnv *, jclass, jstring, jobject);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    GetLocalPathOfShareName
 * Signature: (Ljava/lang/String;Ljava/util/List;Ljava/util/List;)I
 */
JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetLocalPathOfShareName
  (JNIEnv *, jclass, jstring, jobject, jobject);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    GetRHAScenarioState
 * Signature: (Ljava/lang/String;Ljava/util/List;)I
 */
JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetRHAScenarioState
  (JNIEnv *, jclass, jstring, jobject);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    IsRHASyncReplicated
 * Signature: (Ljava/lang/String;Ljava/util/List;)Z
 */
JNIEXPORT jboolean JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_IsRHASyncReplicated
  (JNIEnv *, jclass, jstring, jobject);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    vssManager_GetSnapshotSetByGuid
 * Signature: (Ljava/lang/String;Ljava/lang/String;)J
 */
JNIEXPORT jstring JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetSymbolicLinkActualPath
  (JNIEnv *, jclass, jstring, jobject outErrorCode);


/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    isShowUpdate
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_isShowUpdate
  (JNIEnv *, jclass);
/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    startMerge
 * Signature: (Lcom/ca/arcflash/webservice/jni/model/MergeJobScript;Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_startMerge
  (JNIEnv *, jclass, jobject, jstring);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    stopMerge
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_stopMerge
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    getMergeJobMonitor
 * Signature: (JLcom/ca/arcflash/webservice/data/merge/MergeJobMonitor;)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_getMergeJobMonitor
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    createMergeJobMonitor
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_createMergeJobMonitor
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    releaseMergeJobMonitor
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_releaseMergeJobMonitor
  (JNIEnv *, jclass, jlong);
/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    isMergeJobAvailable
 * Signature: (ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_isMergeJobAvailable
  (JNIEnv *, jclass, jint, jstring, jstring, jstring, jstring);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    AFIIsMergeJobAvailableEx
 * Signature: (Ljava/lang/String;IIIILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFIIsMergeJobAvailableEx
  (JNIEnv *, jclass, jstring, jint, jint, jint, jint, jstring, jstring, jstring, jstring);


JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetSessNumListForNextMerge
  (JNIEnv *, jclass, jint, jstring, jobject, jstring, jstring);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    AFIRetrieveMergeJM
 * Signature: (Ljava/util/ArrayList;)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFIRetrieveMergeJM
  (JNIEnv *, jclass, jobject);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    setBackupSetFlag
 * Signature: (Ljava/lang/String;JILjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_setBackupSetFlag
  (JNIEnv *, jclass, jstring, jlong, jint, jstring);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    launchCatalogEx
 * Signature: (Lcom/ca/arcflash/webservice/jni/model/CatalogJobContext;)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_launchCatalogEx
  (JNIEnv *, jclass, jobject);

JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFGetSystemInfo
  (JNIEnv *, jclass, jobject);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    BrowseVMFileFolderItem
 * Signature: (Ljava/util/ArrayList;ZLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_BrowseVMFileFolderItem
  (JNIEnv *, jclass, jstring,jstring,jint,jobject,jobject);

JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_DeleteAllPendingFileCopyJobs(JNIEnv* env,jclass this_class,jstring strDest,jstring strDestDomain,jstring strDestUserName,jstring strDestPassword);

JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_DisableFileCopy(JNIEnv* env, jclass this_class, jstring strDest, jstring strDestDomain, jstring strDestUserName, jstring strDestPassword);
/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    AFIGetFullSess4Inc
 * Signature: (Lcom/ca/arcflash/webservice/jni/model/JRWLong;JLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFIGetFullSess4Inc
  (JNIEnv *, jclass, jobject, jlong, jstring);

JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_getMachineDetailFromBackupSession
(JNIEnv *, jclass, jstring, jobject);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    getTickCount
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_getTickCount
  (JNIEnv *, jclass);


/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    StartNICMonitor
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_StartNICMonitor
  (JNIEnv *, jclass);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    StopNICMonitor
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_StopNICMonitor
  (JNIEnv *, jclass);

/*
* Class:     com_ca_arcflash_webservice_jni_WSJNI
* Method:    StartClusterMonitor
* Signature: ()V
*/
JNIEXPORT void JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_StartClusterMonitor
(JNIEnv *, jclass);

/*
* Class:     com_ca_arcflash_webservice_jni_WSJNI
* Method:    StopClusterMonitor
* Signature: ()V
*/
JNIEXPORT void JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_StopClusterMonitor
(JNIEnv *, jclass);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    getRPSDataStoreHashKey
 * Signature: (Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_getRPSDataStoreHashKey
  (JNIEnv *, jclass, jstring, jint, jstring);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    isCatalogExist
 * Signature: (Ljava/lang/String;I)Z
 */
JNIEXPORT jboolean JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_isCatalogExist
  (JNIEnv *, jclass, jstring, jint);


/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    getSessPathByNo
 * Signature: (Ljava/lang/String;I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_getSessPathByNo
  (JNIEnv *, jclass, jstring, jint);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    AFIVerifyDestUser
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFIVerifyDestUser
  (JNIEnv *, jclass, jstring, jstring, jstring);

/*
* Class:     com_ca_arcflash_webservice_jni_WSJNI
* Method:    getIPList
* Signature: ()Ljava/util/List;
*/
JNIEXPORT void JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_getIPList
	(JNIEnv *, jclass, jobject);


/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    GetVmList
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/ArrayList;
 */
JNIEXPORT jobject JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetVmList
  (JNIEnv *, jclass, jstring, jstring, jstring, jboolean);

/*
* Class:     com_ca_arcflash_webservice_jni_WSJNI
* Method:    WSJNI_GetHypervInfoList
* Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I;
*/
JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetHypervInfoList
(JNIEnv * env, jclass, jstring, jstring, jstring, jobject);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    updateD2DJobHistory
 * Signature: (JJJLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_updateD2DJobHistory
  (JNIEnv *, jclass, jobject);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    getD2DServerSID
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_getD2DServerSID
  (JNIEnv *, jclass);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    markD2DJobEnd
 * Signature: (JJ)I;
 */
JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_markD2DJobEnd
       (JNIEnv *, jclass, jlong, jlong, jstring);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    getActivityLogPaths4Sync
 * Signature: (ILjava/lang/String;Ljava/util/ArrayList;)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_getActivityLogPaths4Sync
  (JNIEnv *, jclass, jint, jstring, jobject);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    getRecoveryPoint4Sync
 */
JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_getRecoveryPoint4Sync
	(JNIEnv *, jclass, jstring, jstring, jstring,jstring, jstring, jboolean, jobject);


/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    getActivityLogPaths4FullSync
 * Signature: (ILjava/lang/String;Ljava/util/ArrayList;)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_getActivityLogPaths4FullSync
  (JNIEnv *, jclass, jint, jstring, jobject);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    getJobHistoryPaths4IncrementalSync
 * Signature: (Ljava/util/ArrayList;)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_getJobHistoryPaths4IncrementalSync
  (JNIEnv *, jclass, jobject);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    getJobHistoryPath4FullSync
 * Signature: (Ljava/util/ArrayList;)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_getJobHistoryPath4FullSync
	(JNIEnv *, jclass, jobject);

/*
* Class:     com_ca_arcflash_webservice_jni_WSJNI
* Method:    getFilePaths4Sync
* Signature: (JJJLjava/lang/String;Ljava/util/ArrayList;)J
*/
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_getFilePaths4Sync
	(JNIEnv *, jclass, jlong,jlong,jlong,jstring,jobject);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    isX86
 * Signature: ()Z;
 */
JNIEXPORT jboolean JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_isX86
	(JNIEnv *, jclass);

/*
* Class:     Java_com_ca_arcflash_webservice_jni_WSJNI
* Method:    getJobHistoryPaths4FullSync
* Signature: (JJLcom/ca/arcflash/service/jni/model/JJobHistoryFilterCol;Lcom/ca/arcflash/service/jni/model/JJobHistoryResult)J
*/
JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_getJobHistory
	(JNIEnv *, jclass, jlong, jlong, jobject, jobject);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    addMissedD2DJobHistory
 * Signature: (JJJJJLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_addMissedD2DJobHistory
  (JNIEnv *, jclass, jobject);


/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    ifJobHistoryExist
 * Signature: (JJJJJLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I
 */
JNIEXPORT jboolean JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_ifJobHistoryExist
  (JNIEnv *, jclass, jint, jlong, jint, jstring);

/*
* Class:	 com_ca_arcflash_webservice_jni_WSJNI
* Method:	 queryJobQueue
* Signature: (JLjava/lang/String;Lcom/ca/arcflash/jni/common/JCatalogJobScriptInfo;ZLjava/lang/String;)J
*/
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_queryJobQueue
	(JNIEnv *, jclass, jlong, jstring, jobject, jboolean, jstring);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    getHypervPFCDataConsistentStatus
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)Lcom/ca/arcflash/webservice/jni/model/JHypervPFCDataConsistencyStatus;
 */
JNIEXPORT jobject JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_getHypervPFCDataConsistentStatus
  (JNIEnv *, jclass, jstring, jstring, jstring, jlong);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    getSwitchIntFromFile
 * Signature: (Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_getSwitchIntFromFile
  (JNIEnv *, jclass, jstring, jstring, jint, jstring);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    getSwitchIntFromReg
 * Signature: (Ljava/lang/String;ILjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_getSwitchIntFromReg
  (JNIEnv *, jclass, jstring, jint, jstring);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    getSwitchStringFromFile
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_getSwitchStringFromFile
  (JNIEnv *, jclass, jstring, jstring, jstring, jstring);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    getSwitchStringFromReg
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_getSwitchStringFromReg
  (JNIEnv *, jclass, jstring, jstring, jstring);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    getMailAlertFiles
 * Signature: (Ljava/util/ArrayList;)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_getMailAlertFiles
  (JNIEnv *, jclass, jobject);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    getMailAlertFilesEx
 * Signature: (ILjava/util/ArrayList;)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_getMailAlertFilesEx
  (JNIEnv *, jclass, jint, jobject);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    getSourceNodeSysInfo
 * Signature: (Ljava/util/ArrayList;)J
 */
JNIEXPORT void JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_getSourceNodeSysInfo
  (JNIEnv *, jclass, jobject);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    browseHyperVHostFolder
 * Signature: (ILjava/lang/String;)Ljava/util/ArrayList;
 */
JNIEXPORT jobject JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_browseHyperVHostFolder
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    createHyperVHostFolder
 * Signature: (ILjava/lang/String;Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_createHyperVHostFolder
  (JNIEnv *, jclass, jlong, jstring, jstring);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    getHyperVCPUSocketCount
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_getHyperVCPUSocketCount
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    getHyperVHostStorage
 * Signature: (I)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_getHyperVHostStorage
  (JNIEnv *, jclass, jlong);


/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    CompareHyperVVersion
 * Signature: (ILjava/lang/String;I)I
 */
JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_CompareHyperVVersion
  (JNIEnv *, jclass, jlong, jstring, jstring, jstring, jint);
  
/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    getDateTimeFormat
 * Signature: (Lcom/ca/arcflash/webservice/data/DateFormat;)I
 */
JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_getDateTimeFormat	
  (JNIEnv *, jclass, jobject);

/*
 * Class:     Java_com_ca_arcflash_webservice_jni_WSJNI
 * Method:    getHyperVServerType
 * Signature: (J)V
 */
JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_getHyperVServerType
  (JNIEnv *, jclass, jlong);

/*
* Class:     Java_com_ca_arcflash_webservice_jni_WSJNI
* Method:    AFGetHyperVPhysicalName
* Signature: Ljava/lang/String
* Description: Get the hyper-v host of vm in cluster env
*/
JNIEXPORT jstring JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFGetHyperVPhysicalName
	(JNIEnv *, jclass, jstring, jstring, jstring, jstring);

/*
 * Class:     Java_com_ca_arcflash_webservice_jni_WSJNI
 * Method:    getHyperVClusterNodes
 * Signature: (J)V
 */
JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_getHyperVClusterNodes
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    getHyperVDefaultFolderOfVHD
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_getHyperVDefaultFolderOfVHD
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    GetHyperVDefaultFolderOfVM
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetHyperVDefaultFolderOfVM
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    CheckVHDMerging
 * Signature: (JJJJJLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I
 */
JNIEXPORT jboolean JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_CheckVHDMerging
  (JNIEnv *, jclass, jstring, jint, jint);


//<sonmi01>2014-3-21 ###???
JNIEXPORT jboolean JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_IsOSCompatibleWithProxy
	(JNIEnv *, jclass, jstring, jstring, jstring, jstring);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    GetAllDnsSuffixes
 * Signature: (Ljava/util/List;)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetAllDnsSuffixes
		(JNIEnv *env, jclass jcls, jobject listObj);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    getHyperVProtectionTypes
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/ca/arcflash/webservice/jni/model/JRWLong;Lcom/ca/arcflash/webservice/jni/model/JRWLong;)V
 */
JNIEXPORT void JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_getHyperVProtectionTypes
  (JNIEnv *, jclass, jstring, jstring, jstring, jobject, jobject, jobject);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    getClusterVirtualByPyhsicalNode
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_getClusterVirtualByPyhsicalNode
  (JNIEnv *, jclass, jstring, jstring, jstring);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    setClusterAccessHint
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_setClusterAccessHint
  (JNIEnv *, jclass, jstring, jstring, jstring);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    startInstantVM
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_startInstantVM
		(JNIEnv *env, jclass jcls, jstring, jint);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    startInstantVM
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_stopInstantVM
		(JNIEnv *env, jclass jcls, jstring, jlong, jint, jboolean);

/*
* Class:     com_ca_arcflash_webservice_jni_WSJNI
* Method:    startHydration
* Signature: (I)Ljava/lang/String;
*/
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_startHydration
(JNIEnv *env, jclass jcls, jstring);

/*
* Class:     com_ca_arcflash_webservice_jni_WSJNI
* Method:    stopHydration
* Signature: (I)Ljava/lang/String;
*/
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_stopHydration
(JNIEnv *env, jclass jcls, jstring);

/*
* Class:     com_ca_arcflash_webservice_jni_WSJNI
* Method:    getAllInstantVMJobStatus
* Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/ArrayList;
*/
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_getInstantVMJobStatus
(JNIEnv *, jclass, jobject);

//App Protection For AD.GRT
/*
* Class:     com_ca_arcflash_webservice_jni_WSJNI
* Method:    getGRTItem
* Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JLjava/lang/String;JJJJLjava/util/List;)J
*/

JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_getGRTItem (JNIEnv *, jclass, jstring, jstring, jstring, jlong, jstring, jlong, jlong, jlong, jlong, jobject);

/*
 * Class:     com_ca_arcflash_webservice_jni_WSJNI
 * Method:    AFIIsMergeJobAvailableExt
 * Signature: (Lcom/ca/arcflash/service/jni/model/JMergeData;)J
 */
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_AFIIsMergeJobAvailableExt
  (JNIEnv *, jclass, jobject);

//App Protection For tape integraion
/*
* Class:     com_ca_arcflash_webservice_jni_WSJNI
* Method:    getLastArchiveToTapeSession
* Signature: (jstring, jstring, jstring, jlong;)J
*/

JNIEXPORT jintArray JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_getLastArchiveToTapeSession(JNIEnv *env, jclass jcls, jstring backupDest, jstring userName, jstring passWord);

/*
* Class:     com_ca_arcflash_webservice_jni_WSJNI
* Method:    CleanShareMemory
* Signature: (I)Ljava/lang/String;
*/
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_CleanShareMemory
(JNIEnv *env, jclass jcls, jstring);

/*
* Class:     com_ca_arcflash_webservice_jni_WSJNI
* Method:    isInstantVMProxyMeetRequirement
* Signature: (I)Ljava/lang/Object;
*/
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_isInstantVMProxyMeetRequirement
(JNIEnv *env, jclass jcls, jobject, jobject, jobject);

/*
* Class:     com_ca_arcflash_webservice_jni_WSJNI
* Method:    verifyHyperVAdminAccount
* Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)I
*/
JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_verifyHyperVAdminAccount
(JNIEnv *, jclass, jstring, jstring, jstring, jboolean);

/*
* Class:     com_ca_arcflash_webservice_jni_WSJNI
* Method:    isIVMAgentExist
* Signature: (J)Ljava/lang/String;
*/
JNIEXPORT jboolean JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_isIVMAgentExist
(JNIEnv *, jclass, jstring);

/*
* Class:     com_ca_arcflash_webservice_jni_WSJNI
* Method:    getHyperVServerOsVersion
* Signature: (J)Ljava/lang/String;
*/
JNIEXPORT jstring JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_getHyperVServerOsVersion
(JNIEnv *, jclass, jlong);

/*
* Class:     com_ca_arcflash_webservice_jni_WSJNI
* Method:    getHypervVMInfo
* Signature: (JLjava/lang/String;)Lcom/ca/arcflash/webservice/jni/model/JHypervVMInfo;
*/
JNIEXPORT jobject JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_getHypervVMInfo
(JNIEnv *, jclass, jlong, jstring);

/*
* Class:     com_ca_arcflash_webservice_jni_WSJNI
* Method:    cancelGroupJob
* Signature: (JJLjava/util/List;)I
*/
JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_cancelGroupJob
(JNIEnv *, jclass, jlong, jlong, jobject);

/*
* Class:     com_ca_arcflash_webservice_jni_WSJNI
* Method:    getDataSizesFromStorage
* Signature: 
*/
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_getDataSizesFromStorage
(JNIEnv *, jclass, jobject, jstring, jstring, jstring);

JNIEXPORT jboolean JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_isHyperVVmExist
(JNIEnv *, jclass, jstring, jlong);

JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_getVolumeSize
(JNIEnv *, jclass, jstring, jobject);

JNIEXPORT jstring JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_EncryptDNSPassword
(JNIEnv *env, jclass clz, jstring plainText);

JNIEXPORT jstring JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_DecryptDNSPassword
(JNIEnv *env, jclass clz, jstring plainText);

JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetLastArchiveCatalogUpdateTime2
(JNIEnv *env, jclass clz, jstring catalogDirBasePath, jobject jDestInfo, jobject out_CatalogDetails);

JNIEXPORT jint JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_checkServiceState
(JNIEnv *env, jclass clz, jstring hostname, jstring serviceName, jstring userName, jstring password, jobject service);

JNIEXPORT jboolean JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_CheckASBUAgent(JNIEnv *env, jclass clz);

/*zxh,
* Class:     com_ca_arcflash_webservice_jni_WSJNI
* Method:    VDDismountResBrsVols
* Signature:
*/
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_VDDismountResBrsVols
(JNIEnv *, jclass, jboolean bForceDisMntAllResBrw);

/*zxh,
* Class:     com_ca_arcflash_webservice_jni_WSJNI
* Method:    VDUpateVolumeExtData
* Signature:
*/
JNIEXPORT jlong JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_VDUpateVolumeMountTimestamp
(JNIEnv *, jclass, jstring volumeID);

/*
* Class:     com_ca_arcflash_webservice_jni_WSJNI
* Method:    GetDisplayLanguage
* Signature:
*/
JNIEXPORT jstring JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_GetDisplayLanguage
(JNIEnv *env, jclass clz);


/*
* Class:     com_ca_arcflash_webservice_jni_WSJNI
* Method:    GetHostFQDN
* Signature:
*/
JNIEXPORT jstring JNICALL Java_com_ca_arcflash_webservice_jni_WSJNI_getHostFQDN
(JNIEnv *env, jclass clz);


#ifdef __cplusplus
}
#endif
#endif
