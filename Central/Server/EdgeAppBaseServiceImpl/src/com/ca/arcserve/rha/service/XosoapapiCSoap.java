
package com.ca.arcserve.rha.service;

import java.math.BigInteger;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Holder;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "xosoapapi_cSoap", targetNamespace = "http://ca.com/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface XosoapapiCSoap {


    /**
     * 
     * @param sessionId
     * @param keepCurrentUserCreds
     */
    @WebMethod(operationName = "set_keep_current_user_creds", action = "http://ca.com/set_keep_current_user_creds")
    @RequestWrapper(localName = "set_keep_current_user_creds", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.SetKeepCurrentUserCreds")
    @ResponseWrapper(localName = "set_keep_current_user_credsResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.SetKeepCurrentUserCredsResponse")
    public void setKeepCurrentUserCreds(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "keep_current_user_creds", targetNamespace = "http://ca.com/")
        boolean keepCurrentUserCreds);

    /**
     * 
     * @param sessionId
     * @param uninstall4Ver
     */
    @WebMethod(operationName = "set_uninstall_4ver", action = "http://ca.com/set_uninstall_4ver")
    @RequestWrapper(localName = "set_uninstall_4ver", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.SetUninstall4Ver")
    @ResponseWrapper(localName = "set_uninstall_4verResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.SetUninstall4VerResponse")
    public void setUninstall4Ver(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "uninstall_4ver", targetNamespace = "http://ca.com/")
        boolean uninstall4Ver);

    /**
     * 
     * @param sessionId
     * @return
     *     returns com.ca.arcserve.rha.service.ArrayOfString
     */
    @WebMethod(operationName = "get_current_RI_log", action = "http://ca.com/get_current_RI_log")
    @WebResult(name = "get_current_RI_logResult", targetNamespace = "http://ca.com/")
    @RequestWrapper(localName = "get_current_RI_log", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetCurrentRILog")
    @ResponseWrapper(localName = "get_current_RI_logResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetCurrentRILogResponse")
    public ArrayOfString getCurrentRILog(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId);

    /**
     * 
     * @param snapshotList
     * @param sessionId
     * @param hostName
     * @param getSnapshotListResult
     * @param whyNotReason
     * @param hostPort
     * @param ipString
     */
    @WebMethod(operationName = "get_snapshot_list", action = "http://ca.com/get_snapshot_list")
    @RequestWrapper(localName = "get_snapshot_list", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetSnapshotList")
    @ResponseWrapper(localName = "get_snapshot_listResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetSnapshotListResponse")
    public void getSnapshotList(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "host_name", targetNamespace = "http://ca.com/")
        String hostName,
        @WebParam(name = "ip_string", targetNamespace = "http://ca.com/")
        String ipString,
        @WebParam(name = "host_port", targetNamespace = "http://ca.com/")
        int hostPort,
        @WebParam(name = "get_snapshot_listResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> getSnapshotListResult,
        @WebParam(name = "snapshot_list", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> snapshotList,
        @WebParam(name = "why_not_reason", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> whyNotReason);

    /**
     * 
     * @param snapshotId
     * @param exposeSnapshotResult
     * @param sessionId
     * @param hostName
     * @param whyNotReason
     * @param hostPort
     * @param exposePath
     * @param ipString
     */
    @WebMethod(operationName = "expose_snapshot", action = "http://ca.com/expose_snapshot")
    @RequestWrapper(localName = "expose_snapshot", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.ExposeSnapshot")
    @ResponseWrapper(localName = "expose_snapshotResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.ExposeSnapshotResponse")
    public void exposeSnapshot(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "host_name", targetNamespace = "http://ca.com/")
        String hostName,
        @WebParam(name = "ip_string", targetNamespace = "http://ca.com/")
        String ipString,
        @WebParam(name = "host_port", targetNamespace = "http://ca.com/")
        int hostPort,
        @WebParam(name = "snapshot_id", targetNamespace = "http://ca.com/")
        String snapshotId,
        @WebParam(name = "expose_path", targetNamespace = "http://ca.com/")
        String exposePath,
        @WebParam(name = "expose_snapshotResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> exposeSnapshotResult,
        @WebParam(name = "why_not_reason", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> whyNotReason);

    /**
     * 
     * @param snapshotId
     * @param sessionId
     * @param mountSnapshotResult
     * @param mountPath
     * @param hostName
     * @param whyNotReason
     * @param hostPort
     * @param ipString
     */
    @WebMethod(operationName = "mount_snapshot", action = "http://ca.com/mount_snapshot")
    @RequestWrapper(localName = "mount_snapshot", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.MountSnapshot")
    @ResponseWrapper(localName = "mount_snapshotResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.MountSnapshotResponse")
    public void mountSnapshot(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "host_name", targetNamespace = "http://ca.com/")
        String hostName,
        @WebParam(name = "ip_string", targetNamespace = "http://ca.com/")
        String ipString,
        @WebParam(name = "host_port", targetNamespace = "http://ca.com/")
        int hostPort,
        @WebParam(name = "snapshot_id", targetNamespace = "http://ca.com/")
        String snapshotId,
        @WebParam(name = "mount_path", targetNamespace = "http://ca.com/")
        String mountPath,
        @WebParam(name = "mount_snapshotResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> mountSnapshotResult,
        @WebParam(name = "why_not_reason", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> whyNotReason);

    /**
     * 
     * @param snapshotId
     * @param sessionId
     * @param hostName
     * @param whyNotReason
     * @param hostPort
     * @param unmountSnapshotResult
     * @param ipString
     */
    @WebMethod(operationName = "unmount_snapshot", action = "http://ca.com/unmount_snapshot")
    @RequestWrapper(localName = "unmount_snapshot", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.UnmountSnapshot")
    @ResponseWrapper(localName = "unmount_snapshotResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.UnmountSnapshotResponse")
    public void unmountSnapshot(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "host_name", targetNamespace = "http://ca.com/")
        String hostName,
        @WebParam(name = "ip_string", targetNamespace = "http://ca.com/")
        String ipString,
        @WebParam(name = "host_port", targetNamespace = "http://ca.com/")
        int hostPort,
        @WebParam(name = "snapshot_id", targetNamespace = "http://ca.com/")
        String snapshotId,
        @WebParam(name = "unmount_snapshotResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> unmountSnapshotResult,
        @WebParam(name = "why_not_reason", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> whyNotReason);

    /**
     * 
     * @param snapshotId
     * @param sessionId
     * @param hostName
     * @param deleteSnapshotResult
     * @param whyNotReason
     * @param hostPort
     * @param ipString
     */
    @WebMethod(operationName = "delete_snapshot", action = "http://ca.com/delete_snapshot")
    @RequestWrapper(localName = "delete_snapshot", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.DeleteSnapshot")
    @ResponseWrapper(localName = "delete_snapshotResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.DeleteSnapshotResponse")
    public void deleteSnapshot(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "host_name", targetNamespace = "http://ca.com/")
        String hostName,
        @WebParam(name = "ip_string", targetNamespace = "http://ca.com/")
        String ipString,
        @WebParam(name = "host_port", targetNamespace = "http://ca.com/")
        int hostPort,
        @WebParam(name = "snapshot_id", targetNamespace = "http://ca.com/")
        String snapshotId,
        @WebParam(name = "delete_snapshotResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> deleteSnapshotResult,
        @WebParam(name = "why_not_reason", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> whyNotReason);

    /**
     * 
     * @param sessionId
     * @param hostName
     * @param whyNotReason
     * @param getHostListResult
     * @param hostPort
     * @param hostList
     * @param ipString
     */
    @WebMethod(operationName = "get_host_list", action = "http://ca.com/get_host_list")
    @RequestWrapper(localName = "get_host_list", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetHostList")
    @ResponseWrapper(localName = "get_host_listResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetHostListResponse")
    public void getHostList(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "host_name", targetNamespace = "http://ca.com/")
        String hostName,
        @WebParam(name = "ip_string", targetNamespace = "http://ca.com/")
        String ipString,
        @WebParam(name = "host_port", targetNamespace = "http://ca.com/")
        int hostPort,
        @WebParam(name = "get_host_listResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> getHostListResult,
        @WebParam(name = "host_list", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> hostList,
        @WebParam(name = "why_not_reason", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> whyNotReason);

    /**
     * 
     * @param prepareForRebootResult
     * @param rebootHost
     * @param sessionId
     * @param hostName
     * @param hostKey
     * @param whyNotReason
     * @param rebootIpList
     * @param hostPort
     * @param ipString
     */
    @WebMethod(operationName = "prepare_for_reboot", action = "http://ca.com/prepare_for_reboot")
    @RequestWrapper(localName = "prepare_for_reboot", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.PrepareForReboot")
    @ResponseWrapper(localName = "prepare_for_rebootResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.PrepareForRebootResponse")
    public void prepareForReboot(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "host_name", targetNamespace = "http://ca.com/")
        String hostName,
        @WebParam(name = "ip_string", targetNamespace = "http://ca.com/")
        String ipString,
        @WebParam(name = "host_port", targetNamespace = "http://ca.com/")
        int hostPort,
        @WebParam(name = "host_key", targetNamespace = "http://ca.com/")
        String hostKey,
        @WebParam(name = "reboot_host", targetNamespace = "http://ca.com/")
        String rebootHost,
        @WebParam(name = "reboot_ip_list", targetNamespace = "http://ca.com/")
        String rebootIpList,
        @WebParam(name = "prepare_for_rebootResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> prepareForRebootResult,
        @WebParam(name = "why_not_reason", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> whyNotReason);

    /**
     * 
     * @param rebootManagerData
     * @param sessionId
     * @param getRebootDataResult
     * @param lastUpdateTicks
     */
    @WebMethod(operationName = "get_reboot_data", action = "http://ca.com/get_reboot_data")
    @RequestWrapper(localName = "get_reboot_data", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetRebootData")
    @ResponseWrapper(localName = "get_reboot_dataResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetRebootDataResponse")
    public void getRebootData(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "last_update_ticks", targetNamespace = "http://ca.com/", mode = WebParam.Mode.INOUT)
        Holder<BigInteger> lastUpdateTicks,
        @WebParam(name = "get_reboot_dataResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> getRebootDataResult,
        @WebParam(name = "reboot_manager_data", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> rebootManagerData);

    /**
     * 
     * @param sessionId
     * @param licGetKeyResult
     * @param licKey
     */
    @WebMethod(operationName = "lic_get_key", action = "http://ca.com/lic_get_key")
    @RequestWrapper(localName = "lic_get_key", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.LicGetKey")
    @ResponseWrapper(localName = "lic_get_keyResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.LicGetKeyResponse")
    public void licGetKey(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "lic_get_keyResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> licGetKeyResult,
        @WebParam(name = "lic_key", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> licKey);

    /**
     * 
     * @param licRegKeyResult
     * @param sessionId
     * @param company
     * @param licKey
     * @param whyNotReason
     */
    @WebMethod(operationName = "lic_reg_key", action = "http://ca.com/lic_reg_key")
    @RequestWrapper(localName = "lic_reg_key", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.LicRegKey")
    @ResponseWrapper(localName = "lic_reg_keyResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.LicRegKeyResponse")
    public void licRegKey(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "lic_key", targetNamespace = "http://ca.com/")
        String licKey,
        @WebParam(name = "company", targetNamespace = "http://ca.com/")
        String company,
        @WebParam(name = "lic_reg_keyResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> licRegKeyResult,
        @WebParam(name = "why_not_reason", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> whyNotReason);

    /**
     * 
     * @param sessionId
     * @param licKey
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "lic_check_key", action = "http://ca.com/lic_check_key")
    @WebResult(name = "lic_check_keyResult", targetNamespace = "http://ca.com/")
    @RequestWrapper(localName = "lic_check_key", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.LicCheckKey")
    @ResponseWrapper(localName = "lic_check_keyResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.LicCheckKeyResponse")
    public boolean licCheckKey(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "lic_key", targetNamespace = "http://ca.com/")
        String licKey);

    /**
     * 
     * @param sessionId
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "lic_un_reg", action = "http://ca.com/lic_un_reg")
    @WebResult(name = "lic_un_regResult", targetNamespace = "http://ca.com/")
    @RequestWrapper(localName = "lic_un_reg", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.LicUnReg")
    @ResponseWrapper(localName = "lic_un_regResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.LicUnRegResponse")
    public boolean licUnReg(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId);

    /**
     * 
     * @param sessionId
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "lic_is_reg", action = "http://ca.com/lic_is_reg")
    @WebResult(name = "lic_is_regResult", targetNamespace = "http://ca.com/")
    @RequestWrapper(localName = "lic_is_reg", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.LicIsReg")
    @ResponseWrapper(localName = "lic_is_regResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.LicIsRegResponse")
    public boolean licIsReg(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId);

    /**
     * 
     * @param scenarioId
     * @param licIsScenValidResult
     * @param sessionId
     * @param whyNotReason
     */
    @WebMethod(operationName = "lic_is_scen_valid", action = "http://ca.com/lic_is_scen_valid")
    @RequestWrapper(localName = "lic_is_scen_valid", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.LicIsScenValid")
    @ResponseWrapper(localName = "lic_is_scen_validResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.LicIsScenValidResponse")
    public void licIsScenValid(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_id", targetNamespace = "http://ca.com/")
        long scenarioId,
        @WebParam(name = "lic_is_scen_validResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> licIsScenValidResult,
        @WebParam(name = "why_not_reason", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> whyNotReason);

    /**
     * 
     * @param sessionId
     * @param licGetDescResult
     * @param licKey
     * @param licDesc
     */
    @WebMethod(operationName = "lic_get_desc", action = "http://ca.com/lic_get_desc")
    @RequestWrapper(localName = "lic_get_desc", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.LicGetDesc")
    @ResponseWrapper(localName = "lic_get_descResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.LicGetDescResponse")
    public void licGetDesc(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "lic_key", targetNamespace = "http://ca.com/")
        String licKey,
        @WebParam(name = "lic_get_descResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> licGetDescResult,
        @WebParam(name = "lic_desc", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> licDesc);

    /**
     * 
     * @param licCompanyResult
     * @param sessionId
     * @param company
     */
    @WebMethod(operationName = "lic_company", action = "http://ca.com/lic_company")
    @RequestWrapper(localName = "lic_company", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.LicCompany")
    @ResponseWrapper(localName = "lic_companyResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.LicCompanyResponse")
    public void licCompany(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "lic_companyResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> licCompanyResult,
        @WebParam(name = "company", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> company);

    /**
     * 
     * @param expTime
     * @param licGetTimeResult
     * @param sessionId
     * @param mntTime
     */
    @WebMethod(operationName = "lic_get_time", action = "http://ca.com/lic_get_time")
    @RequestWrapper(localName = "lic_get_time", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.LicGetTime")
    @ResponseWrapper(localName = "lic_get_timeResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.LicGetTimeResponse")
    public void licGetTime(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "lic_get_timeResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> licGetTimeResult,
        @WebParam(name = "exp_time", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<BigInteger> expTime,
        @WebParam(name = "mnt_time", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<BigInteger> mntTime);

    /**
     * 
     * @param days
     * @param sessionId
     * @param licDaysToExpirationResult
     */
    @WebMethod(operationName = "lic_days_to_expiration", action = "http://ca.com/lic_days_to_expiration")
    @RequestWrapper(localName = "lic_days_to_expiration", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.LicDaysToExpiration")
    @ResponseWrapper(localName = "lic_days_to_expirationResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.LicDaysToExpirationResponse")
    public void licDaysToExpiration(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "lic_days_to_expirationResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> licDaysToExpirationResult,
        @WebParam(name = "days", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Integer> days);

    /**
     * 
     * @param licProductTypResult
     * @param typDb
     * @param sessionId
     * @param typFs
     */
    @WebMethod(operationName = "lic_product_typ", action = "http://ca.com/lic_product_typ")
    @RequestWrapper(localName = "lic_product_typ", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.LicProductTyp")
    @ResponseWrapper(localName = "lic_product_typResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.LicProductTypResponse")
    public void licProductTyp(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "lic_product_typResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> licProductTypResult,
        @WebParam(name = "typ_fs", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> typFs,
        @WebParam(name = "typ_db", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> typDb);

    /**
     * 
     * @param licProductOptResult
     * @param optDr
     * @param sessionId
     * @param optHa
     * @param optCd
     */
    @WebMethod(operationName = "lic_product_opt", action = "http://ca.com/lic_product_opt")
    @RequestWrapper(localName = "lic_product_opt", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.LicProductOpt")
    @ResponseWrapper(localName = "lic_product_optResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.LicProductOptResponse")
    public void licProductOpt(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "lic_product_optResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> licProductOptResult,
        @WebParam(name = "opt_ha", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> optHa,
        @WebParam(name = "opt_dr", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> optDr,
        @WebParam(name = "opt_cd", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> optCd);

    /**
     * 
     * @param sessionId
     * @param licNodeCountsResult
     * @param cdpNum
     * @param arNum
     */
    @WebMethod(operationName = "lic_node_counts", action = "http://ca.com/lic_node_counts")
    @RequestWrapper(localName = "lic_node_counts", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.LicNodeCounts")
    @ResponseWrapper(localName = "lic_node_countsResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.LicNodeCountsResponse")
    public void licNodeCounts(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "lic_node_countsResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> licNodeCountsResult,
        @WebParam(name = "ar_num", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Integer> arNum,
        @WebParam(name = "cdp_num", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Integer> cdpNum);

    /**
     * 
     * @param optAcl
     * @param licAclResult
     * @param sessionId
     */
    @WebMethod(operationName = "lic_acl", action = "http://ca.com/lic_acl")
    @RequestWrapper(localName = "lic_acl", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.LicAcl")
    @ResponseWrapper(localName = "lic_aclResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.LicAclResponse")
    public void licAcl(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "lic_aclResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> licAclResult,
        @WebParam(name = "opt_acl", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> optAcl);

    /**
     * 
     * @param scenarioId
     * @param sessionId
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "get_scenario_users", action = "http://ca.com/get_scenario_users")
    @WebResult(name = "get_scenario_usersResult", targetNamespace = "http://ca.com/")
    @RequestWrapper(localName = "get_scenario_users", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetScenarioUsers")
    @ResponseWrapper(localName = "get_scenario_usersResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetScenarioUsersResponse")
    public String getScenarioUsers(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_id", targetNamespace = "http://ca.com/")
        long scenarioId);

    /**
     * 
     * @param groupName
     * @param sessionId
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "get_group_users", action = "http://ca.com/get_group_users")
    @WebResult(name = "get_group_usersResult", targetNamespace = "http://ca.com/")
    @RequestWrapper(localName = "get_group_users", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetGroupUsers")
    @ResponseWrapper(localName = "get_group_usersResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetGroupUsersResponse")
    public String getGroupUsers(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "group_name", targetNamespace = "http://ca.com/")
        String groupName);

    /**
     * 
     * @param scenarioId
     * @param sessionId
     * @param userRights
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "set_acl_rights", action = "http://ca.com/set_acl_rights")
    @WebResult(name = "set_acl_rightsResult", targetNamespace = "http://ca.com/")
    @RequestWrapper(localName = "set_acl_rights", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.SetAclRights")
    @ResponseWrapper(localName = "set_acl_rightsResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.SetAclRightsResponse")
    public boolean setAclRights(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_id", targetNamespace = "http://ca.com/")
        long scenarioId,
        @WebParam(name = "user_rights", targetNamespace = "http://ca.com/")
        String userRights);

    /**
     * 
     * @param scenarioId
     * @param setAclRightsExResult
     * @param sessionId
     * @param failedUsers
     * @param userRights
     */
    @WebMethod(operationName = "set_acl_rights_ex", action = "http://ca.com/set_acl_rights_ex")
    @RequestWrapper(localName = "set_acl_rights_ex", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.SetAclRightsEx")
    @ResponseWrapper(localName = "set_acl_rights_exResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.SetAclRightsExResponse")
    public void setAclRightsEx(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_id", targetNamespace = "http://ca.com/")
        long scenarioId,
        @WebParam(name = "user_rights", targetNamespace = "http://ca.com/")
        String userRights,
        @WebParam(name = "set_acl_rights_exResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> setAclRightsExResult,
        @WebParam(name = "failed_users", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> failedUsers);

    /**
     * 
     * @param sessionId
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "get_permission_table", action = "http://ca.com/get_permission_table")
    @WebResult(name = "get_permission_tableResult", targetNamespace = "http://ca.com/")
    @RequestWrapper(localName = "get_permission_table", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetPermissionTable")
    @ResponseWrapper(localName = "get_permission_tableResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetPermissionTableResponse")
    public String getPermissionTable(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId);

    /**
     * 
     * @param sessionId
     * @param getSuperuserNameResult
     * @param superuserName
     */
    @WebMethod(operationName = "get_superuser_name", action = "http://ca.com/get_superuser_name")
    @RequestWrapper(localName = "get_superuser_name", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetSuperuserName")
    @ResponseWrapper(localName = "get_superuser_nameResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetSuperuserNameResponse")
    public void getSuperuserName(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "get_superuser_nameResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> getSuperuserNameResult,
        @WebParam(name = "superuser_name", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> superuserName);

    /**
     * 
     * @param sessionId
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "get_local_group_names", action = "http://ca.com/get_local_group_names")
    @WebResult(name = "get_local_group_namesResult", targetNamespace = "http://ca.com/")
    @RequestWrapper(localName = "get_local_group_names", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetLocalGroupNames")
    @ResponseWrapper(localName = "get_local_group_namesResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetLocalGroupNamesResponse")
    public String getLocalGroupNames(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId);

    /**
     * 
     * @param groupName
     * @param sessionId
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "change_su_group", action = "http://ca.com/change_su_group")
    @WebResult(name = "change_su_groupResult", targetNamespace = "http://ca.com/")
    @RequestWrapper(localName = "change_su_group", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.ChangeSuGroup")
    @ResponseWrapper(localName = "change_su_groupResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.ChangeSuGroupResponse")
    public boolean changeSuGroup(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "group_name", targetNamespace = "http://ca.com/")
        String groupName);

    /**
     * 
     * @param accountId
     * @param errMessages
     * @param sessionId
     * @param accountDetails
     * @param cloudAddAccountResult
     * @param accountProvider
     */
    @WebMethod(operationName = "cloud_add_account", action = "http://ca.com/cloud_add_account")
    @RequestWrapper(localName = "cloud_add_account", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CloudAddAccount")
    @ResponseWrapper(localName = "cloud_add_accountResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CloudAddAccountResponse")
    public void cloudAddAccount(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "account_id", targetNamespace = "http://ca.com/")
        String accountId,
        @WebParam(name = "account_provider", targetNamespace = "http://ca.com/")
        long accountProvider,
        @WebParam(name = "account_details", targetNamespace = "http://ca.com/")
        String accountDetails,
        @WebParam(name = "cloud_add_accountResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> cloudAddAccountResult,
        @WebParam(name = "err_messages", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> errMessages);

    /**
     * 
     * @param accountId
     * @param errMessages
     * @param sessionId
     * @param cloudRemoveAccountResult
     */
    @WebMethod(operationName = "cloud_remove_account", action = "http://ca.com/cloud_remove_account")
    @RequestWrapper(localName = "cloud_remove_account", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CloudRemoveAccount")
    @ResponseWrapper(localName = "cloud_remove_accountResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CloudRemoveAccountResponse")
    public void cloudRemoveAccount(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "account_id", targetNamespace = "http://ca.com/")
        String accountId,
        @WebParam(name = "cloud_remove_accountResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> cloudRemoveAccountResult,
        @WebParam(name = "err_messages", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> errMessages);

    /**
     * 
     * @param cloudUpdateAccountResult
     * @param accountId
     * @param errMessages
     * @param sessionId
     * @param accountDetails
     */
    @WebMethod(operationName = "cloud_update_account", action = "http://ca.com/cloud_update_account")
    @RequestWrapper(localName = "cloud_update_account", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CloudUpdateAccount")
    @ResponseWrapper(localName = "cloud_update_accountResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CloudUpdateAccountResponse")
    public void cloudUpdateAccount(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "account_id", targetNamespace = "http://ca.com/")
        String accountId,
        @WebParam(name = "account_details", targetNamespace = "http://ca.com/")
        String accountDetails,
        @WebParam(name = "cloud_update_accountResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> cloudUpdateAccountResult,
        @WebParam(name = "err_messages", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> errMessages);

    /**
     * 
     * @param instanceDetails
     * @param accountId
     * @param errMessages
     * @param asyncId
     * @param sessionId
     * @param cloudCreateInstanceResult
     */
    @WebMethod(operationName = "cloud_create_instance", action = "http://ca.com/cloud_create_instance")
    @RequestWrapper(localName = "cloud_create_instance", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CloudCreateInstance")
    @ResponseWrapper(localName = "cloud_create_instanceResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CloudCreateInstanceResponse")
    public void cloudCreateInstance(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "account_id", targetNamespace = "http://ca.com/")
        String accountId,
        @WebParam(name = "instance_details", targetNamespace = "http://ca.com/", mode = WebParam.Mode.INOUT)
        Holder<String> instanceDetails,
        @WebParam(name = "cloud_create_instanceResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> cloudCreateInstanceResult,
        @WebParam(name = "async_id", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<BigInteger> asyncId,
        @WebParam(name = "err_messages", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> errMessages);

    /**
     * 
     * @param accountId
     * @param errMessages
     * @param asyncId
     * @param sessionId
     * @param instanceId
     * @param cloudDeleteInstanceResult
     */
    @WebMethod(operationName = "cloud_delete_instance", action = "http://ca.com/cloud_delete_instance")
    @RequestWrapper(localName = "cloud_delete_instance", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CloudDeleteInstance")
    @ResponseWrapper(localName = "cloud_delete_instanceResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CloudDeleteInstanceResponse")
    public void cloudDeleteInstance(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "account_id", targetNamespace = "http://ca.com/")
        String accountId,
        @WebParam(name = "instance_id", targetNamespace = "http://ca.com/")
        String instanceId,
        @WebParam(name = "cloud_delete_instanceResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> cloudDeleteInstanceResult,
        @WebParam(name = "async_id", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<BigInteger> asyncId,
        @WebParam(name = "err_messages", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> errMessages);

    /**
     * 
     * @param accountId
     * @param errMessages
     * @param asyncId
     * @param sessionId
     * @param cloudStartInstanceResult
     * @param instanceId
     */
    @WebMethod(operationName = "cloud_start_instance", action = "http://ca.com/cloud_start_instance")
    @RequestWrapper(localName = "cloud_start_instance", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CloudStartInstance")
    @ResponseWrapper(localName = "cloud_start_instanceResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CloudStartInstanceResponse")
    public void cloudStartInstance(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "account_id", targetNamespace = "http://ca.com/")
        String accountId,
        @WebParam(name = "instance_id", targetNamespace = "http://ca.com/")
        String instanceId,
        @WebParam(name = "cloud_start_instanceResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> cloudStartInstanceResult,
        @WebParam(name = "async_id", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<BigInteger> asyncId,
        @WebParam(name = "err_messages", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> errMessages);

    /**
     * 
     * @param cloudStopInstanceResult
     * @param accountId
     * @param errMessages
     * @param asyncId
     * @param sessionId
     * @param instanceId
     */
    @WebMethod(operationName = "cloud_stop_instance", action = "http://ca.com/cloud_stop_instance")
    @RequestWrapper(localName = "cloud_stop_instance", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CloudStopInstance")
    @ResponseWrapper(localName = "cloud_stop_instanceResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CloudStopInstanceResponse")
    public void cloudStopInstance(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "account_id", targetNamespace = "http://ca.com/")
        String accountId,
        @WebParam(name = "instance_id", targetNamespace = "http://ca.com/")
        String instanceId,
        @WebParam(name = "cloud_stop_instanceResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> cloudStopInstanceResult,
        @WebParam(name = "async_id", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<BigInteger> asyncId,
        @WebParam(name = "err_messages", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> errMessages);

    /**
     * 
     * @param accountList
     * @param cloudGetAccountListResult
     * @param errMessages
     * @param sessionId
     */
    @WebMethod(operationName = "cloud_get_account_list", action = "http://ca.com/cloud_get_account_list")
    @RequestWrapper(localName = "cloud_get_account_list", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CloudGetAccountList")
    @ResponseWrapper(localName = "cloud_get_account_listResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CloudGetAccountListResponse")
    public void cloudGetAccountList(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "cloud_get_account_listResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> cloudGetAccountListResult,
        @WebParam(name = "account_list", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> accountList,
        @WebParam(name = "err_messages", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> errMessages);

    /**
     * 
     * @param cloudRegion
     * @param accountId
     * @param errMessages
     * @param sessionId
     * @param cloudGetInstanceListResult
     * @param instanceList
     */
    @WebMethod(operationName = "cloud_get_instance_list", action = "http://ca.com/cloud_get_instance_list")
    @RequestWrapper(localName = "cloud_get_instance_list", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CloudGetInstanceList")
    @ResponseWrapper(localName = "cloud_get_instance_listResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CloudGetInstanceListResponse")
    public void cloudGetInstanceList(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "account_id", targetNamespace = "http://ca.com/")
        String accountId,
        @WebParam(name = "cloud_region", targetNamespace = "http://ca.com/")
        String cloudRegion,
        @WebParam(name = "cloud_get_instance_listResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> cloudGetInstanceListResult,
        @WebParam(name = "instance_list", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> instanceList,
        @WebParam(name = "err_messages", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> errMessages);

    /**
     * 
     * @param cloudData
     * @param cloudGetDataResult
     * @param errMessages
     * @param sessionId
     */
    @WebMethod(operationName = "cloud_get_data", action = "http://ca.com/cloud_get_data")
    @RequestWrapper(localName = "cloud_get_data", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CloudGetData")
    @ResponseWrapper(localName = "cloud_get_dataResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CloudGetDataResponse")
    public void cloudGetData(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "cloud_get_dataResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> cloudGetDataResult,
        @WebParam(name = "cloud_data", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> cloudData,
        @WebParam(name = "err_messages", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> errMessages);

    /**
     * 
     * @param accountId
     * @param errMessages
     * @param sessionId
     * @param cloudGetInstanceParamsResult
     * @param asyncResId
     * @param instanceParams
     * @param executeSync
     */
    @WebMethod(operationName = "cloud_get_instance_params", action = "http://ca.com/cloud_get_instance_params")
    @RequestWrapper(localName = "cloud_get_instance_params", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CloudGetInstanceParams")
    @ResponseWrapper(localName = "cloud_get_instance_paramsResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CloudGetInstanceParamsResponse")
    public void cloudGetInstanceParams(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "account_id", targetNamespace = "http://ca.com/")
        String accountId,
        @WebParam(name = "execute_sync", targetNamespace = "http://ca.com/")
        boolean executeSync,
        @WebParam(name = "cloud_get_instance_paramsResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> cloudGetInstanceParamsResult,
        @WebParam(name = "instance_params", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> instanceParams,
        @WebParam(name = "async_res_id", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<BigInteger> asyncResId,
        @WebParam(name = "err_messages", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> errMessages);

    /**
     * 
     * @param accountId
     * @param errMessages
     * @param sessionId
     * @param keypairDetails
     * @param keypairName
     * @param cloudCreateKeypairResult
     */
    @WebMethod(operationName = "cloud_create_keypair", action = "http://ca.com/cloud_create_keypair")
    @RequestWrapper(localName = "cloud_create_keypair", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CloudCreateKeypair")
    @ResponseWrapper(localName = "cloud_create_keypairResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CloudCreateKeypairResponse")
    public void cloudCreateKeypair(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "account_id", targetNamespace = "http://ca.com/")
        String accountId,
        @WebParam(name = "keypair_name", targetNamespace = "http://ca.com/")
        String keypairName,
        @WebParam(name = "cloud_create_keypairResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> cloudCreateKeypairResult,
        @WebParam(name = "keypair_details", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> keypairDetails,
        @WebParam(name = "err_messages", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> errMessages);

    /**
     * 
     * @param cloudGetInstancePasswordResult
     * @param accountId
     * @param privateKey
     * @param errMessages
     * @param sessionId
     * @param instanceId
     * @param password
     */
    @WebMethod(operationName = "cloud_get_instance_password", action = "http://ca.com/cloud_get_instance_password")
    @RequestWrapper(localName = "cloud_get_instance_password", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CloudGetInstancePassword")
    @ResponseWrapper(localName = "cloud_get_instance_passwordResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CloudGetInstancePasswordResponse")
    public void cloudGetInstancePassword(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "account_id", targetNamespace = "http://ca.com/")
        String accountId,
        @WebParam(name = "instance_id", targetNamespace = "http://ca.com/")
        String instanceId,
        @WebParam(name = "private_key", targetNamespace = "http://ca.com/")
        String privateKey,
        @WebParam(name = "cloud_get_instance_passwordResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> cloudGetInstancePasswordResult,
        @WebParam(name = "password", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> password,
        @WebParam(name = "err_messages", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> errMessages);

    /**
     * 
     * @param cloudGetAccountDataResult
     * @param accountId
     * @param errMessages
     * @param sessionId
     * @param accountData
     */
    @WebMethod(operationName = "cloud_get_account_data", action = "http://ca.com/cloud_get_account_data")
    @RequestWrapper(localName = "cloud_get_account_data", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CloudGetAccountData")
    @ResponseWrapper(localName = "cloud_get_account_dataResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CloudGetAccountDataResponse")
    public void cloudGetAccountData(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "account_id", targetNamespace = "http://ca.com/")
        String accountId,
        @WebParam(name = "cloud_get_account_dataResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> cloudGetAccountDataResult,
        @WebParam(name = "account_data", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> accountData,
        @WebParam(name = "err_messages", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> errMessages);

    /**
     * 
     * @param accountId
     * @param statsConfig
     * @param errMessages
     * @param sessionId
     * @param asyncResId
     * @param cloudGetStatisticsResult
     * @param statsData
     * @param executeSync
     */
    @WebMethod(operationName = "cloud_get_statistics", action = "http://ca.com/cloud_get_statistics")
    @RequestWrapper(localName = "cloud_get_statistics", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CloudGetStatistics")
    @ResponseWrapper(localName = "cloud_get_statisticsResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CloudGetStatisticsResponse")
    public void cloudGetStatistics(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "account_id", targetNamespace = "http://ca.com/")
        String accountId,
        @WebParam(name = "execute_sync", targetNamespace = "http://ca.com/")
        boolean executeSync,
        @WebParam(name = "stats_config", targetNamespace = "http://ca.com/")
        String statsConfig,
        @WebParam(name = "cloud_get_statisticsResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> cloudGetStatisticsResult,
        @WebParam(name = "stats_data", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> statsData,
        @WebParam(name = "async_res_id", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<BigInteger> asyncResId,
        @WebParam(name = "err_messages", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> errMessages);

    /**
     * 
     * @param accountId
     * @param errMessages
     * @param asyncId
     * @param sessionId
     * @param instanceId
     * @param cloudRebootInstanceResult
     */
    @WebMethod(operationName = "cloud_reboot_instance", action = "http://ca.com/cloud_reboot_instance")
    @RequestWrapper(localName = "cloud_reboot_instance", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CloudRebootInstance")
    @ResponseWrapper(localName = "cloud_reboot_instanceResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CloudRebootInstanceResponse")
    public void cloudRebootInstance(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "account_id", targetNamespace = "http://ca.com/")
        String accountId,
        @WebParam(name = "instance_id", targetNamespace = "http://ca.com/")
        String instanceId,
        @WebParam(name = "cloud_reboot_instanceResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> cloudRebootInstanceResult,
        @WebParam(name = "async_id", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<BigInteger> asyncId,
        @WebParam(name = "err_messages", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> errMessages);

    /**
     * 
     * @param proxySettings
     * @param cloudSetWebProxyResult
     * @param errMessages
     * @param sessionId
     */
    @WebMethod(operationName = "cloud_set_web_proxy", action = "http://ca.com/cloud_set_web_proxy")
    @RequestWrapper(localName = "cloud_set_web_proxy", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CloudSetWebProxy")
    @ResponseWrapper(localName = "cloud_set_web_proxyResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CloudSetWebProxyResponse")
    public void cloudSetWebProxy(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "proxy_settings", targetNamespace = "http://ca.com/")
        String proxySettings,
        @WebParam(name = "cloud_set_web_proxyResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> cloudSetWebProxyResult,
        @WebParam(name = "err_messages", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> errMessages);

    /**
     * 
     * @param cloudGetRegionsResult
     * @param regionList
     * @param accountId
     * @param errMessages
     * @param sessionId
     */
    @WebMethod(operationName = "cloud_get_regions", action = "http://ca.com/cloud_get_regions")
    @RequestWrapper(localName = "cloud_get_regions", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CloudGetRegions")
    @ResponseWrapper(localName = "cloud_get_regionsResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CloudGetRegionsResponse")
    public void cloudGetRegions(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "account_id", targetNamespace = "http://ca.com/")
        String accountId,
        @WebParam(name = "cloud_get_regionsResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> cloudGetRegionsResult,
        @WebParam(name = "region_list", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> regionList,
        @WebParam(name = "err_messages", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> errMessages);

    /**
     * 
     * @param total
     * @param limit
     * @param sessionId
     * @param scenId
     * @param getScenarioMessagesResult
     * @param managerData
     * @param offset
     */
    @WebMethod(operationName = "get_scenario_messages", action = "http://ca.com/get_scenario_messages")
    @RequestWrapper(localName = "get_scenario_messages", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetScenarioMessages")
    @ResponseWrapper(localName = "get_scenario_messagesResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetScenarioMessagesResponse")
    public void getScenarioMessages(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scen_id", targetNamespace = "http://ca.com/")
        long scenId,
        @WebParam(name = "offset", targetNamespace = "http://ca.com/")
        BigInteger offset,
        @WebParam(name = "limit", targetNamespace = "http://ca.com/")
        BigInteger limit,
        @WebParam(name = "get_scenario_messagesResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> getScenarioMessagesResult,
        @WebParam(name = "manager_data", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> managerData);

    /**
     * 
     * @param sessionId
     * @param scenId
     * @param getScenarioStatisticsResult
     * @param managerData
     */
    @WebMethod(operationName = "get_scenario_statistics", action = "http://ca.com/get_scenario_statistics")
    @RequestWrapper(localName = "get_scenario_statistics", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetScenarioStatistics")
    @ResponseWrapper(localName = "get_scenario_statisticsResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetScenarioStatisticsResponse")
    public void getScenarioStatistics(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scen_id", targetNamespace = "http://ca.com/")
        long scenId,
        @WebParam(name = "get_scenario_statisticsResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> getScenarioStatisticsResult,
        @WebParam(name = "manager_data", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> managerData);

    /**
     * 
     * @param dataType
     * @param hostIndex
     * @param getScenarioDataByTypeResult
     * @param sessionId
     * @param scenId
     * @param parameters
     * @param managerData
     */
    @WebMethod(operationName = "get_scenario_data_by_type", action = "http://ca.com/get_scenario_data_by_type")
    @RequestWrapper(localName = "get_scenario_data_by_type", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetScenarioDataByType")
    @ResponseWrapper(localName = "get_scenario_data_by_typeResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetScenarioDataByTypeResponse")
    public void getScenarioDataByType(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scen_id", targetNamespace = "http://ca.com/")
        long scenId,
        @WebParam(name = "host_index", targetNamespace = "http://ca.com/")
        long hostIndex,
        @WebParam(name = "data_type", targetNamespace = "http://ca.com/")
        long dataType,
        @WebParam(name = "parameters", targetNamespace = "http://ca.com/")
        String parameters,
        @WebParam(name = "get_scenario_data_by_typeResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> getScenarioDataByTypeResult,
        @WebParam(name = "manager_data", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> managerData);

    /**
     * 
     * @param setScenarioDataByTypeResult
     * @param dataType
     * @param hostIndex
     * @param sessionId
     * @param scenId
     * @param parameters
     * @param managerData
     */
    @WebMethod(operationName = "set_scenario_data_by_type", action = "http://ca.com/set_scenario_data_by_type")
    @RequestWrapper(localName = "set_scenario_data_by_type", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.SetScenarioDataByType")
    @ResponseWrapper(localName = "set_scenario_data_by_typeResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.SetScenarioDataByTypeResponse")
    public void setScenarioDataByType(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scen_id", targetNamespace = "http://ca.com/")
        long scenId,
        @WebParam(name = "host_index", targetNamespace = "http://ca.com/")
        long hostIndex,
        @WebParam(name = "data_type", targetNamespace = "http://ca.com/")
        long dataType,
        @WebParam(name = "parameters", targetNamespace = "http://ca.com/")
        String parameters,
        @WebParam(name = "set_scenario_data_by_typeResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> setScenarioDataByTypeResult,
        @WebParam(name = "manager_data", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> managerData);

    /**
     * 
     * @param dataStamp
     * @param sessionId
     * @param scenId
     * @param managerData
     * @param checkScenarioMessagesResult
     */
    @WebMethod(operationName = "check_scenario_messages", action = "http://ca.com/check_scenario_messages")
    @RequestWrapper(localName = "check_scenario_messages", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CheckScenarioMessages")
    @ResponseWrapper(localName = "check_scenario_messagesResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CheckScenarioMessagesResponse")
    public void checkScenarioMessages(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scen_id", targetNamespace = "http://ca.com/")
        long scenId,
        @WebParam(name = "data_stamp", targetNamespace = "http://ca.com/")
        BigInteger dataStamp,
        @WebParam(name = "check_scenario_messagesResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> checkScenarioMessagesResult,
        @WebParam(name = "manager_data", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> managerData);

    /**
     * 
     * @param groupId
     * @param sessionId
     * @param removeScenarioGroupResult
     * @param whyNotReason
     * @param groupData
     */
    @WebMethod(operationName = "remove_scenario_group", action = "http://ca.com/remove_scenario_group")
    @RequestWrapper(localName = "remove_scenario_group", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.RemoveScenarioGroup")
    @ResponseWrapper(localName = "remove_scenario_groupResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.RemoveScenarioGroupResponse")
    public void removeScenarioGroup(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "group_id", targetNamespace = "http://ca.com/")
        long groupId,
        @WebParam(name = "group_data", targetNamespace = "http://ca.com/")
        String groupData,
        @WebParam(name = "remove_scenario_groupResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> removeScenarioGroupResult,
        @WebParam(name = "why_not_reason", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> whyNotReason);

    /**
     * 
     * @param dbContents
     * @param discoverTopology
     * @param dbName
     * @param groupOrScenData
     * @param sessionId
     * @param userName
     * @param groupDbAutodiscoveryResult
     * @param dbType
     * @param password
     * @param sceToDiscoverArray
     */
    @WebMethod(operationName = "group_db_autodiscovery", action = "http://ca.com/group_db_autodiscovery")
    @RequestWrapper(localName = "group_db_autodiscovery", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GroupDbAutodiscovery")
    @ResponseWrapper(localName = "group_db_autodiscoveryResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GroupDbAutodiscoveryResponse")
    public void groupDbAutodiscovery(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "discover_topology", targetNamespace = "http://ca.com/")
        boolean discoverTopology,
        @WebParam(name = "group_or_scen_data", targetNamespace = "http://ca.com/")
        String groupOrScenData,
        @WebParam(name = "sce_to_discover_array", targetNamespace = "http://ca.com/")
        String sceToDiscoverArray,
        @WebParam(name = "db_name", targetNamespace = "http://ca.com/")
        String dbName,
        @WebParam(name = "user_name", targetNamespace = "http://ca.com/")
        String userName,
        @WebParam(name = "password", targetNamespace = "http://ca.com/")
        String password,
        @WebParam(name = "db_type", targetNamespace = "http://ca.com/")
        long dbType,
        @WebParam(name = "group_db_autodiscoveryResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> groupDbAutodiscoveryResult,
        @WebParam(name = "db_contents", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> dbContents);

    /**
     * 
     * @param scenarioDataSet
     * @param replicaHostIndex
     * @param groupId
     * @param errMessages
     * @param sessionId
     * @param asyncResId
     * @param compareDbConfigsForGroupResult
     * @param executeSync
     */
    @WebMethod(operationName = "compare_db_configs_for_group", action = "http://ca.com/compare_db_configs_for_group")
    @RequestWrapper(localName = "compare_db_configs_for_group", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CompareDbConfigsForGroup")
    @ResponseWrapper(localName = "compare_db_configs_for_groupResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CompareDbConfigsForGroupResponse")
    public void compareDbConfigsForGroup(
        @WebParam(name = "group_id", targetNamespace = "http://ca.com/")
        long groupId,
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "replica_host_index", targetNamespace = "http://ca.com/")
        long replicaHostIndex,
        @WebParam(name = "scenario_data_set", targetNamespace = "http://ca.com/")
        String scenarioDataSet,
        @WebParam(name = "execute_sync", targetNamespace = "http://ca.com/")
        boolean executeSync,
        @WebParam(name = "compare_db_configs_for_groupResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> compareDbConfigsForGroupResult,
        @WebParam(name = "async_res_id", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<BigInteger> asyncResId,
        @WebParam(name = "err_messages", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> errMessages);

    /**
     * 
     * @param autoconfigGroupDbResult
     * @param scenarioDataSet
     * @param replicaHostIndex
     * @param groupId
     * @param relationsMap
     * @param errMessages
     * @param sessionId
     * @param asyncResId
     */
    @WebMethod(operationName = "autoconfig_group_db", action = "http://ca.com/autoconfig_group_db")
    @RequestWrapper(localName = "autoconfig_group_db", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.AutoconfigGroupDb")
    @ResponseWrapper(localName = "autoconfig_group_dbResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.AutoconfigGroupDbResponse")
    public void autoconfigGroupDb(
        @WebParam(name = "group_id", targetNamespace = "http://ca.com/")
        long groupId,
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "replica_host_index", targetNamespace = "http://ca.com/")
        long replicaHostIndex,
        @WebParam(name = "scenario_data_set", targetNamespace = "http://ca.com/")
        String scenarioDataSet,
        @WebParam(name = "relations_map", targetNamespace = "http://ca.com/")
        String relationsMap,
        @WebParam(name = "autoconfig_group_dbResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> autoconfigGroupDbResult,
        @WebParam(name = "async_res_id", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<BigInteger> asyncResId,
        @WebParam(name = "err_messages", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> errMessages);

    /**
     * 
     * @param groupId
     * @param sessionId
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "get_scenario_group_data", action = "http://ca.com/get_scenario_group_data")
    @WebResult(name = "get_scenario_group_dataResult", targetNamespace = "http://ca.com/")
    @RequestWrapper(localName = "get_scenario_group_data", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetScenarioGroupData")
    @ResponseWrapper(localName = "get_scenario_group_dataResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetScenarioGroupDataResponse")
    public String getScenarioGroupData(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "group_id", targetNamespace = "http://ca.com/")
        long groupId);

    /**
     * 
     * @param id
     * @param newValue
     * @param updateGroupPropResult
     * @param sessionId
     * @param propId
     * @param objLabel
     * @param checkPrompt
     * @param groupData
     * @param msg
     */
    @WebMethod(operationName = "update_group_prop", action = "http://ca.com/update_group_prop")
    @RequestWrapper(localName = "update_group_prop", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.UpdateGroupProp")
    @ResponseWrapper(localName = "update_group_propResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.UpdateGroupPropResponse")
    public void updateGroupProp(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "group_data", targetNamespace = "http://ca.com/", mode = WebParam.Mode.INOUT)
        Holder<String> groupData,
        @WebParam(name = "id", targetNamespace = "http://ca.com/")
        long id,
        @WebParam(name = "obj_label", targetNamespace = "http://ca.com/")
        String objLabel,
        @WebParam(name = "prop_id", targetNamespace = "http://ca.com/")
        String propId,
        @WebParam(name = "new_value", targetNamespace = "http://ca.com/")
        String newValue,
        @WebParam(name = "check_prompt", targetNamespace = "http://ca.com/")
        boolean checkPrompt,
        @WebParam(name = "update_group_propResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Long> updateGroupPropResult,
        @WebParam(name = "msg", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> msg);

    /**
     * 
     * @param groupId
     * @param groupSwitchoverResult
     * @param errMessages
     * @param sessionId
     * @param runReverse
     * @param switchoverType
     * @param executeSync
     */
    @WebMethod(operationName = "group_switchover", action = "http://ca.com/group_switchover")
    @RequestWrapper(localName = "group_switchover", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GroupSwitchover")
    @ResponseWrapper(localName = "group_switchoverResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GroupSwitchoverResponse")
    public void groupSwitchover(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "group_id", targetNamespace = "http://ca.com/")
        long groupId,
        @WebParam(name = "switchover_type", targetNamespace = "http://ca.com/")
        long switchoverType,
        @WebParam(name = "execute_sync", targetNamespace = "http://ca.com/")
        boolean executeSync,
        @WebParam(name = "run_reverse", targetNamespace = "http://ca.com/")
        boolean runReverse,
        @WebParam(name = "group_switchoverResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> groupSwitchoverResult,
        @WebParam(name = "err_messages", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> errMessages);

    /**
     * 
     * @param groupId
     * @param errMessages
     * @param sessionId
     * @param groupRunResult
     * @param sceToDiscoverArray
     * @param verificationAndRun
     */
    @WebMethod(operationName = "group_run", action = "http://ca.com/group_run")
    @RequestWrapper(localName = "group_run", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GroupRun")
    @ResponseWrapper(localName = "group_runResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GroupRunResponse")
    public void groupRun(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "group_id", targetNamespace = "http://ca.com/")
        long groupId,
        @WebParam(name = "verification_and_run", targetNamespace = "http://ca.com/")
        long verificationAndRun,
        @WebParam(name = "sce_to_discover_array", targetNamespace = "http://ca.com/")
        String sceToDiscoverArray,
        @WebParam(name = "group_runResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> groupRunResult,
        @WebParam(name = "err_messages", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> errMessages);

    /**
     * 
     * @param groupId
     * @param recoveryType
     * @param errMessages
     * @param sessionId
     * @param groupRecoverActiveServerResult
     * @param executeSync
     */
    @WebMethod(operationName = "group_recover_active_server", action = "http://ca.com/group_recover_active_server")
    @RequestWrapper(localName = "group_recover_active_server", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GroupRecoverActiveServer")
    @ResponseWrapper(localName = "group_recover_active_serverResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GroupRecoverActiveServerResponse")
    public void groupRecoverActiveServer(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "group_id", targetNamespace = "http://ca.com/")
        long groupId,
        @WebParam(name = "recovery_type", targetNamespace = "http://ca.com/")
        long recoveryType,
        @WebParam(name = "execute_sync", targetNamespace = "http://ca.com/")
        boolean executeSync,
        @WebParam(name = "group_recover_active_serverResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> groupRecoverActiveServerResult,
        @WebParam(name = "err_messages", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> errMessages);

    /**
     * 
     * @param sessionId
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "get_scenario_list", action = "http://ca.com/get_scenario_list")
    @WebResult(name = "get_scenario_listResult", targetNamespace = "http://ca.com/")
    @RequestWrapper(localName = "get_scenario_list", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetScenarioList")
    @ResponseWrapper(localName = "get_scenario_listResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetScenarioListResponse")
    public String getScenarioList(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId);

    /**
     * 
     * @param skipStats
     * @param sessionId
     * @param getScenarioListExResult
     * @param scenarioListStr
     */
    @WebMethod(operationName = "get_scenario_list_ex", action = "http://ca.com/get_scenario_list_ex")
    @RequestWrapper(localName = "get_scenario_list_ex", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetScenarioListEx")
    @ResponseWrapper(localName = "get_scenario_list_exResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetScenarioListExResponse")
    public void getScenarioListEx(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "skip_stats", targetNamespace = "http://ca.com/")
        boolean skipStats,
        @WebParam(name = "get_scenario_list_exResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> getScenarioListExResult,
        @WebParam(name = "scenario_list_str", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> scenarioListStr);

    /**
     * 
     * @param product
     * @param scenarioData
     * @param groupId
     * @param app
     * @param sessId
     * @param isAssRec
     * @param createScenarioResult
     * @param siOpt
     * @param groupData
     * @param isCdp
     */
    @WebMethod(operationName = "create_scenario", action = "http://ca.com/create_scenario")
    @RequestWrapper(localName = "create_scenario", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CreateScenario")
    @ResponseWrapper(localName = "create_scenarioResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CreateScenarioResponse")
    public void createScenario(
        @WebParam(name = "sess_id", targetNamespace = "http://ca.com/")
        long sessId,
        @WebParam(name = "product", targetNamespace = "http://ca.com/")
        long product,
        @WebParam(name = "app", targetNamespace = "http://ca.com/")
        long app,
        @WebParam(name = "is_ass_rec", targetNamespace = "http://ca.com/")
        boolean isAssRec,
        @WebParam(name = "is_cdp", targetNamespace = "http://ca.com/")
        boolean isCdp,
        @WebParam(name = "si_opt", targetNamespace = "http://ca.com/")
        long siOpt,
        @WebParam(name = "group_id", targetNamespace = "http://ca.com/")
        long groupId,
        @WebParam(name = "create_scenarioResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> createScenarioResult,
        @WebParam(name = "scenario_data", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> scenarioData,
        @WebParam(name = "group_data", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> groupData);

    /**
     * 
     * @param groupId
     * @param sessId
     * @param scenId
     * @param importScenarioResult
     * @param whyNotReason
     * @param scn
     */
    @WebMethod(operationName = "import_scenario", action = "http://ca.com/import_scenario")
    @RequestWrapper(localName = "import_scenario", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.ImportScenario")
    @ResponseWrapper(localName = "import_scenarioResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.ImportScenarioResponse")
    public void importScenario(
        @WebParam(name = "sess_id", targetNamespace = "http://ca.com/")
        long sessId,
        @WebParam(name = "group_id", targetNamespace = "http://ca.com/")
        long groupId,
        @WebParam(name = "scn", targetNamespace = "http://ca.com/")
        String scn,
        @WebParam(name = "import_scenarioResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> importScenarioResult,
        @WebParam(name = "scen_id", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Long> scenId,
        @WebParam(name = "why_not_reason", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> whyNotReason);

    /**
     * 
     * @param scenSt
     * @param sessId
     * @param scenId
     * @param getScenarioStateResult
     */
    @WebMethod(operationName = "get_scenario_state", action = "http://ca.com/get_scenario_state")
    @RequestWrapper(localName = "get_scenario_state", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetScenarioState")
    @ResponseWrapper(localName = "get_scenario_stateResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetScenarioStateResponse")
    public void getScenarioState(
        @WebParam(name = "sess_id", targetNamespace = "http://ca.com/")
        long sessId,
        @WebParam(name = "scen_id", targetNamespace = "http://ca.com/")
        long scenId,
        @WebParam(name = "get_scenario_stateResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> getScenarioStateResult,
        @WebParam(name = "scen_st", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Long> scenSt);

    /**
     * 
     * @param product
     * @param scenarioData
     * @param createTemplateResult
     * @param app
     * @param sessId
     * @param isAssRec
     * @param siOpt
     * @param groupData
     * @param isCdp
     */
    @WebMethod(operationName = "create_template", action = "http://ca.com/create_template")
    @RequestWrapper(localName = "create_template", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CreateTemplate")
    @ResponseWrapper(localName = "create_templateResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CreateTemplateResponse")
    public void createTemplate(
        @WebParam(name = "sess_id", targetNamespace = "http://ca.com/")
        long sessId,
        @WebParam(name = "product", targetNamespace = "http://ca.com/")
        long product,
        @WebParam(name = "app", targetNamespace = "http://ca.com/")
        long app,
        @WebParam(name = "is_ass_rec", targetNamespace = "http://ca.com/")
        boolean isAssRec,
        @WebParam(name = "is_cdp", targetNamespace = "http://ca.com/")
        boolean isCdp,
        @WebParam(name = "si_opt", targetNamespace = "http://ca.com/")
        long siOpt,
        @WebParam(name = "create_templateResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> createTemplateResult,
        @WebParam(name = "scenario_data", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> scenarioData,
        @WebParam(name = "group_data", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> groupData);

    /**
     * 
     * @param templateId
     * @param scenarioData
     * @param groupId
     * @param sessionId
     * @param createScenarioFromTemplateResult
     * @param groupData
     */
    @WebMethod(operationName = "create_scenario_from_template", action = "http://ca.com/create_scenario_from_template")
    @RequestWrapper(localName = "create_scenario_from_template", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CreateScenarioFromTemplate")
    @ResponseWrapper(localName = "create_scenario_from_templateResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CreateScenarioFromTemplateResponse")
    public void createScenarioFromTemplate(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "template_id", targetNamespace = "http://ca.com/")
        long templateId,
        @WebParam(name = "group_id", targetNamespace = "http://ca.com/")
        long groupId,
        @WebParam(name = "create_scenario_from_templateResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> createScenarioFromTemplateResult,
        @WebParam(name = "scenario_data", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> scenarioData,
        @WebParam(name = "group_data", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> groupData);

    /**
     * 
     * @param scenarioId
     * @param scenarioData
     * @param groupId
     * @param keepSynchFiles
     * @param sessionId
     * @param createRestoreScenarioResult
     * @param hostId
     * @param groupData
     */
    @WebMethod(operationName = "create_restore_scenario", action = "http://ca.com/create_restore_scenario")
    @RequestWrapper(localName = "create_restore_scenario", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CreateRestoreScenario")
    @ResponseWrapper(localName = "create_restore_scenarioResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CreateRestoreScenarioResponse")
    public void createRestoreScenario(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_id", targetNamespace = "http://ca.com/")
        long scenarioId,
        @WebParam(name = "group_id", targetNamespace = "http://ca.com/")
        long groupId,
        @WebParam(name = "host_id", targetNamespace = "http://ca.com/")
        long hostId,
        @WebParam(name = "keepSynchFiles", targetNamespace = "http://ca.com/")
        boolean keepSynchFiles,
        @WebParam(name = "create_restore_scenarioResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> createRestoreScenarioResult,
        @WebParam(name = "scenario_data", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> scenarioData,
        @WebParam(name = "group_data", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> groupData);

    /**
     * 
     * @param stopDBonMaster
     * @param scenarioId
     * @param scenarioData
     * @param createRestoreScenarioExResult
     * @param regSynchronize
     * @param groupId
     * @param keepSynchFiles
     * @param sessionId
     * @param hostId
     * @param groupData
     */
    @WebMethod(operationName = "create_restore_scenario_ex", action = "http://ca.com/create_restore_scenario_ex")
    @RequestWrapper(localName = "create_restore_scenario_ex", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CreateRestoreScenarioEx")
    @ResponseWrapper(localName = "create_restore_scenario_exResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CreateRestoreScenarioExResponse")
    public void createRestoreScenarioEx(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_id", targetNamespace = "http://ca.com/")
        long scenarioId,
        @WebParam(name = "group_id", targetNamespace = "http://ca.com/")
        long groupId,
        @WebParam(name = "host_id", targetNamespace = "http://ca.com/")
        long hostId,
        @WebParam(name = "stopDBonMaster", targetNamespace = "http://ca.com/")
        boolean stopDBonMaster,
        @WebParam(name = "keepSynchFiles", targetNamespace = "http://ca.com/")
        boolean keepSynchFiles,
        @WebParam(name = "reg_synchronize", targetNamespace = "http://ca.com/")
        boolean regSynchronize,
        @WebParam(name = "create_restore_scenario_exResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> createRestoreScenarioExResult,
        @WebParam(name = "scenario_data", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> scenarioData,
        @WebParam(name = "group_data", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> groupData);

    /**
     * 
     * @param scenarioId
     * @param scenarioData
     * @param groupId
     * @param sessionId
     * @param groupData
     * @param cloneScenarioResult
     */
    @WebMethod(operationName = "clone_scenario", action = "http://ca.com/clone_scenario")
    @RequestWrapper(localName = "clone_scenario", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CloneScenario")
    @ResponseWrapper(localName = "clone_scenarioResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CloneScenarioResponse")
    public void cloneScenario(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_id", targetNamespace = "http://ca.com/")
        long scenarioId,
        @WebParam(name = "group_id", targetNamespace = "http://ca.com/")
        long groupId,
        @WebParam(name = "clone_scenarioResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> cloneScenarioResult,
        @WebParam(name = "scenario_data", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> scenarioData,
        @WebParam(name = "group_data", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> groupData);

    /**
     * 
     * @param scenarioId
     * @param hostIndex
     * @param sessionId
     * @param createRewindPointsListResult
     * @param whyNotReason
     */
    @WebMethod(operationName = "create_rewind_points_list", action = "http://ca.com/create_rewind_points_list")
    @RequestWrapper(localName = "create_rewind_points_list", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CreateRewindPointsList")
    @ResponseWrapper(localName = "create_rewind_points_listResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CreateRewindPointsListResponse")
    public void createRewindPointsList(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_id", targetNamespace = "http://ca.com/")
        long scenarioId,
        @WebParam(name = "host_index", targetNamespace = "http://ca.com/")
        long hostIndex,
        @WebParam(name = "create_rewind_points_listResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> createRewindPointsListResult,
        @WebParam(name = "why_not_reason", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> whyNotReason);

    /**
     * 
     * @param scenarioId
     * @param hostIndex
     * @param createRewindPointsListAsynchResult
     * @param sessionId
     * @param asyncResId
     * @param whyNotReason
     */
    @WebMethod(operationName = "create_rewind_points_list_asynch", action = "http://ca.com/create_rewind_points_list_asynch")
    @RequestWrapper(localName = "create_rewind_points_list_asynch", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CreateRewindPointsListAsynch")
    @ResponseWrapper(localName = "create_rewind_points_list_asynchResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CreateRewindPointsListAsynchResponse")
    public void createRewindPointsListAsynch(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_id", targetNamespace = "http://ca.com/")
        long scenarioId,
        @WebParam(name = "host_index", targetNamespace = "http://ca.com/")
        long hostIndex,
        @WebParam(name = "create_rewind_points_list_asynchResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> createRewindPointsListAsynchResult,
        @WebParam(name = "async_res_id", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<BigInteger> asyncResId,
        @WebParam(name = "why_not_reason", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> whyNotReason);

    /**
     * 
     * @param scenarioId
     * @param getRewindPointsRecordsResult
     * @param hostIndex
     * @param count
     * @param sessionId
     * @param pointsList
     * @param startFrom
     * @param whyNotReason
     */
    @WebMethod(operationName = "get_rewind_points_records", action = "http://ca.com/get_rewind_points_records")
    @RequestWrapper(localName = "get_rewind_points_records", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetRewindPointsRecords")
    @ResponseWrapper(localName = "get_rewind_points_recordsResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetRewindPointsRecordsResponse")
    public void getRewindPointsRecords(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_id", targetNamespace = "http://ca.com/")
        long scenarioId,
        @WebParam(name = "host_index", targetNamespace = "http://ca.com/")
        long hostIndex,
        @WebParam(name = "start_from", targetNamespace = "http://ca.com/")
        long startFrom,
        @WebParam(name = "count", targetNamespace = "http://ca.com/")
        long count,
        @WebParam(name = "get_rewind_points_recordsResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> getRewindPointsRecordsResult,
        @WebParam(name = "points_list", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> pointsList,
        @WebParam(name = "why_not_reason", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> whyNotReason);

    /**
     * 
     * @param scenarioId
     * @param hostIndex
     * @param percent
     * @param sessionId
     * @param currentCount
     * @param toBeCont
     * @param getRewindPointsListStatusResult
     * @param whyNotReason
     * @param estimateRemainingTime
     */
    @WebMethod(operationName = "get_rewind_points_list_status", action = "http://ca.com/get_rewind_points_list_status")
    @RequestWrapper(localName = "get_rewind_points_list_status", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetRewindPointsListStatus")
    @ResponseWrapper(localName = "get_rewind_points_list_statusResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetRewindPointsListStatusResponse")
    public void getRewindPointsListStatus(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_id", targetNamespace = "http://ca.com/")
        long scenarioId,
        @WebParam(name = "host_index", targetNamespace = "http://ca.com/")
        long hostIndex,
        @WebParam(name = "get_rewind_points_list_statusResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> getRewindPointsListStatusResult,
        @WebParam(name = "to_be_cont", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> toBeCont,
        @WebParam(name = "estimate_remaining_time", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Long> estimateRemainingTime,
        @WebParam(name = "current_count", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Long> currentCount,
        @WebParam(name = "percent", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Long> percent,
        @WebParam(name = "why_not_reason", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> whyNotReason);

    /**
     * 
     * @param scenarioId
     * @param hostIndex
     * @param reason
     * @param sessionId
     * @param whyNotReason
     * @param getRewindPointsListSummaryResult
     */
    @WebMethod(operationName = "get_rewind_points_list_summary", action = "http://ca.com/get_rewind_points_list_summary")
    @RequestWrapper(localName = "get_rewind_points_list_summary", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetRewindPointsListSummary")
    @ResponseWrapper(localName = "get_rewind_points_list_summaryResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetRewindPointsListSummaryResponse")
    public void getRewindPointsListSummary(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_id", targetNamespace = "http://ca.com/")
        long scenarioId,
        @WebParam(name = "host_index", targetNamespace = "http://ca.com/")
        long hostIndex,
        @WebParam(name = "get_rewind_points_list_summaryResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> getRewindPointsListSummaryResult,
        @WebParam(name = "reason", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> reason,
        @WebParam(name = "why_not_reason", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> whyNotReason);

    /**
     * 
     * @param scenarioId
     * @param hostIndex
     * @param percent
     * @param totalCount
     * @param getRewindPointsNextChunkResult
     * @param sessionId
     * @param currentCount
     * @param toBeCont
     * @param whyNotReason
     */
    @WebMethod(operationName = "get_rewind_points_next_chunk", action = "http://ca.com/get_rewind_points_next_chunk")
    @RequestWrapper(localName = "get_rewind_points_next_chunk", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetRewindPointsNextChunk")
    @ResponseWrapper(localName = "get_rewind_points_next_chunkResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetRewindPointsNextChunkResponse")
    public void getRewindPointsNextChunk(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_id", targetNamespace = "http://ca.com/")
        long scenarioId,
        @WebParam(name = "host_index", targetNamespace = "http://ca.com/")
        long hostIndex,
        @WebParam(name = "get_rewind_points_next_chunkResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> getRewindPointsNextChunkResult,
        @WebParam(name = "to_be_cont", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> toBeCont,
        @WebParam(name = "total_count", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Long> totalCount,
        @WebParam(name = "current_count", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Long> currentCount,
        @WebParam(name = "percent", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Long> percent,
        @WebParam(name = "why_not_reason", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> whyNotReason);

    /**
     * 
     * @param scenarioId
     * @param hostIndex
     * @param applayRewindPointsListFilterResult
     * @param totalCount
     * @param sessionId
     * @param whyNotReason
     * @param filter
     */
    @WebMethod(operationName = "applay_rewind_points_list_filter", action = "http://ca.com/applay_rewind_points_list_filter")
    @RequestWrapper(localName = "applay_rewind_points_list_filter", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.ApplayRewindPointsListFilter")
    @ResponseWrapper(localName = "applay_rewind_points_list_filterResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.ApplayRewindPointsListFilterResponse")
    public void applayRewindPointsListFilter(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_id", targetNamespace = "http://ca.com/")
        long scenarioId,
        @WebParam(name = "host_index", targetNamespace = "http://ca.com/")
        long hostIndex,
        @WebParam(name = "filter", targetNamespace = "http://ca.com/")
        String filter,
        @WebParam(name = "applay_rewind_points_list_filterResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> applayRewindPointsListFilterResult,
        @WebParam(name = "total_count", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Long> totalCount,
        @WebParam(name = "why_not_reason", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> whyNotReason);

    /**
     * 
     * @param scenarioId
     * @param checkSelectedRewindPointResult
     * @param pointSeqNum
     * @param hostIndex
     * @param sessionId
     * @param numEventsToExecute
     * @param needFile
     * @param pointId
     * @param toPointId
     * @param whyNotReason
     */
    @WebMethod(operationName = "check_selected_rewind_point", action = "http://ca.com/check_selected_rewind_point")
    @RequestWrapper(localName = "check_selected_rewind_point", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CheckSelectedRewindPoint")
    @ResponseWrapper(localName = "check_selected_rewind_pointResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CheckSelectedRewindPointResponse")
    public void checkSelectedRewindPoint(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_id", targetNamespace = "http://ca.com/")
        long scenarioId,
        @WebParam(name = "host_index", targetNamespace = "http://ca.com/")
        long hostIndex,
        @WebParam(name = "point_id", targetNamespace = "http://ca.com/")
        BigInteger pointId,
        @WebParam(name = "point_seq_num", targetNamespace = "http://ca.com/")
        int pointSeqNum,
        @WebParam(name = "check_selected_rewind_pointResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> checkSelectedRewindPointResult,
        @WebParam(name = "to_point_id", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<BigInteger> toPointId,
        @WebParam(name = "need_file", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> needFile,
        @WebParam(name = "num_events_to_execute", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Integer> numEventsToExecute,
        @WebParam(name = "why_not_reason", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> whyNotReason);

    /**
     * 
     * @param scenarioId
     * @param startRewindProcessResult
     * @param pointSeqNum
     * @param hostIndex
     * @param sessionId
     * @param pointId
     * @param whyNotReason
     */
    @WebMethod(operationName = "start_rewind_process", action = "http://ca.com/start_rewind_process")
    @RequestWrapper(localName = "start_rewind_process", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.StartRewindProcess")
    @ResponseWrapper(localName = "start_rewind_processResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.StartRewindProcessResponse")
    public void startRewindProcess(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_id", targetNamespace = "http://ca.com/")
        long scenarioId,
        @WebParam(name = "host_index", targetNamespace = "http://ca.com/")
        long hostIndex,
        @WebParam(name = "point_id", targetNamespace = "http://ca.com/")
        BigInteger pointId,
        @WebParam(name = "point_seq_num", targetNamespace = "http://ca.com/")
        int pointSeqNum,
        @WebParam(name = "start_rewind_processResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> startRewindProcessResult,
        @WebParam(name = "why_not_reason", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> whyNotReason);

    /**
     * 
     * @param scenarioId
     * @param percent
     * @param sessionId
     * @param getRewindProcessStatusResult
     * @param whyNotReason
     * @param estimateRemainingTime
     */
    @WebMethod(operationName = "get_rewind_process_status", action = "http://ca.com/get_rewind_process_status")
    @RequestWrapper(localName = "get_rewind_process_status", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetRewindProcessStatus")
    @ResponseWrapper(localName = "get_rewind_process_statusResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetRewindProcessStatusResponse")
    public void getRewindProcessStatus(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_id", targetNamespace = "http://ca.com/")
        long scenarioId,
        @WebParam(name = "get_rewind_process_statusResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> getRewindProcessStatusResult,
        @WebParam(name = "estimate_remaining_time", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Long> estimateRemainingTime,
        @WebParam(name = "percent", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Long> percent,
        @WebParam(name = "why_not_reason", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> whyNotReason);

    /**
     * 
     * @param scenarioId
     * @param hostIndex
     * @param sessionId
     * @param deleteRewindPointsListResult
     * @param whyNotReason
     */
    @WebMethod(operationName = "delete_rewind_points_list", action = "http://ca.com/delete_rewind_points_list")
    @RequestWrapper(localName = "delete_rewind_points_list", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.DeleteRewindPointsList")
    @ResponseWrapper(localName = "delete_rewind_points_listResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.DeleteRewindPointsListResponse")
    public void deleteRewindPointsList(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_id", targetNamespace = "http://ca.com/")
        long scenarioId,
        @WebParam(name = "host_index", targetNamespace = "http://ca.com/")
        long hostIndex,
        @WebParam(name = "delete_rewind_points_listResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> deleteRewindPointsListResult,
        @WebParam(name = "why_not_reason", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> whyNotReason);

    /**
     * 
     * @param scenarioId
     * @param sessionId
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "get_scenario_data", action = "http://ca.com/get_scenario_data")
    @WebResult(name = "get_scenario_dataResult", targetNamespace = "http://ca.com/")
    @RequestWrapper(localName = "get_scenario_data", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetScenarioData")
    @ResponseWrapper(localName = "get_scenario_dataResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetScenarioDataResponse")
    public String getScenarioData(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_id", targetNamespace = "http://ca.com/")
        long scenarioId);

    /**
     * 
     * @param scenarioId
     * @param sessionId
     * @param scenarioDataStr
     * @param saveScenarioResult
     * @param signature
     */
    @WebMethod(operationName = "save_scenario", action = "http://ca.com/save_scenario")
    @RequestWrapper(localName = "save_scenario", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.SaveScenario")
    @ResponseWrapper(localName = "save_scenarioResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.SaveScenarioResponse")
    public void saveScenario(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_id", targetNamespace = "http://ca.com/")
        long scenarioId,
        @WebParam(name = "scenario_data_str", targetNamespace = "http://ca.com/", mode = WebParam.Mode.INOUT)
        Holder<String> scenarioDataStr,
        @WebParam(name = "save_scenarioResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> saveScenarioResult,
        @WebParam(name = "signature", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<BigInteger> signature);

    /**
     * 
     * @param scenarioId
     * @param sessionId
     * @param scenarioDataStr
     * @param whyNotReason
     * @param updateScenarioResult
     */
    @WebMethod(operationName = "update_scenario", action = "http://ca.com/update_scenario")
    @RequestWrapper(localName = "update_scenario", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.UpdateScenario")
    @ResponseWrapper(localName = "update_scenarioResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.UpdateScenarioResponse")
    public void updateScenario(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_id", targetNamespace = "http://ca.com/")
        long scenarioId,
        @WebParam(name = "scenario_data_str", targetNamespace = "http://ca.com/", mode = WebParam.Mode.INOUT)
        Holder<String> scenarioDataStr,
        @WebParam(name = "update_scenarioResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> updateScenarioResult,
        @WebParam(name = "why_not_reason", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> whyNotReason);

    /**
     * 
     * @param scenarioId
     * @param canScenarioBeRemovedResult
     * @param sessionId
     * @param whyNotReason
     */
    @WebMethod(operationName = "can_scenario_be_removed", action = "http://ca.com/can_scenario_be_removed")
    @RequestWrapper(localName = "can_scenario_be_removed", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CanScenarioBeRemoved")
    @ResponseWrapper(localName = "can_scenario_be_removedResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CanScenarioBeRemovedResponse")
    public void canScenarioBeRemoved(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_id", targetNamespace = "http://ca.com/")
        long scenarioId,
        @WebParam(name = "can_scenario_be_removedResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> canScenarioBeRemovedResult,
        @WebParam(name = "why_not_reason", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> whyNotReason);

    /**
     * 
     * @param scenarioId
     * @param snapshotList
     * @param hostIndex
     * @param sessionId
     * @param checkSnapshotBootableResult
     * @param whyNotReason
     */
    @WebMethod(operationName = "check_snapshot_bootable", action = "http://ca.com/check_snapshot_bootable")
    @RequestWrapper(localName = "check_snapshot_bootable", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CheckSnapshotBootable")
    @ResponseWrapper(localName = "check_snapshot_bootableResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CheckSnapshotBootableResponse")
    public void checkSnapshotBootable(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_id", targetNamespace = "http://ca.com/")
        long scenarioId,
        @WebParam(name = "host_index", targetNamespace = "http://ca.com/")
        long hostIndex,
        @WebParam(name = "check_snapshot_bootableResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Short> checkSnapshotBootableResult,
        @WebParam(name = "snapshot_list", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> snapshotList,
        @WebParam(name = "why_not_reason", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> whyNotReason);

    /**
     * 
     * @param snapshotId
     * @param scenarioId
     * @param startVmWithSnapshortResult
     * @param hostIndex
     * @param sessionId
     * @param netMappingId
     * @param whyNotReason
     */
    @WebMethod(operationName = "start_vm_with_snapshort", action = "http://ca.com/start_vm_with_snapshort")
    @RequestWrapper(localName = "start_vm_with_snapshort", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.StartVmWithSnapshort")
    @ResponseWrapper(localName = "start_vm_with_snapshortResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.StartVmWithSnapshortResponse")
    public void startVmWithSnapshort(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_id", targetNamespace = "http://ca.com/")
        long scenarioId,
        @WebParam(name = "host_index", targetNamespace = "http://ca.com/")
        long hostIndex,
        @WebParam(name = "net_mapping_id", targetNamespace = "http://ca.com/")
        short netMappingId,
        @WebParam(name = "snapshot_id", targetNamespace = "http://ca.com/")
        String snapshotId,
        @WebParam(name = "start_vm_with_snapshortResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Short> startVmWithSnapshortResult,
        @WebParam(name = "why_not_reason", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> whyNotReason);

    /**
     * 
     * @param snapshotId
     * @param scenarioId
     * @param hostIndex
     * @param sessionId
     * @param whyNotReason
     * @param stopVmOnSnapshotResult
     */
    @WebMethod(operationName = "stop_vm_on_snapshot", action = "http://ca.com/stop_vm_on_snapshot")
    @RequestWrapper(localName = "stop_vm_on_snapshot", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.StopVmOnSnapshot")
    @ResponseWrapper(localName = "stop_vm_on_snapshotResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.StopVmOnSnapshotResponse")
    public void stopVmOnSnapshot(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_id", targetNamespace = "http://ca.com/")
        long scenarioId,
        @WebParam(name = "host_index", targetNamespace = "http://ca.com/")
        long hostIndex,
        @WebParam(name = "snapshot_id", targetNamespace = "http://ca.com/")
        String snapshotId,
        @WebParam(name = "stop_vm_on_snapshotResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Short> stopVmOnSnapshotResult,
        @WebParam(name = "why_not_reason", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> whyNotReason);

    /**
     * 
     * @param scenarioId
     * @param toRemoveScenario
     * @param hostIndexes
     * @param sessionId
     * @param cleanupVmResourceResult
     * @param whyNotReason
     */
    @WebMethod(operationName = "cleanup_vm_resource", action = "http://ca.com/cleanup_vm_resource")
    @RequestWrapper(localName = "cleanup_vm_resource", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CleanupVmResource")
    @ResponseWrapper(localName = "cleanup_vm_resourceResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CleanupVmResourceResponse")
    public void cleanupVmResource(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_id", targetNamespace = "http://ca.com/")
        long scenarioId,
        @WebParam(name = "host_indexes", targetNamespace = "http://ca.com/")
        String hostIndexes,
        @WebParam(name = "to_remove_scenario", targetNamespace = "http://ca.com/")
        boolean toRemoveScenario,
        @WebParam(name = "cleanup_vm_resourceResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> cleanupVmResourceResult,
        @WebParam(name = "why_not_reason", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> whyNotReason);

    /**
     * 
     * @param sessId
     * @param removeScenarioResult
     * @param scenId
     * @param arcUpd
     * @param whyNotReason
     */
    @WebMethod(operationName = "remove_scenario", action = "http://ca.com/remove_scenario")
    @RequestWrapper(localName = "remove_scenario", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.RemoveScenario")
    @ResponseWrapper(localName = "remove_scenarioResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.RemoveScenarioResponse")
    public void removeScenario(
        @WebParam(name = "sess_id", targetNamespace = "http://ca.com/")
        long sessId,
        @WebParam(name = "scen_id", targetNamespace = "http://ca.com/")
        long scenId,
        @WebParam(name = "arc_upd", targetNamespace = "http://ca.com/")
        boolean arcUpd,
        @WebParam(name = "remove_scenarioResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> removeScenarioResult,
        @WebParam(name = "why_not_reason", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> whyNotReason);

    /**
     * 
     * @param scenarioData
     * @param newReplicaIndex
     * @param papaIndex
     * @param sessionId
     * @param addReplicaResult
     */
    @WebMethod(operationName = "add_replica", action = "http://ca.com/add_replica")
    @RequestWrapper(localName = "add_replica", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.AddReplica")
    @ResponseWrapper(localName = "add_replicaResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.AddReplicaResponse")
    public void addReplica(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_data", targetNamespace = "http://ca.com/", mode = WebParam.Mode.INOUT)
        Holder<String> scenarioData,
        @WebParam(name = "papa_index", targetNamespace = "http://ca.com/")
        long papaIndex,
        @WebParam(name = "add_replicaResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> addReplicaResult,
        @WebParam(name = "new_replica_index", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Long> newReplicaIndex);

    /**
     * 
     * @param scenarioData
     * @param papaIndex
     * @param sessionId
     * @param addReplicaExResult
     * @param hostList
     */
    @WebMethod(operationName = "add_replica_ex", action = "http://ca.com/add_replica_ex")
    @RequestWrapper(localName = "add_replica_ex", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.AddReplicaEx")
    @ResponseWrapper(localName = "add_replica_exResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.AddReplicaExResponse")
    public void addReplicaEx(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_data", targetNamespace = "http://ca.com/", mode = WebParam.Mode.INOUT)
        Holder<String> scenarioData,
        @WebParam(name = "papa_index", targetNamespace = "http://ca.com/")
        long papaIndex,
        @WebParam(name = "host_list", targetNamespace = "http://ca.com/", mode = WebParam.Mode.INOUT)
        Holder<String> hostList,
        @WebParam(name = "add_replica_exResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> addReplicaExResult);

    /**
     * 
     * @param scenarioData
     * @param removeReplicaResult
     * @param sessionId
     * @param replicaIndex
     */
    @WebMethod(operationName = "remove_replica", action = "http://ca.com/remove_replica")
    @RequestWrapper(localName = "remove_replica", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.RemoveReplica")
    @ResponseWrapper(localName = "remove_replicaResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.RemoveReplicaResponse")
    public void removeReplica(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_data", targetNamespace = "http://ca.com/", mode = WebParam.Mode.INOUT)
        Holder<String> scenarioData,
        @WebParam(name = "replica_index", targetNamespace = "http://ca.com/")
        long replicaIndex,
        @WebParam(name = "remove_replicaResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> removeReplicaResult);

    /**
     * 
     * @param scenarioData
     * @param fileList
     * @param hostIndex
     * @param requestFlag
     * @param sessionId
     * @param getHostFileListResult
     * @param whyNotReason
     * @param rootDir
     */
    @WebMethod(operationName = "get_host_file_list", action = "http://ca.com/get_host_file_list")
    @RequestWrapper(localName = "get_host_file_list", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetHostFileList")
    @ResponseWrapper(localName = "get_host_file_listResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetHostFileListResponse")
    public void getHostFileList(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_data", targetNamespace = "http://ca.com/")
        String scenarioData,
        @WebParam(name = "host_index", targetNamespace = "http://ca.com/")
        long hostIndex,
        @WebParam(name = "request_flag", targetNamespace = "http://ca.com/")
        long requestFlag,
        @WebParam(name = "root_dir", targetNamespace = "http://ca.com/")
        String rootDir,
        @WebParam(name = "get_host_file_listResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> getHostFileListResult,
        @WebParam(name = "file_list", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> fileList,
        @WebParam(name = "why_not_reason", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> whyNotReason);

    /**
     * 
     * @param xmlResponse
     * @param scenarioData
     * @param hostIndex
     * @param sessionId
     * @param getHostRegistryKeyResult
     * @param xmlRequest
     * @param whyNotReason
     */
    @WebMethod(operationName = "get_host_registry_key", action = "http://ca.com/get_host_registry_key")
    @RequestWrapper(localName = "get_host_registry_key", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetHostRegistryKey")
    @ResponseWrapper(localName = "get_host_registry_keyResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetHostRegistryKeyResponse")
    public void getHostRegistryKey(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_data", targetNamespace = "http://ca.com/")
        String scenarioData,
        @WebParam(name = "host_index", targetNamespace = "http://ca.com/")
        long hostIndex,
        @WebParam(name = "xml_request", targetNamespace = "http://ca.com/")
        String xmlRequest,
        @WebParam(name = "get_host_registry_keyResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> getHostRegistryKeyResult,
        @WebParam(name = "xml_response", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> xmlResponse,
        @WebParam(name = "why_not_reason", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> whyNotReason);

    /**
     * 
     * @param scenarioDataNew
     * @param scenarioData
     * @param hostIndex
     * @param isX64Keys
     * @param regKeys
     * @param sessionId
     * @param addHostRegistryKeysResult
     */
    @WebMethod(operationName = "add_host_registry_keys", action = "http://ca.com/add_host_registry_keys")
    @RequestWrapper(localName = "add_host_registry_keys", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.AddHostRegistryKeys")
    @ResponseWrapper(localName = "add_host_registry_keysResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.AddHostRegistryKeysResponse")
    public void addHostRegistryKeys(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_data", targetNamespace = "http://ca.com/")
        String scenarioData,
        @WebParam(name = "host_index", targetNamespace = "http://ca.com/")
        long hostIndex,
        @WebParam(name = "is_x64_keys", targetNamespace = "http://ca.com/")
        boolean isX64Keys,
        @WebParam(name = "reg_keys", targetNamespace = "http://ca.com/")
        ArrayOfString regKeys,
        @WebParam(name = "add_host_registry_keysResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> addHostRegistryKeysResult,
        @WebParam(name = "scenario_data_new", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> scenarioDataNew);

    /**
     * 
     * @param bookmarkMsg
     * @param scenarioData
     * @param hostIndex
     * @param setRewindBookmarkResult
     * @param sessionId
     * @param whyNot
     */
    @WebMethod(operationName = "set_rewind_bookmark", action = "http://ca.com/set_rewind_bookmark")
    @RequestWrapper(localName = "set_rewind_bookmark", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.SetRewindBookmark")
    @ResponseWrapper(localName = "set_rewind_bookmarkResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.SetRewindBookmarkResponse")
    public void setRewindBookmark(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_data", targetNamespace = "http://ca.com/")
        String scenarioData,
        @WebParam(name = "host_index", targetNamespace = "http://ca.com/")
        long hostIndex,
        @WebParam(name = "bookmark_msg", targetNamespace = "http://ca.com/")
        String bookmarkMsg,
        @WebParam(name = "set_rewind_bookmarkResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> setRewindBookmarkResult,
        @WebParam(name = "why_not", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> whyNot);

    /**
     * 
     * @param scenarioData
     * @param dbAutodiscoveryResult
     * @param hostIndex
     * @param dbContents
     * @param dbName
     * @param sessionId
     * @param userName
     * @param dbType
     * @param password
     */
    @WebMethod(operationName = "db_autodiscovery", action = "http://ca.com/db_autodiscovery")
    @RequestWrapper(localName = "db_autodiscovery", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.DbAutodiscovery")
    @ResponseWrapper(localName = "db_autodiscoveryResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.DbAutodiscoveryResponse")
    public void dbAutodiscovery(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_data", targetNamespace = "http://ca.com/")
        String scenarioData,
        @WebParam(name = "host_index", targetNamespace = "http://ca.com/")
        long hostIndex,
        @WebParam(name = "db_name", targetNamespace = "http://ca.com/")
        String dbName,
        @WebParam(name = "user_name", targetNamespace = "http://ca.com/")
        String userName,
        @WebParam(name = "password", targetNamespace = "http://ca.com/")
        String password,
        @WebParam(name = "db_type", targetNamespace = "http://ca.com/")
        long dbType,
        @WebParam(name = "db_autodiscoveryResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> dbAutodiscoveryResult,
        @WebParam(name = "db_contents", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> dbContents);

    /**
     * 
     * @param scenarioData
     * @param hostIndex
     * @param sessionId
     * @param resMessage
     * @param dbType
     * @param isApplInstalledResult
     */
    @WebMethod(operationName = "is_appl_installed", action = "http://ca.com/is_appl_installed")
    @RequestWrapper(localName = "is_appl_installed", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.IsApplInstalled")
    @ResponseWrapper(localName = "is_appl_installedResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.IsApplInstalledResponse")
    public void isApplInstalled(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_data", targetNamespace = "http://ca.com/")
        String scenarioData,
        @WebParam(name = "host_index", targetNamespace = "http://ca.com/")
        long hostIndex,
        @WebParam(name = "db_type", targetNamespace = "http://ca.com/")
        long dbType,
        @WebParam(name = "is_appl_installedResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> isApplInstalledResult,
        @WebParam(name = "res_message", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> resMessage);

    /**
     * 
     * @param newDbDirIds
     * @param dbAutodiscovery
     * @param scenarioData
     * @param sessionId
     * @param createDbDirectoriesResult
     * @param dbType
     */
    @WebMethod(operationName = "create_db_directories", action = "http://ca.com/create_db_directories")
    @RequestWrapper(localName = "create_db_directories", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CreateDbDirectories")
    @ResponseWrapper(localName = "create_db_directoriesResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CreateDbDirectoriesResponse")
    public void createDbDirectories(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_data", targetNamespace = "http://ca.com/", mode = WebParam.Mode.INOUT)
        Holder<String> scenarioData,
        @WebParam(name = "db_type", targetNamespace = "http://ca.com/")
        long dbType,
        @WebParam(name = "db_autodiscovery", targetNamespace = "http://ca.com/")
        String dbAutodiscovery,
        @WebParam(name = "create_db_directoriesResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> createDbDirectoriesResult,
        @WebParam(name = "new_db_dir_ids", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<ArrayOfUnsignedInt> newDbDirIds);

    /**
     * 
     * @param replicaHostIndex
     * @param scenarioData
     * @param errMessages
     * @param sessionId
     * @param compareDbConfigsResult
     * @param asyncResId
     * @param executeSync
     */
    @WebMethod(operationName = "compare_db_configs", action = "http://ca.com/compare_db_configs")
    @RequestWrapper(localName = "compare_db_configs", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CompareDbConfigs")
    @ResponseWrapper(localName = "compare_db_configsResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CompareDbConfigsResponse")
    public void compareDbConfigs(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_data", targetNamespace = "http://ca.com/")
        String scenarioData,
        @WebParam(name = "replica_host_index", targetNamespace = "http://ca.com/")
        long replicaHostIndex,
        @WebParam(name = "execute_sync", targetNamespace = "http://ca.com/")
        boolean executeSync,
        @WebParam(name = "compare_db_configsResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> compareDbConfigsResult,
        @WebParam(name = "async_res_id", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<BigInteger> asyncResId,
        @WebParam(name = "err_messages", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> errMessages);

    /**
     * 
     * @param replicaHostIndex
     * @param scenarioData
     * @param relationsMap
     * @param errMessages
     * @param autoconfigReplicaDbResult
     * @param sessionId
     * @param asyncResId
     */
    @WebMethod(operationName = "autoconfig_replica_db", action = "http://ca.com/autoconfig_replica_db")
    @RequestWrapper(localName = "autoconfig_replica_db", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.AutoconfigReplicaDb")
    @ResponseWrapper(localName = "autoconfig_replica_dbResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.AutoconfigReplicaDbResponse")
    public void autoconfigReplicaDb(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_data", targetNamespace = "http://ca.com/")
        String scenarioData,
        @WebParam(name = "replica_host_index", targetNamespace = "http://ca.com/")
        long replicaHostIndex,
        @WebParam(name = "relations_map", targetNamespace = "http://ca.com/")
        String relationsMap,
        @WebParam(name = "autoconfig_replica_dbResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> autoconfigReplicaDbResult,
        @WebParam(name = "async_res_id", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<BigInteger> asyncResId,
        @WebParam(name = "err_messages", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> errMessages);

    /**
     * 
     * @param processType
     * @param replicaHostIndex
     * @param scenarioData
     * @param errMessages
     * @param processStatus
     * @param sessionId
     * @param queryGroupStatusResult
     */
    @WebMethod(operationName = "query_group_status", action = "http://ca.com/query_group_status")
    @RequestWrapper(localName = "query_group_status", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.QueryGroupStatus")
    @ResponseWrapper(localName = "query_group_statusResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.QueryGroupStatusResponse")
    public void queryGroupStatus(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_data", targetNamespace = "http://ca.com/")
        String scenarioData,
        @WebParam(name = "replica_host_index", targetNamespace = "http://ca.com/")
        long replicaHostIndex,
        @WebParam(name = "process_type", targetNamespace = "http://ca.com/")
        String processType,
        @WebParam(name = "query_group_statusResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> queryGroupStatusResult,
        @WebParam(name = "process_status", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> processStatus,
        @WebParam(name = "err_messages", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> errMessages);

    /**
     * 
     * @param queryProcessStatusResult
     * @param processType
     * @param replicaHostIndex
     * @param scenarioData
     * @param errMessages
     * @param processStatus
     * @param sessionId
     */
    @WebMethod(operationName = "query_process_status", action = "http://ca.com/query_process_status")
    @RequestWrapper(localName = "query_process_status", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.QueryProcessStatus")
    @ResponseWrapper(localName = "query_process_statusResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.QueryProcessStatusResponse")
    public void queryProcessStatus(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_data", targetNamespace = "http://ca.com/")
        String scenarioData,
        @WebParam(name = "replica_host_index", targetNamespace = "http://ca.com/")
        long replicaHostIndex,
        @WebParam(name = "process_type", targetNamespace = "http://ca.com/")
        String processType,
        @WebParam(name = "query_process_statusResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> queryProcessStatusResult,
        @WebParam(name = "process_status", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Integer> processStatus,
        @WebParam(name = "err_messages", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> errMessages);

    /**
     * 
     * @param scenarioId
     * @param sessionId
     * @param groupIdFrom
     * @param groupIdTo
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "move_scenario", action = "http://ca.com/move_scenario")
    @WebResult(name = "move_scenarioResult", targetNamespace = "http://ca.com/")
    @RequestWrapper(localName = "move_scenario", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.MoveScenario")
    @ResponseWrapper(localName = "move_scenarioResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.MoveScenarioResponse")
    public boolean moveScenario(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_id", targetNamespace = "http://ca.com/")
        long scenarioId,
        @WebParam(name = "group_id_from", targetNamespace = "http://ca.com/")
        long groupIdFrom,
        @WebParam(name = "group_id_to", targetNamespace = "http://ca.com/")
        long groupIdTo);

    /**
     * 
     * @param position
     * @param scenarioData
     * @param hostIndex
     * @param sessionId
     * @param infoType
     * @param p2VAutodiscoveryResult
     * @param userName
     * @param infoContents
     * @param password
     */
    @WebMethod(operationName = "p2v_autodiscovery", action = "http://ca.com/p2v_autodiscovery")
    @RequestWrapper(localName = "p2v_autodiscovery", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.P2VAutodiscovery")
    @ResponseWrapper(localName = "p2v_autodiscoveryResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.P2VAutodiscoveryResponse")
    public void p2VAutodiscovery(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_data", targetNamespace = "http://ca.com/")
        String scenarioData,
        @WebParam(name = "host_index", targetNamespace = "http://ca.com/")
        long hostIndex,
        @WebParam(name = "position", targetNamespace = "http://ca.com/")
        String position,
        @WebParam(name = "user_name", targetNamespace = "http://ca.com/")
        String userName,
        @WebParam(name = "password", targetNamespace = "http://ca.com/")
        String password,
        @WebParam(name = "info_type", targetNamespace = "http://ca.com/")
        long infoType,
        @WebParam(name = "p2v_autodiscoveryResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> p2VAutodiscoveryResult,
        @WebParam(name = "info_contents", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> infoContents);

    /**
     * 
     * @param scenarioData
     * @param addRootDirResult
     * @param rootDirPath
     * @param sessionId
     * @param newRootDirId
     */
    @WebMethod(operationName = "add_root_dir", action = "http://ca.com/add_root_dir")
    @RequestWrapper(localName = "add_root_dir", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.AddRootDir")
    @ResponseWrapper(localName = "add_root_dirResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.AddRootDirResponse")
    public void addRootDir(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_data", targetNamespace = "http://ca.com/", mode = WebParam.Mode.INOUT)
        Holder<String> scenarioData,
        @WebParam(name = "root_dir_path", targetNamespace = "http://ca.com/")
        String rootDirPath,
        @WebParam(name = "add_root_dirResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> addRootDirResult,
        @WebParam(name = "new_root_dir_id", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Long> newRootDirId);

    /**
     * 
     * @param scenarioData
     * @param rootDirPath
     * @param sessionId
     * @param newRootDirId
     * @param addRootDirExResult
     */
    @WebMethod(operationName = "add_root_dir_ex", action = "http://ca.com/add_root_dir_ex")
    @RequestWrapper(localName = "add_root_dir_ex", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.AddRootDirEx")
    @ResponseWrapper(localName = "add_root_dir_exResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.AddRootDirExResponse")
    public void addRootDirEx(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_data", targetNamespace = "http://ca.com/", mode = WebParam.Mode.INOUT)
        Holder<String> scenarioData,
        @WebParam(name = "root_dir_path", targetNamespace = "http://ca.com/")
        String rootDirPath,
        @WebParam(name = "add_root_dir_exResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> addRootDirExResult,
        @WebParam(name = "new_root_dir_id", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Long> newRootDirId);

    /**
     * 
     * @param scenarioData
     * @param sessionId
     * @param removeRootDirResult
     * @param rootDirId
     */
    @WebMethod(operationName = "remove_root_dir", action = "http://ca.com/remove_root_dir")
    @RequestWrapper(localName = "remove_root_dir", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.RemoveRootDir")
    @ResponseWrapper(localName = "remove_root_dirResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.RemoveRootDirResponse")
    public void removeRootDir(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_data", targetNamespace = "http://ca.com/", mode = WebParam.Mode.INOUT)
        Holder<String> scenarioData,
        @WebParam(name = "root_dir_id", targetNamespace = "http://ca.com/")
        long rootDirId,
        @WebParam(name = "remove_root_dirResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> removeRootDirResult);

    /**
     * 
     * @param rootDirPaths
     * @param scenarioData
     * @param addRootDirsResult
     * @param sessionId
     * @param newRootDirIds
     * @param isDbDirs
     */
    @WebMethod(operationName = "add_root_dirs", action = "http://ca.com/add_root_dirs")
    @RequestWrapper(localName = "add_root_dirs", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.AddRootDirs")
    @ResponseWrapper(localName = "add_root_dirsResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.AddRootDirsResponse")
    public void addRootDirs(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_data", targetNamespace = "http://ca.com/", mode = WebParam.Mode.INOUT)
        Holder<String> scenarioData,
        @WebParam(name = "is_db_dirs", targetNamespace = "http://ca.com/")
        boolean isDbDirs,
        @WebParam(name = "root_dir_paths", targetNamespace = "http://ca.com/")
        ArrayOfString rootDirPaths,
        @WebParam(name = "add_root_dirsResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> addRootDirsResult,
        @WebParam(name = "new_root_dir_ids", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<ArrayOfUnsignedInt> newRootDirIds);

    /**
     * 
     * @param scenarioData
     * @param sessionId
     * @param removeAllRootDirsResult
     * @param isDbDirs
     */
    @WebMethod(operationName = "remove_all_root_dirs", action = "http://ca.com/remove_all_root_dirs")
    @RequestWrapper(localName = "remove_all_root_dirs", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.RemoveAllRootDirs")
    @ResponseWrapper(localName = "remove_all_root_dirsResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.RemoveAllRootDirsResponse")
    public void removeAllRootDirs(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_data", targetNamespace = "http://ca.com/", mode = WebParam.Mode.INOUT)
        Holder<String> scenarioData,
        @WebParam(name = "is_db_dirs", targetNamespace = "http://ca.com/")
        boolean isDbDirs,
        @WebParam(name = "remove_all_root_dirsResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> removeAllRootDirsResult);

    /**
     * 
     * @param scenarioData
     * @param rootDirIds
     * @param sessionId
     * @param removeRootDirsResult
     */
    @WebMethod(operationName = "remove_root_dirs", action = "http://ca.com/remove_root_dirs")
    @RequestWrapper(localName = "remove_root_dirs", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.RemoveRootDirs")
    @ResponseWrapper(localName = "remove_root_dirsResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.RemoveRootDirsResponse")
    public void removeRootDirs(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_data", targetNamespace = "http://ca.com/", mode = WebParam.Mode.INOUT)
        Holder<String> scenarioData,
        @WebParam(name = "root_dir_ids", targetNamespace = "http://ca.com/")
        ArrayOfUnsignedInt rootDirIds,
        @WebParam(name = "remove_root_dirsResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> removeRootDirsResult);

    /**
     * 
     * @param updatePropResult
     * @param scenarioData
     * @param newValue
     * @param hostIndex
     * @param sessionId
     * @param propId
     * @param objLabel
     * @param checkPrompt
     * @param rootDirId
     * @param msg
     */
    @WebMethod(operationName = "update_prop", action = "http://ca.com/update_prop")
    @RequestWrapper(localName = "update_prop", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.UpdateProp")
    @ResponseWrapper(localName = "update_propResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.UpdatePropResponse")
    public void updateProp(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_data", targetNamespace = "http://ca.com/", mode = WebParam.Mode.INOUT)
        Holder<String> scenarioData,
        @WebParam(name = "host_index", targetNamespace = "http://ca.com/")
        long hostIndex,
        @WebParam(name = "root_dir_id", targetNamespace = "http://ca.com/")
        long rootDirId,
        @WebParam(name = "obj_label", targetNamespace = "http://ca.com/")
        String objLabel,
        @WebParam(name = "prop_id", targetNamespace = "http://ca.com/")
        String propId,
        @WebParam(name = "new_value", targetNamespace = "http://ca.com/")
        String newValue,
        @WebParam(name = "check_prompt", targetNamespace = "http://ca.com/")
        boolean checkPrompt,
        @WebParam(name = "update_propResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Long> updatePropResult,
        @WebParam(name = "msg", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> msg);

    /**
     * 
     * @param errMessages
     * @param validateSourceDirResult
     * @param sessionId
     * @param folderName
     * @param installDirInfo
     */
    @WebMethod(operationName = "validate_source_dir", action = "http://ca.com/validate_source_dir")
    @RequestWrapper(localName = "validate_source_dir", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.ValidateSourceDir")
    @ResponseWrapper(localName = "validate_source_dirResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.ValidateSourceDirResponse")
    public void validateSourceDir(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "folder_name", targetNamespace = "http://ca.com/")
        String folderName,
        @WebParam(name = "validate_source_dirResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> validateSourceDirResult,
        @WebParam(name = "install_dir_info", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> installDirInfo,
        @WebParam(name = "err_messages", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> errMessages);

    /**
     * 
     * @param sessionId
     * @param hosts
     * @return
     *     returns long
     */
    @WebMethod(operationName = "create_installer", action = "http://ca.com/create_installer")
    @WebResult(name = "create_installerResult", targetNamespace = "http://ca.com/")
    @RequestWrapper(localName = "create_installer", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CreateInstaller")
    @ResponseWrapper(localName = "create_installerResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CreateInstallerResponse")
    public long createInstaller(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "hosts", targetNamespace = "http://ca.com/")
        ArrayOfString hosts);

    /**
     * 
     * @param sessionId
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "remove_installer", action = "http://ca.com/remove_installer")
    @WebResult(name = "remove_installerResult", targetNamespace = "http://ca.com/")
    @RequestWrapper(localName = "remove_installer", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.RemoveInstaller")
    @ResponseWrapper(localName = "remove_installerResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.RemoveInstallerResponse")
    public boolean removeInstaller(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId);

    /**
     * 
     * @param sessionId
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "validate_installer_session", action = "http://ca.com/validate_installer_session")
    @WebResult(name = "validate_installer_sessionResult", targetNamespace = "http://ca.com/")
    @RequestWrapper(localName = "validate_installer_session", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.ValidateInstallerSession")
    @ResponseWrapper(localName = "validate_installer_sessionResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.ValidateInstallerSessionResponse")
    public boolean validateInstallerSession(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId);

    /**
     * 
     * @param sessionId
     * @param password
     * @param user
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "set_user_credentials", action = "http://ca.com/set_user_credentials")
    @WebResult(name = "set_user_credentialsResult", targetNamespace = "http://ca.com/")
    @RequestWrapper(localName = "set_user_credentials", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.SetUserCredentials")
    @ResponseWrapper(localName = "set_user_credentialsResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.SetUserCredentialsResponse")
    public boolean setUserCredentials(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "user", targetNamespace = "http://ca.com/")
        String user,
        @WebParam(name = "password", targetNamespace = "http://ca.com/")
        String password);

    /**
     * 
     * @param sessionId
     * @param hostName
     * @param password
     * @param user
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "set_host_credentials", action = "http://ca.com/set_host_credentials")
    @WebResult(name = "set_host_credentialsResult", targetNamespace = "http://ca.com/")
    @RequestWrapper(localName = "set_host_credentials", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.SetHostCredentials")
    @ResponseWrapper(localName = "set_host_credentialsResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.SetHostCredentialsResponse")
    public boolean setHostCredentials(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "host_name", targetNamespace = "http://ca.com/")
        String hostName,
        @WebParam(name = "user", targetNamespace = "http://ca.com/")
        String user,
        @WebParam(name = "password", targetNamespace = "http://ca.com/")
        String password);

    /**
     * 
     * @param installDir
     * @param sessionId
     * @param password
     * @param user
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "set_install_params", action = "http://ca.com/set_install_params")
    @WebResult(name = "set_install_paramsResult", targetNamespace = "http://ca.com/")
    @RequestWrapper(localName = "set_install_params", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.SetInstallParams")
    @ResponseWrapper(localName = "set_install_paramsResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.SetInstallParamsResponse")
    public boolean setInstallParams(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "install_dir", targetNamespace = "http://ca.com/")
        String installDir,
        @WebParam(name = "user", targetNamespace = "http://ca.com/")
        String user,
        @WebParam(name = "password", targetNamespace = "http://ca.com/")
        String password);

    /**
     * 
     * @param sessionId
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "start_verify", action = "http://ca.com/start_verify")
    @WebResult(name = "start_verifyResult", targetNamespace = "http://ca.com/")
    @RequestWrapper(localName = "start_verify", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.StartVerify")
    @ResponseWrapper(localName = "start_verifyResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.StartVerifyResponse")
    public boolean startVerify(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId);

    /**
     * 
     * @param sessionId
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "start_install", action = "http://ca.com/start_install")
    @WebResult(name = "start_installResult", targetNamespace = "http://ca.com/")
    @RequestWrapper(localName = "start_install", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.StartInstall")
    @ResponseWrapper(localName = "start_installResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.StartInstallResponse")
    public boolean startInstall(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId);

    /**
     * 
     * @param sessionId
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "start_uninstall", action = "http://ca.com/start_uninstall")
    @WebResult(name = "start_uninstallResult", targetNamespace = "http://ca.com/")
    @RequestWrapper(localName = "start_uninstall", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.StartUninstall")
    @ResponseWrapper(localName = "start_uninstallResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.StartUninstallResponse")
    public boolean startUninstall(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId);

    /**
     * 
     * @param sessionId
     * @param hostName
     * @param actionType
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "get_verify_status", action = "http://ca.com/get_verify_status")
    @WebResult(name = "get_verify_statusResult", targetNamespace = "http://ca.com/")
    @RequestWrapper(localName = "get_verify_status", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetVerifyStatus")
    @ResponseWrapper(localName = "get_verify_statusResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetVerifyStatusResponse")
    public String getVerifyStatus(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "host_name", targetNamespace = "http://ca.com/")
        String hostName,
        @WebParam(name = "action_type", targetNamespace = "http://ca.com/")
        String actionType);

    /**
     * 
     * @param sessionId
     * @return
     *     returns com.ca.arcserve.rha.service.ArrayOfString
     */
    @WebMethod(operationName = "get_detailed_status", action = "http://ca.com/get_detailed_status")
    @WebResult(name = "get_detailed_statusResult", targetNamespace = "http://ca.com/")
    @RequestWrapper(localName = "get_detailed_status", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetDetailedStatus")
    @ResponseWrapper(localName = "get_detailed_statusResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetDetailedStatusResponse")
    public ArrayOfString getDetailedStatus(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId);

    /**
     * 
     * @param sessionId
     * @param csSessionId
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "get_CS_user_credentials", action = "http://ca.com/get_CS_user_credentials")
    @WebResult(name = "get_CS_user_credentialsResult", targetNamespace = "http://ca.com/")
    @RequestWrapper(localName = "get_CS_user_credentials", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetCSUserCredentials")
    @ResponseWrapper(localName = "get_CS_user_credentialsResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetCSUserCredentialsResponse")
    public String getCSUserCredentials(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "CS_session_id", targetNamespace = "http://ca.com/")
        long csSessionId);

    /**
     * 
     * @param sessionId
     * @param csSessionId
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "get_CS_user_credentialsEx", action = "http://ca.com/get_CS_user_credentialsEx")
    @WebResult(name = "get_CS_user_credentialsExResult", targetNamespace = "http://ca.com/")
    @RequestWrapper(localName = "get_CS_user_credentialsEx", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetCSUserCredentialsEx")
    @ResponseWrapper(localName = "get_CS_user_credentialsExResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetCSUserCredentialsExResponse")
    public String getCSUserCredentialsEx(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "CS_session_id", targetNamespace = "http://ca.com/")
        long csSessionId);

    /**
     * 
     * @param sessionId
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "get_global_status", action = "http://ca.com/get_global_status")
    @WebResult(name = "get_global_statusResult", targetNamespace = "http://ca.com/")
    @RequestWrapper(localName = "get_global_status", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetGlobalStatus")
    @ResponseWrapper(localName = "get_global_statusResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetGlobalStatusResponse")
    public String getGlobalStatus(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId);

    /**
     * 
     * @param sessionId
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "get_service_user", action = "http://ca.com/get_service_user")
    @WebResult(name = "get_service_userResult", targetNamespace = "http://ca.com/")
    @RequestWrapper(localName = "get_service_user", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetServiceUser")
    @ResponseWrapper(localName = "get_service_userResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetServiceUserResponse")
    public String getServiceUser(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId);

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "get_CS_version", action = "http://ca.com/get_CS_version")
    @WebResult(name = "get_CS_versionResult", targetNamespace = "http://ca.com/")
    @RequestWrapper(localName = "get_CS_version", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetCSVersion")
    @ResponseWrapper(localName = "get_CS_versionResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetCSVersionResponse")
    public String getCSVersion();

    /**
     * 
     * @param sessionId
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "get_discovered_hosts", action = "http://ca.com/get_discovered_hosts")
    @WebResult(name = "get_discovered_hostsResult", targetNamespace = "http://ca.com/")
    @RequestWrapper(localName = "get_discovered_hosts", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetDiscoveredHosts")
    @ResponseWrapper(localName = "get_discovered_hostsResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetDiscoveredHostsResponse")
    public String getDiscoveredHosts(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId);

    /**
     * 
     * @param sessionId
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "start_search_hosts", action = "http://ca.com/start_search_hosts")
    @WebResult(name = "start_search_hostsResult", targetNamespace = "http://ca.com/")
    @RequestWrapper(localName = "start_search_hosts", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.StartSearchHosts")
    @ResponseWrapper(localName = "start_search_hostsResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.StartSearchHostsResponse")
    public boolean startSearchHosts(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId);

    /**
     * 
     * @param sessionId
     * @param hostArray
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "mark_hosts", action = "http://ca.com/mark_hosts")
    @WebResult(name = "mark_hostsResult", targetNamespace = "http://ca.com/")
    @RequestWrapper(localName = "mark_hosts", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.MarkHosts")
    @ResponseWrapper(localName = "mark_hostsResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.MarkHostsResponse")
    public boolean markHosts(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "host_array", targetNamespace = "http://ca.com/")
        ArrayOfString hostArray);

    /**
     * 
     * @param port
     * @param sessionId
     * @param hostName
     */
    @WebMethod(operationName = "set_host_engine_port", action = "http://ca.com/set_host_engine_port")
    @RequestWrapper(localName = "set_host_engine_port", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.SetHostEnginePort")
    @ResponseWrapper(localName = "set_host_engine_portResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.SetHostEnginePortResponse")
    public void setHostEnginePort(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "host_name", targetNamespace = "http://ca.com/")
        String hostName,
        @WebParam(name = "port", targetNamespace = "http://ca.com/")
        String port);

    /**
     * 
     * @param sessionId
     * @param addCdp
     */
    @WebMethod(operationName = "set_add_cdp", action = "http://ca.com/set_add_cdp")
    @RequestWrapper(localName = "set_add_cdp", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.SetAddCdp")
    @ResponseWrapper(localName = "set_add_cdpResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.SetAddCdpResponse")
    public void setAddCdp(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "add_cdp", targetNamespace = "http://ca.com/")
        boolean addCdp);

    /**
     * 
     * @param sessionId
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "can_upgrade", action = "http://ca.com/can_upgrade")
    @WebResult(name = "can_upgradeResult", targetNamespace = "http://ca.com/")
    @RequestWrapper(localName = "can_upgrade", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CanUpgrade")
    @ResponseWrapper(localName = "can_upgradeResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CanUpgradeResponse")
    public boolean canUpgrade(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId);

    /**
     * 
     * @param port4
     * @param port
     * @param sessionId
     * @param portProxy
     */
    @WebMethod(operationName = "set_engine_port", action = "http://ca.com/set_engine_port")
    @RequestWrapper(localName = "set_engine_port", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.SetEnginePort")
    @ResponseWrapper(localName = "set_engine_portResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.SetEnginePortResponse")
    public void setEnginePort(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "port", targetNamespace = "http://ca.com/")
        String port,
        @WebParam(name = "port4", targetNamespace = "http://ca.com/")
        String port4,
        @WebParam(name = "port_proxy", targetNamespace = "http://ca.com/")
        String portProxy);

    /**
     * 
     * @param createSessionResult
     * @param errorCode
     * @param userName
     * @param password
     */
    @WebMethod(operationName = "create_session", action = "http://ca.com/create_session")
    @RequestWrapper(localName = "create_session", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CreateSession")
    @ResponseWrapper(localName = "create_sessionResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CreateSessionResponse")
    public void createSession(
        @WebParam(name = "user_name", targetNamespace = "http://ca.com/")
        String userName,
        @WebParam(name = "password", targetNamespace = "http://ca.com/")
        String password,
        @WebParam(name = "create_sessionResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Long> createSessionResult,
        @WebParam(name = "error_code", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Long> errorCode);

    /**
     * 
     * @param cnx
     * @param errorCode
     * @param createSession1Result
     */
    @WebMethod(operationName = "create_session1", action = "http://ca.com/create_session1")
    @RequestWrapper(localName = "create_session1", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CreateSession1")
    @ResponseWrapper(localName = "create_session1Response", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CreateSession1Response")
    public void createSession1(
        @WebParam(name = "cnx", targetNamespace = "http://ca.com/")
        long cnx,
        @WebParam(name = "create_session1Result", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Long> createSession1Result,
        @WebParam(name = "error_code", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Long> errorCode);

    /**
     * 
     * @param token
     * @param errorCode
     * @param createSession2Result
     */
    @WebMethod(operationName = "create_session2", action = "http://ca.com/create_session2")
    @RequestWrapper(localName = "create_session2", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CreateSession2")
    @ResponseWrapper(localName = "create_session2Response", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CreateSession2Response")
    public void createSession2(
        @WebParam(name = "token", targetNamespace = "http://ca.com/")
        long token,
        @WebParam(name = "create_session2Result", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Long> createSession2Result,
        @WebParam(name = "error_code", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Long> errorCode);

    /**
     * 
     * @param sessionId
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "validate_session", action = "http://ca.com/validate_session")
    @WebResult(name = "validate_sessionResult", targetNamespace = "http://ca.com/")
    @RequestWrapper(localName = "validate_session", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.ValidateSession")
    @ResponseWrapper(localName = "validate_sessionResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.ValidateSessionResponse")
    public boolean validateSession(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId);

    /**
     * 
     * @param mstPort
     * @param mstHost
     * @param password
     * @param usrName
     * @return
     *     returns long
     */
    @WebMethod(operationName = "create_session_bab", action = "http://ca.com/create_session_bab")
    @WebResult(name = "create_session_babResult", targetNamespace = "http://ca.com/")
    @RequestWrapper(localName = "create_session_bab", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CreateSessionBab")
    @ResponseWrapper(localName = "create_session_babResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CreateSessionBabResponse")
    public long createSessionBab(
        @WebParam(name = "mst_host", targetNamespace = "http://ca.com/")
        String mstHost,
        @WebParam(name = "mst_port", targetNamespace = "http://ca.com/")
        int mstPort,
        @WebParam(name = "usr_name", targetNamespace = "http://ca.com/")
        String usrName,
        @WebParam(name = "password", targetNamespace = "http://ca.com/")
        String password);

    /**
     * 
     * @param scenarioData
     * @param hostIndex
     * @param sessionId
     * @param userName
     * @param domainName
     * @param password
     * @return
     *     returns java.math.BigInteger
     */
    @WebMethod(operationName = "add_credentials", action = "http://ca.com/add_credentials")
    @WebResult(name = "add_credentialsResult", targetNamespace = "http://ca.com/")
    @RequestWrapper(localName = "add_credentials", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.AddCredentials")
    @ResponseWrapper(localName = "add_credentialsResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.AddCredentialsResponse")
    public BigInteger addCredentials(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_data", targetNamespace = "http://ca.com/")
        String scenarioData,
        @WebParam(name = "host_index", targetNamespace = "http://ca.com/")
        long hostIndex,
        @WebParam(name = "user_name", targetNamespace = "http://ca.com/")
        String userName,
        @WebParam(name = "password", targetNamespace = "http://ca.com/")
        String password,
        @WebParam(name = "domain_name", targetNamespace = "http://ca.com/")
        String domainName);

    /**
     * 
     * @param port
     * @param scenarioId
     * @param sessionId
     * @param userName
     * @param hostName
     * @param domainName
     * @param password
     * @return
     *     returns java.math.BigInteger
     */
    @WebMethod(operationName = "add_credentials_ex", action = "http://ca.com/add_credentials_ex")
    @WebResult(name = "add_credentials_exResult", targetNamespace = "http://ca.com/")
    @RequestWrapper(localName = "add_credentials_ex", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.AddCredentialsEx")
    @ResponseWrapper(localName = "add_credentials_exResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.AddCredentialsExResponse")
    public BigInteger addCredentialsEx(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_id", targetNamespace = "http://ca.com/")
        long scenarioId,
        @WebParam(name = "host_name", targetNamespace = "http://ca.com/")
        String hostName,
        @WebParam(name = "port", targetNamespace = "http://ca.com/")
        long port,
        @WebParam(name = "user_name", targetNamespace = "http://ca.com/")
        String userName,
        @WebParam(name = "password", targetNamespace = "http://ca.com/")
        String password,
        @WebParam(name = "domain_name", targetNamespace = "http://ca.com/")
        String domainName);

    /**
     * 
     * @param scenarioData
     * @param hostIndex
     * @param sessionId
     * @return
     *     returns java.math.BigInteger
     */
    @WebMethod(operationName = "is_host_already_authenticated", action = "http://ca.com/is_host_already_authenticated")
    @WebResult(name = "is_host_already_authenticatedResult", targetNamespace = "http://ca.com/")
    @RequestWrapper(localName = "is_host_already_authenticated", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.IsHostAlreadyAuthenticated")
    @ResponseWrapper(localName = "is_host_already_authenticatedResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.IsHostAlreadyAuthenticatedResponse")
    public BigInteger isHostAlreadyAuthenticated(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_data", targetNamespace = "http://ca.com/")
        String scenarioData,
        @WebParam(name = "host_index", targetNamespace = "http://ca.com/")
        long hostIndex);

    /**
     * 
     * @param scenarioId
     * @param hostIndex
     * @param sessionId
     * @return
     *     returns java.math.BigInteger
     */
    @WebMethod(operationName = "is_host_authenticated_by_index", action = "http://ca.com/is_host_authenticated_by_index")
    @WebResult(name = "is_host_authenticated_by_indexResult", targetNamespace = "http://ca.com/")
    @RequestWrapper(localName = "is_host_authenticated_by_index", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.IsHostAuthenticatedByIndex")
    @ResponseWrapper(localName = "is_host_authenticated_by_indexResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.IsHostAuthenticatedByIndexResponse")
    public BigInteger isHostAuthenticatedByIndex(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_id", targetNamespace = "http://ca.com/")
        long scenarioId,
        @WebParam(name = "host_index", targetNamespace = "http://ca.com/")
        int hostIndex);

    /**
     * 
     * @param port
     * @param scenarioId
     * @param sessionId
     * @param hostName
     * @return
     *     returns java.math.BigInteger
     */
    @WebMethod(operationName = "is_host_already_authenticated_ex", action = "http://ca.com/is_host_already_authenticated_ex")
    @WebResult(name = "is_host_already_authenticated_exResult", targetNamespace = "http://ca.com/")
    @RequestWrapper(localName = "is_host_already_authenticated_ex", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.IsHostAlreadyAuthenticatedEx")
    @ResponseWrapper(localName = "is_host_already_authenticated_exResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.IsHostAlreadyAuthenticatedExResponse")
    public BigInteger isHostAlreadyAuthenticatedEx(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_id", targetNamespace = "http://ca.com/")
        long scenarioId,
        @WebParam(name = "host_name", targetNamespace = "http://ca.com/")
        String hostName,
        @WebParam(name = "port", targetNamespace = "http://ca.com/")
        long port);

    /**
     * 
     * @param sessionId
     * @param whyNotReason
     * @param closeSessionResult
     */
    @WebMethod(operationName = "close_session", action = "http://ca.com/close_session")
    @RequestWrapper(localName = "close_session", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CloseSession")
    @ResponseWrapper(localName = "close_sessionResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CloseSessionResponse")
    public void closeSession(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "close_sessionResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> closeSessionResult,
        @WebParam(name = "why_not_reason", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> whyNotReason);

    /**
     * 
     * @param requestFlag
     * @param sessionId
     * @param lastUpdateTime
     * @param getDataResult
     * @param managerData
     */
    @WebMethod(operationName = "get_data", action = "http://ca.com/get_data")
    @RequestWrapper(localName = "get_data", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetData")
    @ResponseWrapper(localName = "get_dataResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetDataResponse")
    public void getData(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "request_flag", targetNamespace = "http://ca.com/")
        long requestFlag,
        @WebParam(name = "last_update_time", targetNamespace = "http://ca.com/", mode = WebParam.Mode.INOUT)
        Holder<BigInteger> lastUpdateTime,
        @WebParam(name = "get_dataResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> getDataResult,
        @WebParam(name = "manager_data", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> managerData);

    /**
     * 
     * @param scenariosWithStatistics
     * @param getDataExResult
     * @param requestFlag
     * @param sessionId
     * @param lastUpdateTime
     * @param managerData
     */
    @WebMethod(operationName = "get_data_ex", action = "http://ca.com/get_data_ex")
    @RequestWrapper(localName = "get_data_ex", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetDataEx")
    @ResponseWrapper(localName = "get_data_exResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetDataExResponse")
    public void getDataEx(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenarios_with_statistics", targetNamespace = "http://ca.com/")
        ArrayOfUnsignedInt scenariosWithStatistics,
        @WebParam(name = "request_flag", targetNamespace = "http://ca.com/")
        long requestFlag,
        @WebParam(name = "last_update_time", targetNamespace = "http://ca.com/", mode = WebParam.Mode.INOUT)
        Holder<BigInteger> lastUpdateTime,
        @WebParam(name = "get_data_exResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> getDataExResult,
        @WebParam(name = "manager_data", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> managerData);

    /**
     * 
     * @param getAtScenariosDataResult
     * @param sessionId
     * @param scenId
     * @param optional
     * @param scensData
     * @param fromEvSeq
     */
    @WebMethod(operationName = "get_at_scenarios_data", action = "http://ca.com/get_at_scenarios_data")
    @RequestWrapper(localName = "get_at_scenarios_data", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetAtScenariosData")
    @ResponseWrapper(localName = "get_at_scenarios_dataResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetAtScenariosDataResponse")
    public void getAtScenariosData(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scen_id", targetNamespace = "http://ca.com/")
        long scenId,
        @WebParam(name = "from_ev_seq", targetNamespace = "http://ca.com/")
        BigInteger fromEvSeq,
        @WebParam(name = "optional", targetNamespace = "http://ca.com/")
        String optional,
        @WebParam(name = "get_at_scenarios_dataResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> getAtScenariosDataResult,
        @WebParam(name = "scens_data", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> scensData);

    /**
     * 
     * @param scenarioId
     * @param sessionId
     * @param isAssessmentMode
     * @param validationResult
     * @param validateScenarioResult
     */
    @WebMethod(operationName = "validate_scenario", action = "http://ca.com/validate_scenario")
    @RequestWrapper(localName = "validate_scenario", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.ValidateScenario")
    @ResponseWrapper(localName = "validate_scenarioResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.ValidateScenarioResponse")
    public void validateScenario(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_id", targetNamespace = "http://ca.com/")
        long scenarioId,
        @WebParam(name = "is_assessment_mode", targetNamespace = "http://ca.com/")
        boolean isAssessmentMode,
        @WebParam(name = "validate_scenarioResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> validateScenarioResult,
        @WebParam(name = "validation_result", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> validationResult);

    /**
     * 
     * @param message
     * @param scenarioId
     * @param runResult
     * @param sessionId
     * @param arcUpd
     * @param ignoreSameFiles
     * @param syncMethod
     * @param verificationAndRun
     */
    @WebMethod(action = "http://ca.com/run")
    @RequestWrapper(localName = "run", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.Run")
    @ResponseWrapper(localName = "runResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.RunResponse")
    public void run(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_id", targetNamespace = "http://ca.com/")
        long scenarioId,
        @WebParam(name = "sync_method", targetNamespace = "http://ca.com/")
        long syncMethod,
        @WebParam(name = "ignore_same_files", targetNamespace = "http://ca.com/")
        boolean ignoreSameFiles,
        @WebParam(name = "arc_upd", targetNamespace = "http://ca.com/")
        boolean arcUpd,
        @WebParam(name = "verification_and_run", targetNamespace = "http://ca.com/")
        int verificationAndRun,
        @WebParam(name = "runResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> runResult,
        @WebParam(name = "message", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> message);

    /**
     * 
     * @param scenarioId
     * @param stopResult
     * @param sessionId
     * @param whyNotReason
     * @param executeSync
     */
    @WebMethod(action = "http://ca.com/stop")
    @RequestWrapper(localName = "stop", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.Stop")
    @ResponseWrapper(localName = "stopResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.StopResponse")
    public void stop(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_id", targetNamespace = "http://ca.com/")
        long scenarioId,
        @WebParam(name = "execute_sync", targetNamespace = "http://ca.com/")
        boolean executeSync,
        @WebParam(name = "stopResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> stopResult,
        @WebParam(name = "why_not_reason", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> whyNotReason);

    /**
     * 
     * @param scenarioId
     * @param sessionId
     */
    @WebMethod(operationName = "set_cleared_event", action = "http://ca.com/set_cleared_event")
    @RequestWrapper(localName = "set_cleared_event", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.SetClearedEvent")
    @ResponseWrapper(localName = "set_cleared_eventResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.SetClearedEventResponse")
    public void setClearedEvent(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_id", targetNamespace = "http://ca.com/")
        long scenarioId);

    /**
     * 
     * @param scenarioId
     * @param errMessages
     * @param sessionId
     * @param synchronizeResult
     * @param ignoreSameFiles
     * @param syncMethod
     * @param executeSync
     */
    @WebMethod(action = "http://ca.com/synchronize")
    @RequestWrapper(localName = "synchronize", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.Synchronize")
    @ResponseWrapper(localName = "synchronizeResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.SynchronizeResponse")
    public void synchronize(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_id", targetNamespace = "http://ca.com/")
        long scenarioId,
        @WebParam(name = "sync_method", targetNamespace = "http://ca.com/")
        long syncMethod,
        @WebParam(name = "ignore_same_files", targetNamespace = "http://ca.com/")
        boolean ignoreSameFiles,
        @WebParam(name = "execute_sync", targetNamespace = "http://ca.com/")
        boolean executeSync,
        @WebParam(name = "synchronizeResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> synchronizeResult,
        @WebParam(name = "err_messages", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> errMessages);

    /**
     * 
     * @param scenarioId
     * @param errMessages
     * @param sessionId
     * @param ignoreSameFiles
     * @param differenceReportResult
     * @param syncMethod
     * @param executeSync
     */
    @WebMethod(operationName = "difference_report", action = "http://ca.com/difference_report")
    @RequestWrapper(localName = "difference_report", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.DifferenceReport")
    @ResponseWrapper(localName = "difference_reportResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.DifferenceReportResponse")
    public void differenceReport(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_id", targetNamespace = "http://ca.com/")
        long scenarioId,
        @WebParam(name = "sync_method", targetNamespace = "http://ca.com/")
        long syncMethod,
        @WebParam(name = "ignore_same_files", targetNamespace = "http://ca.com/")
        boolean ignoreSameFiles,
        @WebParam(name = "execute_sync", targetNamespace = "http://ca.com/")
        boolean executeSync,
        @WebParam(name = "difference_reportResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> differenceReportResult,
        @WebParam(name = "err_messages", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> errMessages);

    /**
     * 
     * @param scenarioId
     * @param errMessages
     * @param sessionId
     * @param runAssessmentModeResult
     * @param ignoreSameFiles
     * @param syncMethod
     * @param executeSync
     */
    @WebMethod(operationName = "run_assessment_mode", action = "http://ca.com/run_assessment_mode")
    @RequestWrapper(localName = "run_assessment_mode", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.RunAssessmentMode")
    @ResponseWrapper(localName = "run_assessment_modeResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.RunAssessmentModeResponse")
    public void runAssessmentMode(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_id", targetNamespace = "http://ca.com/")
        long scenarioId,
        @WebParam(name = "sync_method", targetNamespace = "http://ca.com/")
        long syncMethod,
        @WebParam(name = "ignore_same_files", targetNamespace = "http://ca.com/")
        boolean ignoreSameFiles,
        @WebParam(name = "execute_sync", targetNamespace = "http://ca.com/")
        boolean executeSync,
        @WebParam(name = "run_assessment_modeResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> runAssessmentModeResult,
        @WebParam(name = "err_messages", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> errMessages);

    /**
     * 
     * @param isSync
     * @param id
     * @param hostId
     * @return
     *     returns int
     */
    @WebMethod(operationName = "Get_Events", action = "http://ca.com/Get_Events")
    @WebResult(name = "Get_EventsResult", targetNamespace = "http://ca.com/")
    @RequestWrapper(localName = "Get_Events", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetEvents")
    @ResponseWrapper(localName = "Get_EventsResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetEventsResponse")
    public int getEvents(
        @WebParam(name = "ID", targetNamespace = "http://ca.com/")
        long id,
        @WebParam(name = "is_sync", targetNamespace = "http://ca.com/")
        boolean isSync,
        @WebParam(name = "host_id", targetNamespace = "http://ca.com/")
        Object hostId);

    /**
     * 
     * @param scenarioId
     * @param errMessages
     * @param sessionId
     * @param replicaIndex
     * @param suspendReplicationResult
     * @param executeSync
     */
    @WebMethod(operationName = "suspend_replication", action = "http://ca.com/suspend_replication")
    @RequestWrapper(localName = "suspend_replication", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.SuspendReplication")
    @ResponseWrapper(localName = "suspend_replicationResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.SuspendReplicationResponse")
    public void suspendReplication(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_id", targetNamespace = "http://ca.com/")
        long scenarioId,
        @WebParam(name = "replica_index", targetNamespace = "http://ca.com/")
        long replicaIndex,
        @WebParam(name = "execute_sync", targetNamespace = "http://ca.com/")
        boolean executeSync,
        @WebParam(name = "suspend_replicationResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> suspendReplicationResult,
        @WebParam(name = "err_messages", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> errMessages);

    /**
     * 
     * @param scenarioId
     * @param errMessages
     * @param resumeReplicationResult
     * @param sessionId
     * @param replicaIndex
     * @param executeSync
     */
    @WebMethod(operationName = "resume_replication", action = "http://ca.com/resume_replication")
    @RequestWrapper(localName = "resume_replication", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.ResumeReplication")
    @ResponseWrapper(localName = "resume_replicationResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.ResumeReplicationResponse")
    public void resumeReplication(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_id", targetNamespace = "http://ca.com/")
        long scenarioId,
        @WebParam(name = "replica_index", targetNamespace = "http://ca.com/")
        long replicaIndex,
        @WebParam(name = "execute_sync", targetNamespace = "http://ca.com/")
        boolean executeSync,
        @WebParam(name = "resume_replicationResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> resumeReplicationResult,
        @WebParam(name = "err_messages", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> errMessages);

    /**
     * 
     * @param scenarioId
     * @param errMessages
     * @param sessionId
     * @param continueOobSyncResult
     * @param ignoreSameFiles
     * @param syncMethod
     * @param executeSync
     */
    @WebMethod(operationName = "continue_oob_sync", action = "http://ca.com/continue_oob_sync")
    @RequestWrapper(localName = "continue_oob_sync", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.ContinueOobSync")
    @ResponseWrapper(localName = "continue_oob_syncResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.ContinueOobSyncResponse")
    public void continueOobSync(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_id", targetNamespace = "http://ca.com/")
        long scenarioId,
        @WebParam(name = "sync_method", targetNamespace = "http://ca.com/")
        long syncMethod,
        @WebParam(name = "ignore_same_files", targetNamespace = "http://ca.com/")
        boolean ignoreSameFiles,
        @WebParam(name = "execute_sync", targetNamespace = "http://ca.com/")
        boolean executeSync,
        @WebParam(name = "continue_oob_syncResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> continueOobSyncResult,
        @WebParam(name = "err_messages", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> errMessages);

    /**
     * 
     * @param errorMessage
     * @param resultData
     * @param actionData
     * @param executeActionResult
     * @param executeSync
     */
    @WebMethod(operationName = "execute_action", action = "http://ca.com/execute_action")
    @RequestWrapper(localName = "execute_action", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.ExecuteAction")
    @ResponseWrapper(localName = "execute_actionResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.ExecuteActionResponse")
    public void executeAction(
        @WebParam(name = "action_data", targetNamespace = "http://ca.com/")
        String actionData,
        @WebParam(name = "execute_sync", targetNamespace = "http://ca.com/")
        boolean executeSync,
        @WebParam(name = "execute_actionResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> executeActionResult,
        @WebParam(name = "result_data", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> resultData,
        @WebParam(name = "error_message", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> errorMessage);

    /**
     * 
     * @param scenarioId
     * @param errMessages
     * @param sessionId
     * @param replReportResult
     * @param executeSync
     */
    @WebMethod(operationName = "repl_report", action = "http://ca.com/repl_report")
    @RequestWrapper(localName = "repl_report", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.ReplReport")
    @ResponseWrapper(localName = "repl_reportResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.ReplReportResponse")
    public void replReport(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_id", targetNamespace = "http://ca.com/")
        long scenarioId,
        @WebParam(name = "execute_sync", targetNamespace = "http://ca.com/")
        boolean executeSync,
        @WebParam(name = "repl_reportResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> replReportResult,
        @WebParam(name = "err_messages", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> errMessages);

    /**
     * 
     * @param scenarioId
     * @param autoDbProc
     * @param errMessages
     * @param sessionId
     * @param replicaIndex
     * @param startArResult
     * @param executeSync
     */
    @WebMethod(operationName = "start_ar", action = "http://ca.com/start_ar")
    @RequestWrapper(localName = "start_ar", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.StartAr")
    @ResponseWrapper(localName = "start_arResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.StartArResponse")
    public void startAr(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_id", targetNamespace = "http://ca.com/")
        long scenarioId,
        @WebParam(name = "replica_index", targetNamespace = "http://ca.com/")
        long replicaIndex,
        @WebParam(name = "auto_db_proc", targetNamespace = "http://ca.com/")
        boolean autoDbProc,
        @WebParam(name = "execute_sync", targetNamespace = "http://ca.com/")
        boolean executeSync,
        @WebParam(name = "start_arResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> startArResult,
        @WebParam(name = "err_messages", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> errMessages);

    /**
     * 
     * @param isSync
     * @param id
     * @return
     *     returns int
     */
    @WebMethod(operationName = "Stop_AR", action = "http://ca.com/Stop_AR")
    @WebResult(name = "Stop_ARResult", targetNamespace = "http://ca.com/")
    @RequestWrapper(localName = "Stop_AR", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.StopAR")
    @ResponseWrapper(localName = "Stop_ARResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.StopARResponse")
    public int stopAR(
        @WebParam(name = "ID", targetNamespace = "http://ca.com/")
        long id,
        @WebParam(name = "is_sync", targetNamespace = "http://ca.com/")
        boolean isSync);

    /**
     * 
     * @param isSync
     * @param id
     * @param bookmarkName
     * @param bookmarkType
     * @return
     *     returns int
     */
    @WebMethod(operationName = "Set_Bookmark", action = "http://ca.com/Set_Bookmark")
    @WebResult(name = "Set_BookmarkResult", targetNamespace = "http://ca.com/")
    @RequestWrapper(localName = "Set_Bookmark", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.SetBookmark")
    @ResponseWrapper(localName = "Set_BookmarkResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.SetBookmarkResponse")
    public int setBookmark(
        @WebParam(name = "ID", targetNamespace = "http://ca.com/")
        long id,
        @WebParam(name = "is_sync", targetNamespace = "http://ca.com/")
        boolean isSync,
        @WebParam(name = "bookmark_type", targetNamespace = "http://ca.com/")
        String bookmarkType,
        @WebParam(name = "bookmark_name", targetNamespace = "http://ca.com/")
        String bookmarkName);

    /**
     * 
     * @param isSync
     * @param id
     * @param bookmarkType
     * @return
     *     returns int
     */
    @WebMethod(operationName = "Get_Bookmarks", action = "http://ca.com/Get_Bookmarks")
    @WebResult(name = "Get_BookmarksResult", targetNamespace = "http://ca.com/")
    @RequestWrapper(localName = "Get_Bookmarks", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetBookmarks")
    @ResponseWrapper(localName = "Get_BookmarksResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetBookmarksResponse")
    public int getBookmarks(
        @WebParam(name = "ID", targetNamespace = "http://ca.com/")
        long id,
        @WebParam(name = "is_sync", targetNamespace = "http://ca.com/")
        boolean isSync,
        @WebParam(name = "bookmark_type", targetNamespace = "http://ca.com/")
        String bookmarkType);

    /**
     * 
     * @param isSync
     * @param id
     * @param additionalFlag
     * @param recoveryType
     * @param hostId
     * @return
     *     returns int
     */
    @WebMethod(operationName = "Recovery", action = "http://ca.com/Recovery")
    @WebResult(name = "RecoveryResult", targetNamespace = "http://ca.com/")
    @RequestWrapper(localName = "Recovery", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.Recovery")
    @ResponseWrapper(localName = "RecoveryResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.RecoveryResponse")
    public int recovery(
        @WebParam(name = "ID", targetNamespace = "http://ca.com/")
        long id,
        @WebParam(name = "is_sync", targetNamespace = "http://ca.com/")
        boolean isSync,
        @WebParam(name = "host_id", targetNamespace = "http://ca.com/")
        Object hostId,
        @WebParam(name = "recovery_type", targetNamespace = "http://ca.com/")
        int recoveryType,
        @WebParam(name = "additional_flag", targetNamespace = "http://ca.com/")
        int additionalFlag);

    /**
     * 
     * @param isSync
     * @param id
     * @param messageText
     * @param hostId
     * @param messageSeverity
     * @return
     *     returns int
     */
    @WebMethod(operationName = "Send_Notification_Message", action = "http://ca.com/Send_Notification_Message")
    @WebResult(name = "Send_Notification_MessageResult", targetNamespace = "http://ca.com/")
    @RequestWrapper(localName = "Send_Notification_Message", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.SendNotificationMessage")
    @ResponseWrapper(localName = "Send_Notification_MessageResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.SendNotificationMessageResponse")
    public int sendNotificationMessage(
        @WebParam(name = "ID", targetNamespace = "http://ca.com/")
        long id,
        @WebParam(name = "is_sync", targetNamespace = "http://ca.com/")
        boolean isSync,
        @WebParam(name = "host_id", targetNamespace = "http://ca.com/")
        Object hostId,
        @WebParam(name = "message_text", targetNamespace = "http://ca.com/")
        String messageText,
        @WebParam(name = "message_severity", targetNamespace = "http://ca.com/")
        String messageSeverity);

    /**
     * 
     * @param scenarioId
     * @param hostIndex
     * @param appSnapshotType
     * @param errMessages
     * @param getSysSnapListResult
     * @param sessionId
     * @param snapshotInfoXml
     */
    @WebMethod(operationName = "get_sys_snap_list", action = "http://ca.com/get_sys_snap_list")
    @RequestWrapper(localName = "get_sys_snap_list", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetSysSnapList")
    @ResponseWrapper(localName = "get_sys_snap_listResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetSysSnapListResponse")
    public void getSysSnapList(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_id", targetNamespace = "http://ca.com/")
        long scenarioId,
        @WebParam(name = "host_index", targetNamespace = "http://ca.com/")
        long hostIndex,
        @WebParam(name = "app_snapshot_type", targetNamespace = "http://ca.com/")
        long appSnapshotType,
        @WebParam(name = "get_sys_snap_listResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> getSysSnapListResult,
        @WebParam(name = "snapshot_info_xml", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> snapshotInfoXml,
        @WebParam(name = "err_messages", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> errMessages);

    /**
     * 
     * @param scenarioId
     * @param snapshotFileName
     * @param hostIndex
     * @param errMessages
     * @param restoreSystemStateResult
     * @param sessionId
     * @param recoveryLocation
     * @param rebootAfterRecoverySystemstate
     * @param executeSync
     */
    @WebMethod(operationName = "restore_system_state", action = "http://ca.com/restore_system_state")
    @RequestWrapper(localName = "restore_system_state", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.RestoreSystemState")
    @ResponseWrapper(localName = "restore_system_stateResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.RestoreSystemStateResponse")
    public void restoreSystemState(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_id", targetNamespace = "http://ca.com/")
        long scenarioId,
        @WebParam(name = "host_index", targetNamespace = "http://ca.com/")
        long hostIndex,
        @WebParam(name = "snapshot_file_name", targetNamespace = "http://ca.com/")
        String snapshotFileName,
        @WebParam(name = "execute_sync", targetNamespace = "http://ca.com/")
        boolean executeSync,
        @WebParam(name = "reboot_after_recovery_systemstate", targetNamespace = "http://ca.com/")
        boolean rebootAfterRecoverySystemstate,
        @WebParam(name = "recovery_location", targetNamespace = "http://ca.com/")
        String recoveryLocation,
        @WebParam(name = "restore_system_stateResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> restoreSystemStateResult,
        @WebParam(name = "err_messages", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> errMessages);

    /**
     * 
     * @param scenarioData
     * @param applicationComments
     * @param hostIndex
     * @param applicationDefaultCfg
     * @param errMessages
     * @param sessionId
     * @param getApplicationDefaultCfgResult
     */
    @WebMethod(operationName = "get_application_default_cfg", action = "http://ca.com/get_application_default_cfg")
    @RequestWrapper(localName = "get_application_default_cfg", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetApplicationDefaultCfg")
    @ResponseWrapper(localName = "get_application_default_cfgResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetApplicationDefaultCfgResponse")
    public void getApplicationDefaultCfg(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_data", targetNamespace = "http://ca.com/")
        String scenarioData,
        @WebParam(name = "host_index", targetNamespace = "http://ca.com/")
        long hostIndex,
        @WebParam(name = "application_comments", targetNamespace = "http://ca.com/")
        String applicationComments,
        @WebParam(name = "get_application_default_cfgResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> getApplicationDefaultCfgResult,
        @WebParam(name = "application_default_cfg", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> applicationDefaultCfg,
        @WebParam(name = "err_messages", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> errMessages);

    /**
     * 
     * @param scenarioData
     * @param hostIndex
     * @param errMessages
     * @param basicMachineInfo
     * @param sessionId
     * @param getBasicMachineInfoResult
     */
    @WebMethod(operationName = "get_basic_machine_info", action = "http://ca.com/get_basic_machine_info")
    @RequestWrapper(localName = "get_basic_machine_info", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetBasicMachineInfo")
    @ResponseWrapper(localName = "get_basic_machine_infoResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetBasicMachineInfoResponse")
    public void getBasicMachineInfo(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_data", targetNamespace = "http://ca.com/")
        String scenarioData,
        @WebParam(name = "host_index", targetNamespace = "http://ca.com/")
        long hostIndex,
        @WebParam(name = "get_basic_machine_infoResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> getBasicMachineInfoResult,
        @WebParam(name = "basic_machine_info", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> basicMachineInfo,
        @WebParam(name = "err_messages", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> errMessages);

    /**
     * 
     * @param basicHostInfo
     * @param getHostInfoResult
     * @param snapshotId
     * @param scenarioData
     * @param hostIndex
     * @param errMessages
     * @param sessionId
     * @param objectType
     */
    @WebMethod(operationName = "get_host_info", action = "http://ca.com/get_host_info")
    @RequestWrapper(localName = "get_host_info", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetHostInfo")
    @ResponseWrapper(localName = "get_host_infoResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetHostInfoResponse")
    public void getHostInfo(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_data", targetNamespace = "http://ca.com/")
        String scenarioData,
        @WebParam(name = "host_index", targetNamespace = "http://ca.com/")
        long hostIndex,
        @WebParam(name = "object_type", targetNamespace = "http://ca.com/")
        long objectType,
        @WebParam(name = "snapshot_id", targetNamespace = "http://ca.com/")
        String snapshotId,
        @WebParam(name = "get_host_infoResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> getHostInfoResult,
        @WebParam(name = "basic_host_info", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> basicHostInfo,
        @WebParam(name = "err_messages", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> errMessages);

    /**
     * 
     * @param scenarioData
     * @param hostIndex
     * @param errMessages
     * @param sessionId
     * @param vmInfo
     * @param getVmInfoResult
     */
    @WebMethod(operationName = "get_vm_info", action = "http://ca.com/get_vm_info")
    @RequestWrapper(localName = "get_vm_info", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetVmInfo")
    @ResponseWrapper(localName = "get_vm_infoResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetVmInfoResponse")
    public void getVmInfo(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_data", targetNamespace = "http://ca.com/")
        String scenarioData,
        @WebParam(name = "host_index", targetNamespace = "http://ca.com/")
        long hostIndex,
        @WebParam(name = "get_vm_infoResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> getVmInfoResult,
        @WebParam(name = "vm_info", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> vmInfo,
        @WebParam(name = "err_messages", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> errMessages);

    /**
     * 
     * @param errMessages
     * @param sessionId
     * @param hostName
     * @param connectToMiniEngineResult
     * @param hostPort
     * @param ipString
     */
    @WebMethod(operationName = "connect_to_mini_engine", action = "http://ca.com/connect_to_mini_engine")
    @RequestWrapper(localName = "connect_to_mini_engine", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.ConnectToMiniEngine")
    @ResponseWrapper(localName = "connect_to_mini_engineResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.ConnectToMiniEngineResponse")
    public void connectToMiniEngine(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "host_name", targetNamespace = "http://ca.com/")
        String hostName,
        @WebParam(name = "ip_string", targetNamespace = "http://ca.com/")
        String ipString,
        @WebParam(name = "host_port", targetNamespace = "http://ca.com/")
        int hostPort,
        @WebParam(name = "connect_to_mini_engineResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> connectToMiniEngineResult,
        @WebParam(name = "err_messages", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> errMessages);

    /**
     * 
     * @param scenarioData
     * @param hostIndex
     * @param errMessages
     * @param sessionId
     * @param setDNSIPResult
     */
    @WebMethod(operationName = "set_DNS_IP", action = "http://ca.com/set_DNS_IP")
    @RequestWrapper(localName = "set_DNS_IP", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.SetDNSIP")
    @ResponseWrapper(localName = "set_DNS_IPResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.SetDNSIPResponse")
    public void setDNSIP(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_data", targetNamespace = "http://ca.com/")
        String scenarioData,
        @WebParam(name = "host_index", targetNamespace = "http://ca.com/")
        long hostIndex,
        @WebParam(name = "set_DNS_IPResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> setDNSIPResult,
        @WebParam(name = "err_messages", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> errMessages);

    /**
     * 
     * @param scenarioData
     * @param hostIndex
     * @param serviceList
     * @param errMessages
     * @param sessionId
     * @param getServiceListResult
     */
    @WebMethod(operationName = "get_service_list", action = "http://ca.com/get_service_list")
    @RequestWrapper(localName = "get_service_list", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetServiceList")
    @ResponseWrapper(localName = "get_service_listResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetServiceListResponse")
    public void getServiceList(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_data", targetNamespace = "http://ca.com/")
        String scenarioData,
        @WebParam(name = "host_index", targetNamespace = "http://ca.com/")
        long hostIndex,
        @WebParam(name = "get_service_listResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> getServiceListResult,
        @WebParam(name = "service_list", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> serviceList,
        @WebParam(name = "err_messages", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> errMessages);

    /**
     * 
     * @param scenarioData
     * @param applicationComments
     * @param hostIndex
     * @param applicationDefaultCfg
     * @param errMessages
     * @param sessionId
     * @param setApplicationDefaultCfgResult
     */
    @WebMethod(operationName = "set_application_default_cfg", action = "http://ca.com/set_application_default_cfg")
    @RequestWrapper(localName = "set_application_default_cfg", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.SetApplicationDefaultCfg")
    @ResponseWrapper(localName = "set_application_default_cfgResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.SetApplicationDefaultCfgResponse")
    public void setApplicationDefaultCfg(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_data", targetNamespace = "http://ca.com/")
        String scenarioData,
        @WebParam(name = "host_index", targetNamespace = "http://ca.com/")
        long hostIndex,
        @WebParam(name = "application_default_cfg", targetNamespace = "http://ca.com/")
        String applicationDefaultCfg,
        @WebParam(name = "set_application_default_cfgResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> setApplicationDefaultCfgResult,
        @WebParam(name = "application_comments", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> applicationComments,
        @WebParam(name = "err_messages", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> errMessages);

    /**
     * 
     * @param p2VClearRecoveryEnvResult
     * @param scenarioData
     * @param hostIndex
     * @param errMessages
     * @param sessionId
     */
    @WebMethod(operationName = "p2v_clear_recovery_env", action = "http://ca.com/p2v_clear_recovery_env")
    @RequestWrapper(localName = "p2v_clear_recovery_env", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.P2VClearRecoveryEnv")
    @ResponseWrapper(localName = "p2v_clear_recovery_envResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.P2VClearRecoveryEnvResponse")
    public void p2VClearRecoveryEnv(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_data", targetNamespace = "http://ca.com/")
        String scenarioData,
        @WebParam(name = "host_index", targetNamespace = "http://ca.com/")
        long hostIndex,
        @WebParam(name = "p2v_clear_recovery_envResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> p2VClearRecoveryEnvResult,
        @WebParam(name = "err_messages", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> errMessages);

    /**
     * 
     * @param getOracleInstanceListResult
     * @param scenarioData
     * @param hostIndex
     * @param errMessages
     * @param sessionId
     * @param oraInstList
     */
    @WebMethod(operationName = "get_oracle_instance_list", action = "http://ca.com/get_oracle_instance_list")
    @RequestWrapper(localName = "get_oracle_instance_list", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetOracleInstanceList")
    @ResponseWrapper(localName = "get_oracle_instance_listResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetOracleInstanceListResponse")
    public void getOracleInstanceList(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_data", targetNamespace = "http://ca.com/")
        String scenarioData,
        @WebParam(name = "host_index", targetNamespace = "http://ca.com/")
        long hostIndex,
        @WebParam(name = "get_oracle_instance_listResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> getOracleInstanceListResult,
        @WebParam(name = "ora_inst_list", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> oraInstList,
        @WebParam(name = "err_messages", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> errMessages);

    /**
     * 
     * @param oraDbAutodiscoveryResult
     * @param scenarioData
     * @param hostIndex
     * @param dbContents
     * @param sessionId
     * @param oraInst
     */
    @WebMethod(operationName = "ora_db_autodiscovery", action = "http://ca.com/ora_db_autodiscovery")
    @RequestWrapper(localName = "ora_db_autodiscovery", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.OraDbAutodiscovery")
    @ResponseWrapper(localName = "ora_db_autodiscoveryResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.OraDbAutodiscoveryResponse")
    public void oraDbAutodiscovery(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_data", targetNamespace = "http://ca.com/")
        String scenarioData,
        @WebParam(name = "host_index", targetNamespace = "http://ca.com/")
        long hostIndex,
        @WebParam(name = "ora_inst", targetNamespace = "http://ca.com/")
        String oraInst,
        @WebParam(name = "ora_db_autodiscoveryResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> oraDbAutodiscoveryResult,
        @WebParam(name = "db_contents", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> dbContents);

    /**
     * 
     * @param scenarioId
     * @param errMessages
     * @param sessionId
     * @param runReverseScenario
     * @param switchoverResult
     * @param executeSync
     */
    @WebMethod(action = "http://ca.com/switchover")
    @RequestWrapper(localName = "switchover", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.Switchover")
    @ResponseWrapper(localName = "switchoverResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.SwitchoverResponse")
    public void switchover(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_id", targetNamespace = "http://ca.com/")
        long scenarioId,
        @WebParam(name = "execute_sync", targetNamespace = "http://ca.com/")
        boolean executeSync,
        @WebParam(name = "run_reverse_scenario", targetNamespace = "http://ca.com/")
        boolean runReverseScenario,
        @WebParam(name = "switchoverResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> switchoverResult,
        @WebParam(name = "err_messages", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> errMessages);

    /**
     * 
     * @param scenarioId
     * @param errMessages
     * @param sessionId
     * @param startIsAliveResult
     * @param executeSync
     */
    @WebMethod(operationName = "start_is_alive", action = "http://ca.com/start_is_alive")
    @RequestWrapper(localName = "start_is_alive", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.StartIsAlive")
    @ResponseWrapper(localName = "start_is_aliveResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.StartIsAliveResponse")
    public void startIsAlive(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_id", targetNamespace = "http://ca.com/")
        long scenarioId,
        @WebParam(name = "execute_sync", targetNamespace = "http://ca.com/")
        boolean executeSync,
        @WebParam(name = "start_is_aliveResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> startIsAliveResult,
        @WebParam(name = "err_messages", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> errMessages);

    /**
     * 
     * @param scenarioId
     * @param stopIsAliveResult
     * @param errMessages
     * @param sessionId
     * @param executeSync
     */
    @WebMethod(operationName = "stop_is_alive", action = "http://ca.com/stop_is_alive")
    @RequestWrapper(localName = "stop_is_alive", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.StopIsAlive")
    @ResponseWrapper(localName = "stop_is_aliveResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.StopIsAliveResponse")
    public void stopIsAlive(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_id", targetNamespace = "http://ca.com/")
        long scenarioId,
        @WebParam(name = "execute_sync", targetNamespace = "http://ca.com/")
        boolean executeSync,
        @WebParam(name = "stop_is_aliveResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> stopIsAliveResult,
        @WebParam(name = "err_messages", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> errMessages);

    /**
     * 
     * @param scenarioData
     * @param hostIndex
     * @param errMessages
     * @param sessionId
     * @param checkPurpose
     * @param getHostHaInfoResult
     * @param hostHaInfoXml
     */
    @WebMethod(operationName = "get_host_ha_info", action = "http://ca.com/get_host_ha_info")
    @RequestWrapper(localName = "get_host_ha_info", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetHostHaInfo")
    @ResponseWrapper(localName = "get_host_ha_infoResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetHostHaInfoResponse")
    public void getHostHaInfo(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_data", targetNamespace = "http://ca.com/")
        String scenarioData,
        @WebParam(name = "host_index", targetNamespace = "http://ca.com/")
        long hostIndex,
        @WebParam(name = "check_purpose", targetNamespace = "http://ca.com/")
        long checkPurpose,
        @WebParam(name = "get_host_ha_infoResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> getHostHaInfoResult,
        @WebParam(name = "host_ha_info_xml", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> hostHaInfoXml,
        @WebParam(name = "err_messages", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> errMessages);

    /**
     * 
     * @param replicaHostIndex
     * @param groupId
     * @param errMessages
     * @param sessionId
     * @param asyncResId
     * @param checkPurpose
     * @param verifyGroupStateResult
     * @param sceToDiscoverArray
     * @param executeSync
     */
    @WebMethod(operationName = "verify_group_state", action = "http://ca.com/verify_group_state")
    @RequestWrapper(localName = "verify_group_state", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.VerifyGroupState")
    @ResponseWrapper(localName = "verify_group_stateResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.VerifyGroupStateResponse")
    public void verifyGroupState(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "group_id", targetNamespace = "http://ca.com/")
        long groupId,
        @WebParam(name = "replica_host_index", targetNamespace = "http://ca.com/")
        long replicaHostIndex,
        @WebParam(name = "check_purpose", targetNamespace = "http://ca.com/")
        long checkPurpose,
        @WebParam(name = "execute_sync", targetNamespace = "http://ca.com/")
        boolean executeSync,
        @WebParam(name = "sce_to_discover_array", targetNamespace = "http://ca.com/")
        String sceToDiscoverArray,
        @WebParam(name = "verify_group_stateResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> verifyGroupStateResult,
        @WebParam(name = "async_res_id", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<BigInteger> asyncResId,
        @WebParam(name = "err_messages", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> errMessages);

    /**
     * 
     * @param replicaHostIndex
     * @param scenarioId
     * @param errMessages
     * @param sessionId
     * @param asyncResId
     * @param checkPurpose
     * @param verifyScenarioStateResult
     * @param executeSync
     */
    @WebMethod(operationName = "verify_scenario_state", action = "http://ca.com/verify_scenario_state")
    @RequestWrapper(localName = "verify_scenario_state", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.VerifyScenarioState")
    @ResponseWrapper(localName = "verify_scenario_stateResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.VerifyScenarioStateResponse")
    public void verifyScenarioState(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_id", targetNamespace = "http://ca.com/")
        long scenarioId,
        @WebParam(name = "replica_host_index", targetNamespace = "http://ca.com/")
        long replicaHostIndex,
        @WebParam(name = "check_purpose", targetNamespace = "http://ca.com/")
        long checkPurpose,
        @WebParam(name = "execute_sync", targetNamespace = "http://ca.com/")
        boolean executeSync,
        @WebParam(name = "verify_scenario_stateResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> verifyScenarioStateResult,
        @WebParam(name = "async_res_id", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<BigInteger> asyncResId,
        @WebParam(name = "err_messages", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> errMessages);

    /**
     * 
     * @param scenarioDataSet
     * @param groupId
     * @param errMessages
     * @param sessionId
     * @param fillGroupSwitchoverDefaultsResult
     * @param asyncResId
     * @param executeSync
     */
    @WebMethod(operationName = "fill_group_switchover_defaults", action = "http://ca.com/fill_group_switchover_defaults")
    @RequestWrapper(localName = "fill_group_switchover_defaults", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.FillGroupSwitchoverDefaults")
    @ResponseWrapper(localName = "fill_group_switchover_defaultsResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.FillGroupSwitchoverDefaultsResponse")
    public void fillGroupSwitchoverDefaults(
        @WebParam(name = "group_id", targetNamespace = "http://ca.com/")
        long groupId,
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_data_set", targetNamespace = "http://ca.com/")
        String scenarioDataSet,
        @WebParam(name = "execute_sync", targetNamespace = "http://ca.com/")
        boolean executeSync,
        @WebParam(name = "fill_group_switchover_defaultsResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> fillGroupSwitchoverDefaultsResult,
        @WebParam(name = "async_res_id", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<BigInteger> asyncResId,
        @WebParam(name = "err_messages", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> errMessages);

    /**
     * 
     * @param scenarioData
     * @param fillSwitchoverDefaultsResult
     * @param errMessages
     * @param sessionId
     * @param asyncResId
     * @param executeSync
     */
    @WebMethod(operationName = "fill_switchover_defaults", action = "http://ca.com/fill_switchover_defaults")
    @RequestWrapper(localName = "fill_switchover_defaults", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.FillSwitchoverDefaults")
    @ResponseWrapper(localName = "fill_switchover_defaultsResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.FillSwitchoverDefaultsResponse")
    public void fillSwitchoverDefaults(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_data", targetNamespace = "http://ca.com/")
        String scenarioData,
        @WebParam(name = "execute_sync", targetNamespace = "http://ca.com/")
        boolean executeSync,
        @WebParam(name = "fill_switchover_defaultsResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> fillSwitchoverDefaultsResult,
        @WebParam(name = "async_res_id", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<BigInteger> asyncResId,
        @WebParam(name = "err_messages", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> errMessages);

    /**
     * 
     * @param scenarioId
     * @param recoveryType
     * @param errMessages
     * @param sessionId
     * @param recoverActiveServerResult
     * @param executeSync
     */
    @WebMethod(operationName = "recover_active_server", action = "http://ca.com/recover_active_server")
    @RequestWrapper(localName = "recover_active_server", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.RecoverActiveServer")
    @ResponseWrapper(localName = "recover_active_serverResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.RecoverActiveServerResponse")
    public void recoverActiveServer(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_id", targetNamespace = "http://ca.com/")
        long scenarioId,
        @WebParam(name = "recovery_type", targetNamespace = "http://ca.com/")
        long recoveryType,
        @WebParam(name = "execute_sync", targetNamespace = "http://ca.com/")
        boolean executeSync,
        @WebParam(name = "recover_active_serverResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> recoverActiveServerResult,
        @WebParam(name = "err_messages", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> errMessages);

    /**
     * 
     * @param isSync
     * @param id
     * @param sessionId
     * @return
     *     returns int
     */
    @WebMethod(operationName = "get_state", action = "http://ca.com/get_state")
    @WebResult(name = "get_stateResult", targetNamespace = "http://ca.com/")
    @RequestWrapper(localName = "get_state", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetState")
    @ResponseWrapper(localName = "get_stateResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetStateResponse")
    public int getState(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "ID", targetNamespace = "http://ca.com/")
        long id,
        @WebParam(name = "is_sync", targetNamespace = "http://ca.com/")
        boolean isSync);

    /**
     * 
     * @param getHostEngineInfoResult
     * @param engineVer
     * @param sessionId
     * @param hostOS64Bit
     * @param hostName
     * @param hosOSType
     * @param hostPort
     * @param ipString
     */
    @WebMethod(operationName = "get_host_engine_info", action = "http://ca.com/get_host_engine_info")
    @RequestWrapper(localName = "get_host_engine_info", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetHostEngineInfo")
    @ResponseWrapper(localName = "get_host_engine_infoResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetHostEngineInfoResponse")
    public void getHostEngineInfo(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "host_name", targetNamespace = "http://ca.com/")
        String hostName,
        @WebParam(name = "ip_string", targetNamespace = "http://ca.com/")
        String ipString,
        @WebParam(name = "host_port", targetNamespace = "http://ca.com/")
        int hostPort,
        @WebParam(name = "get_host_engine_infoResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> getHostEngineInfoResult,
        @WebParam(name = "host_OS_64bit", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> hostOS64Bit,
        @WebParam(name = "engine_ver", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> engineVer,
        @WebParam(name = "hos_OS_type", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Long> hosOSType);

    /**
     * 
     * @param winpeVer
     * @param systemStartTime
     * @param engineVer
     * @param sessionId
     * @param isWinpe
     * @param systemRestTime
     * @param hostOS64Bit
     * @param hostName
     * @param hosOSType
     * @param getHostEngineInfoWinpeResult
     * @param hostPort
     * @param ipString
     */
    @WebMethod(operationName = "get_host_engine_info_winpe", action = "http://ca.com/get_host_engine_info_winpe")
    @RequestWrapper(localName = "get_host_engine_info_winpe", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetHostEngineInfoWinpe")
    @ResponseWrapper(localName = "get_host_engine_info_winpeResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetHostEngineInfoWinpeResponse")
    public void getHostEngineInfoWinpe(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "host_name", targetNamespace = "http://ca.com/")
        String hostName,
        @WebParam(name = "ip_string", targetNamespace = "http://ca.com/")
        String ipString,
        @WebParam(name = "host_port", targetNamespace = "http://ca.com/")
        int hostPort,
        @WebParam(name = "get_host_engine_info_winpeResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> getHostEngineInfoWinpeResult,
        @WebParam(name = "host_OS_64bit", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> hostOS64Bit,
        @WebParam(name = "engine_ver", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> engineVer,
        @WebParam(name = "hos_OS_type", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Long> hosOSType,
        @WebParam(name = "is_winpe", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> isWinpe,
        @WebParam(name = "winpe_ver", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> winpeVer,
        @WebParam(name = "system_start_time", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Long> systemStartTime,
        @WebParam(name = "system_rest_time", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Long> systemRestTime);

    /**
     * 
     * @param snapshotId
     * @param scenarioId
     * @param hostIndex
     * @param errMessages
     * @param sessionId
     * @param getDiskLayoutMappingResult
     * @param mappingResult
     */
    @WebMethod(operationName = "get_disk_layout_mapping", action = "http://ca.com/get_disk_layout_mapping")
    @RequestWrapper(localName = "get_disk_layout_mapping", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetDiskLayoutMapping")
    @ResponseWrapper(localName = "get_disk_layout_mappingResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetDiskLayoutMappingResponse")
    public void getDiskLayoutMapping(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_id", targetNamespace = "http://ca.com/")
        long scenarioId,
        @WebParam(name = "host_index", targetNamespace = "http://ca.com/")
        long hostIndex,
        @WebParam(name = "snapshot_id", targetNamespace = "http://ca.com/")
        String snapshotId,
        @WebParam(name = "get_disk_layout_mappingResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> getDiskLayoutMappingResult,
        @WebParam(name = "mapping_result", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> mappingResult,
        @WebParam(name = "err_messages", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> errMessages);

    /**
     * 
     * @param scenarioId
     * @param setHostDiskLayoutResult
     * @param hostIndex
     * @param errMessages
     * @param asyncId
     * @param setResult
     * @param sessionId
     * @param diskLayout
     */
    @WebMethod(operationName = "set_host_disk_layout", action = "http://ca.com/set_host_disk_layout")
    @RequestWrapper(localName = "set_host_disk_layout", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.SetHostDiskLayout")
    @ResponseWrapper(localName = "set_host_disk_layoutResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.SetHostDiskLayoutResponse")
    public void setHostDiskLayout(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_id", targetNamespace = "http://ca.com/")
        long scenarioId,
        @WebParam(name = "disk_layout", targetNamespace = "http://ca.com/")
        String diskLayout,
        @WebParam(name = "host_index", targetNamespace = "http://ca.com/")
        long hostIndex,
        @WebParam(name = "set_host_disk_layoutResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> setHostDiskLayoutResult,
        @WebParam(name = "set_result", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> setResult,
        @WebParam(name = "async_id", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<BigInteger> asyncId,
        @WebParam(name = "err_messages", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> errMessages);

    /**
     * 
     * @param scenarioId
     * @param hostIndex
     * @param errMessages
     * @param sessionId
     * @param vmStartingReason
     * @param checkP2VScenarioStateResult
     * @param isRunReverse
     * @param asyncResId
     */
    @WebMethod(operationName = "check_p2v_scenario_state", action = "http://ca.com/check_p2v_scenario_state")
    @RequestWrapper(localName = "check_p2v_scenario_state", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CheckP2VScenarioState")
    @ResponseWrapper(localName = "check_p2v_scenario_stateResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CheckP2VScenarioStateResponse")
    public void checkP2VScenarioState(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_id", targetNamespace = "http://ca.com/")
        long scenarioId,
        @WebParam(name = "host_index", targetNamespace = "http://ca.com/")
        long hostIndex,
        @WebParam(name = "check_p2v_scenario_stateResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> checkP2VScenarioStateResult,
        @WebParam(name = "is_run_reverse", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> isRunReverse,
        @WebParam(name = "vm_starting_reason", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Short> vmStartingReason,
        @WebParam(name = "async_res_id", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<BigInteger> asyncResId,
        @WebParam(name = "err_messages", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> errMessages);

    /**
     * 
     * @param sessId
     * @param asyncId
     * @param scenId
     * @param babSuspendReplicationResult
     * @param timeout
     * @param replica
     */
    @WebMethod(operationName = "bab_suspend_replication", action = "http://ca.com/bab_suspend_replication")
    @RequestWrapper(localName = "bab_suspend_replication", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.BabSuspendReplication")
    @ResponseWrapper(localName = "bab_suspend_replicationResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.BabSuspendReplicationResponse")
    public void babSuspendReplication(
        @WebParam(name = "sess_id", targetNamespace = "http://ca.com/")
        long sessId,
        @WebParam(name = "scen_id", targetNamespace = "http://ca.com/")
        long scenId,
        @WebParam(name = "replica", targetNamespace = "http://ca.com/")
        long replica,
        @WebParam(name = "timeout", targetNamespace = "http://ca.com/")
        long timeout,
        @WebParam(name = "bab_suspend_replicationResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> babSuspendReplicationResult,
        @WebParam(name = "async_id", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<BigInteger> asyncId);

    /**
     * 
     * @param sessId
     * @param asyncId
     * @param scenId
     * @param babStartArResult
     * @param timeout
     * @param replica
     */
    @WebMethod(operationName = "bab_start_ar", action = "http://ca.com/bab_start_ar")
    @RequestWrapper(localName = "bab_start_ar", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.BabStartAr")
    @ResponseWrapper(localName = "bab_start_arResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.BabStartArResponse")
    public void babStartAr(
        @WebParam(name = "sess_id", targetNamespace = "http://ca.com/")
        long sessId,
        @WebParam(name = "scen_id", targetNamespace = "http://ca.com/")
        long scenId,
        @WebParam(name = "replica", targetNamespace = "http://ca.com/")
        long replica,
        @WebParam(name = "timeout", targetNamespace = "http://ca.com/")
        long timeout,
        @WebParam(name = "bab_start_arResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> babStartArResult,
        @WebParam(name = "async_id", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<BigInteger> asyncId);

    /**
     * 
     * @param sessId
     * @param asyncId
     * @param scenId
     * @param saveSystemStateResult
     * @param timeout
     * @param replica
     */
    @WebMethod(operationName = "save_system_state", action = "http://ca.com/save_system_state")
    @RequestWrapper(localName = "save_system_state", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.SaveSystemState")
    @ResponseWrapper(localName = "save_system_stateResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.SaveSystemStateResponse")
    public void saveSystemState(
        @WebParam(name = "sess_id", targetNamespace = "http://ca.com/")
        long sessId,
        @WebParam(name = "scen_id", targetNamespace = "http://ca.com/")
        long scenId,
        @WebParam(name = "replica", targetNamespace = "http://ca.com/")
        long replica,
        @WebParam(name = "timeout", targetNamespace = "http://ca.com/")
        long timeout,
        @WebParam(name = "save_system_stateResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> saveSystemStateResult,
        @WebParam(name = "async_id", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<BigInteger> asyncId);

    /**
     * 
     * @param sessId
     * @param asyncId
     * @param unlockSnapshotsResult
     * @param scenId
     * @param snapshots
     * @param timeout
     * @param replica
     */
    @WebMethod(operationName = "unlock_snapshots", action = "http://ca.com/unlock_snapshots")
    @RequestWrapper(localName = "unlock_snapshots", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.UnlockSnapshots")
    @ResponseWrapper(localName = "unlock_snapshotsResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.UnlockSnapshotsResponse")
    public void unlockSnapshots(
        @WebParam(name = "sess_id", targetNamespace = "http://ca.com/")
        long sessId,
        @WebParam(name = "scen_id", targetNamespace = "http://ca.com/")
        long scenId,
        @WebParam(name = "replica", targetNamespace = "http://ca.com/")
        long replica,
        @WebParam(name = "snapshots", targetNamespace = "http://ca.com/")
        String snapshots,
        @WebParam(name = "timeout", targetNamespace = "http://ca.com/")
        long timeout,
        @WebParam(name = "unlock_snapshotsResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> unlockSnapshotsResult,
        @WebParam(name = "async_id", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<BigInteger> asyncId);

    /**
     * 
     * @param sessId
     * @param asyncId
     * @param mgrData
     * @param getCmdResultResult
     */
    @WebMethod(operationName = "get_cmd_result", action = "http://ca.com/get_cmd_result")
    @RequestWrapper(localName = "get_cmd_result", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetCmdResult")
    @ResponseWrapper(localName = "get_cmd_resultResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetCmdResultResponse")
    public void getCmdResult(
        @WebParam(name = "sess_id", targetNamespace = "http://ca.com/")
        long sessId,
        @WebParam(name = "async_id", targetNamespace = "http://ca.com/")
        BigInteger asyncId,
        @WebParam(name = "get_cmd_resultResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> getCmdResultResult,
        @WebParam(name = "mgr_data", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> mgrData);

    /**
     * 
     * @param addBabCredentialsResult
     * @param username
     * @param sessId
     * @param asyncId
     * @param scenId
     * @param password
     */
    @WebMethod(operationName = "add_bab_credentials", action = "http://ca.com/add_bab_credentials")
    @RequestWrapper(localName = "add_bab_credentials", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.AddBabCredentials")
    @ResponseWrapper(localName = "add_bab_credentialsResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.AddBabCredentialsResponse")
    public void addBabCredentials(
        @WebParam(name = "sess_id", targetNamespace = "http://ca.com/")
        long sessId,
        @WebParam(name = "scen_id", targetNamespace = "http://ca.com/")
        long scenId,
        @WebParam(name = "username", targetNamespace = "http://ca.com/")
        String username,
        @WebParam(name = "password", targetNamespace = "http://ca.com/")
        String password,
        @WebParam(name = "add_bab_credentialsResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> addBabCredentialsResult,
        @WebParam(name = "async_id", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<BigInteger> asyncId);

    /**
     * 
     * @param sessId
     * @param scenId
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "is_bab_credentials", action = "http://ca.com/is_bab_credentials")
    @WebResult(name = "is_bab_credentialsResult", targetNamespace = "http://ca.com/")
    @RequestWrapper(localName = "is_bab_credentials", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.IsBabCredentials")
    @ResponseWrapper(localName = "is_bab_credentialsResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.IsBabCredentialsResponse")
    public boolean isBabCredentials(
        @WebParam(name = "sess_id", targetNamespace = "http://ca.com/")
        long sessId,
        @WebParam(name = "scen_id", targetNamespace = "http://ca.com/")
        long scenId);

    /**
     * 
     * @param username
     * @param errMessages
     * @param sessionId
     * @param destPath
     * @param domain
     * @param serverName
     * @param password
     * @param retrieveD2DConfigResult
     */
    @WebMethod(operationName = "retrieve_d2d_config", action = "http://ca.com/retrieve_d2d_config")
    @RequestWrapper(localName = "retrieve_d2d_config", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.RetrieveD2DConfig")
    @ResponseWrapper(localName = "retrieve_d2d_configResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.RetrieveD2DConfigResponse")
    public void retrieveD2DConfig(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "server_name", targetNamespace = "http://ca.com/")
        String serverName,
        @WebParam(name = "username", targetNamespace = "http://ca.com/")
        String username,
        @WebParam(name = "password", targetNamespace = "http://ca.com/")
        String password,
        @WebParam(name = "domain", targetNamespace = "http://ca.com/")
        String domain,
        @WebParam(name = "retrieve_d2d_configResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> retrieveD2DConfigResult,
        @WebParam(name = "dest_path", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> destPath,
        @WebParam(name = "err_messages", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> errMessages);

    /**
     * 
     * @param centralAppConfig
     * @param username
     * @param errMessages
     * @param sessionId
     * @param retrieveCentralAppConfigResult
     * @param domain
     * @param serverName
     * @param password
     * @param productType
     */
    @WebMethod(operationName = "retrieve_central_app_config", action = "http://ca.com/retrieve_central_app_config")
    @RequestWrapper(localName = "retrieve_central_app_config", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.RetrieveCentralAppConfig")
    @ResponseWrapper(localName = "retrieve_central_app_configResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.RetrieveCentralAppConfigResponse")
    public void retrieveCentralAppConfig(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "server_name", targetNamespace = "http://ca.com/")
        String serverName,
        @WebParam(name = "username", targetNamespace = "http://ca.com/")
        String username,
        @WebParam(name = "password", targetNamespace = "http://ca.com/")
        String password,
        @WebParam(name = "domain", targetNamespace = "http://ca.com/")
        String domain,
        @WebParam(name = "product_type", targetNamespace = "http://ca.com/")
        long productType,
        @WebParam(name = "retrieve_central_app_configResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> retrieveCentralAppConfigResult,
        @WebParam(name = "central_app_config", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> centralAppConfig,
        @WebParam(name = "err_messages", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> errMessages);

    /**
     * 
     * @param retrieveD2DVmBackupDestResult
     * @param errMessages
     * @param sessionId
     * @param vmBackupDestPathList
     * @param policyVmList
     */
    @WebMethod(operationName = "retrieve_d2d_vm_backup_dest", action = "http://ca.com/retrieve_d2d_vm_backup_dest")
    @RequestWrapper(localName = "retrieve_d2d_vm_backup_dest", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.RetrieveD2DVmBackupDest")
    @ResponseWrapper(localName = "retrieve_d2d_vm_backup_destResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.RetrieveD2DVmBackupDestResponse")
    public void retrieveD2DVmBackupDest(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "policy_vm_list", targetNamespace = "http://ca.com/")
        String policyVmList,
        @WebParam(name = "retrieve_d2d_vm_backup_destResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> retrieveD2DVmBackupDestResult,
        @WebParam(name = "vm_backup_dest_path_list", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> vmBackupDestPathList,
        @WebParam(name = "err_messages", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> errMessages);

    /**
     * 
     * @param scenarioId
     * @param replicaHostname
     * @param scenarioName
     * @param username
     * @param errMessages
     * @param sessionId
     * @param domain
     * @param serverName
     * @param password
     * @param createD2DIntgrScenarioResult
     */
    @WebMethod(operationName = "create_d2d_intgr_scenario", action = "http://ca.com/create_d2d_intgr_scenario")
    @RequestWrapper(localName = "create_d2d_intgr_scenario", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CreateD2DIntgrScenario")
    @ResponseWrapper(localName = "create_d2d_intgr_scenarioResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CreateD2DIntgrScenarioResponse")
    public void createD2DIntgrScenario(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "server_name", targetNamespace = "http://ca.com/")
        String serverName,
        @WebParam(name = "username", targetNamespace = "http://ca.com/")
        String username,
        @WebParam(name = "password", targetNamespace = "http://ca.com/")
        String password,
        @WebParam(name = "domain", targetNamespace = "http://ca.com/")
        String domain,
        @WebParam(name = "scenario_name", targetNamespace = "http://ca.com/")
        String scenarioName,
        @WebParam(name = "replica_hostname", targetNamespace = "http://ca.com/")
        String replicaHostname,
        @WebParam(name = "create_d2d_intgr_scenarioResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> createD2DIntgrScenarioResult,
        @WebParam(name = "scenario_id", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Long> scenarioId,
        @WebParam(name = "err_messages", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> errMessages);

    /**
     * 
     * @param hostIndex
     * @param sessionId
     * @param scenId
     * @param userName
     * @param domainName
     * @param password
     * @return
     *     returns java.math.BigInteger
     */
    @WebMethod(operationName = "add_credentials_ex2", action = "http://ca.com/add_credentials_ex2")
    @WebResult(name = "add_credentials_ex2Result", targetNamespace = "http://ca.com/")
    @RequestWrapper(localName = "add_credentials_ex2", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.AddCredentialsEx2")
    @ResponseWrapper(localName = "add_credentials_ex2Response", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.AddCredentialsEx2Response")
    public BigInteger addCredentialsEx2(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scen_id", targetNamespace = "http://ca.com/")
        long scenId,
        @WebParam(name = "host_index", targetNamespace = "http://ca.com/")
        long hostIndex,
        @WebParam(name = "user_name", targetNamespace = "http://ca.com/")
        String userName,
        @WebParam(name = "password", targetNamespace = "http://ca.com/")
        String password,
        @WebParam(name = "domain_name", targetNamespace = "http://ca.com/")
        String domainName);

    /**
     * 
     * @param replicaHostname
     * @param errMessages
     * @param serverName
     * @param password
     * @param productType
     * @param scenarioId
     * @param username
     * @param scenarioName
     * @param masterHostname
     * @param sessionId
     * @param extraDataList
     * @param createCentralIntrScenarioResult
     * @param domain
     */
    @WebMethod(operationName = "create_central_intr_scenario", action = "http://ca.com/create_central_intr_scenario")
    @RequestWrapper(localName = "create_central_intr_scenario", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CreateCentralIntrScenario")
    @ResponseWrapper(localName = "create_central_intr_scenarioResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CreateCentralIntrScenarioResponse")
    public void createCentralIntrScenario(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "server_name", targetNamespace = "http://ca.com/")
        String serverName,
        @WebParam(name = "username", targetNamespace = "http://ca.com/")
        String username,
        @WebParam(name = "password", targetNamespace = "http://ca.com/")
        String password,
        @WebParam(name = "domain", targetNamespace = "http://ca.com/")
        String domain,
        @WebParam(name = "scenario_name", targetNamespace = "http://ca.com/")
        String scenarioName,
        @WebParam(name = "master_hostname", targetNamespace = "http://ca.com/")
        String masterHostname,
        @WebParam(name = "replica_hostname", targetNamespace = "http://ca.com/")
        String replicaHostname,
        @WebParam(name = "product_type", targetNamespace = "http://ca.com/")
        long productType,
        @WebParam(name = "extra_data_list", targetNamespace = "http://ca.com/")
        String extraDataList,
        @WebParam(name = "create_central_intr_scenarioResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> createCentralIntrScenarioResult,
        @WebParam(name = "scenario_id", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Long> scenarioId,
        @WebParam(name = "err_messages", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> errMessages);

    /**
     * 
     * @param scenarioId
     * @param updateScenarioByVmUuidResult
     * @param username
     * @param errMessages
     * @param extraDataList
     * @param sessionId
     * @param domain
     * @param serverName
     * @param password
     */
    @WebMethod(operationName = "update_scenario_by_vm_uuid", action = "http://ca.com/update_scenario_by_vm_uuid")
    @RequestWrapper(localName = "update_scenario_by_vm_uuid", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.UpdateScenarioByVmUuid")
    @ResponseWrapper(localName = "update_scenario_by_vm_uuidResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.UpdateScenarioByVmUuidResponse")
    public void updateScenarioByVmUuid(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "server_name", targetNamespace = "http://ca.com/")
        String serverName,
        @WebParam(name = "username", targetNamespace = "http://ca.com/")
        String username,
        @WebParam(name = "password", targetNamespace = "http://ca.com/")
        String password,
        @WebParam(name = "domain", targetNamespace = "http://ca.com/")
        String domain,
        @WebParam(name = "scenario_id", targetNamespace = "http://ca.com/")
        long scenarioId,
        @WebParam(name = "extra_data_list", targetNamespace = "http://ca.com/")
        String extraDataList,
        @WebParam(name = "update_scenario_by_vm_uuidResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> updateScenarioByVmUuidResult,
        @WebParam(name = "err_messages", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> errMessages);

    /**
     * 
     * @param scenarioId
     * @param getD2DReplicationInfoInScenarioResult
     * @param errMessages
     * @param sessionId
     * @param backupVmList
     */
    @WebMethod(operationName = "get_d2d_replication_info_in_scenario", action = "http://ca.com/get_d2d_replication_info_in_scenario")
    @RequestWrapper(localName = "get_d2d_replication_info_in_scenario", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetD2DReplicationInfoInScenario")
    @ResponseWrapper(localName = "get_d2d_replication_info_in_scenarioResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetD2DReplicationInfoInScenarioResponse")
    public void getD2DReplicationInfoInScenario(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "scenario_id", targetNamespace = "http://ca.com/")
        long scenarioId,
        @WebParam(name = "get_d2d_replication_info_in_scenarioResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> getD2DReplicationInfoInScenarioResult,
        @WebParam(name = "backup_vm_list", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> backupVmList,
        @WebParam(name = "err_messages", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> errMessages);

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "get_common_defs", action = "http://ca.com/get_common_defs")
    @WebResult(name = "get_common_defsResult", targetNamespace = "http://ca.com/")
    @RequestWrapper(localName = "get_common_defs", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetCommonDefs")
    @ResponseWrapper(localName = "get_common_defsResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetCommonDefsResponse")
    public String getCommonDefs();

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "get_presentation_layer", action = "http://ca.com/get_presentation_layer")
    @WebResult(name = "get_presentation_layerResult", targetNamespace = "http://ca.com/")
    @RequestWrapper(localName = "get_presentation_layer", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetPresentationLayer")
    @ResponseWrapper(localName = "get_presentation_layerResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetPresentationLayerResponse")
    public String getPresentationLayer();

    /**
     * 
     * @param sessionId
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "get_host_statistics_schema", action = "http://ca.com/get_host_statistics_schema")
    @WebResult(name = "get_host_statistics_schemaResult", targetNamespace = "http://ca.com/")
    @RequestWrapper(localName = "get_host_statistics_schema", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetHostStatisticsSchema")
    @ResponseWrapper(localName = "get_host_statistics_schemaResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetHostStatisticsSchemaResponse")
    public String getHostStatisticsSchema(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId);

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "get_product_list", action = "http://ca.com/get_product_list")
    @WebResult(name = "get_product_listResult", targetNamespace = "http://ca.com/")
    @RequestWrapper(localName = "get_product_list", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetProductList")
    @ResponseWrapper(localName = "get_product_listResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetProductListResponse")
    public String getProductList();

    /**
     * 
     * @param schedulerXml
     * @param verbalPresentation
     * @param getSchedulerVerbalPresentationResult
     */
    @WebMethod(operationName = "get_scheduler_verbal_presentation", action = "http://ca.com/get_scheduler_verbal_presentation")
    @RequestWrapper(localName = "get_scheduler_verbal_presentation", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetSchedulerVerbalPresentation")
    @ResponseWrapper(localName = "get_scheduler_verbal_presentationResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetSchedulerVerbalPresentationResponse")
    public void getSchedulerVerbalPresentation(
        @WebParam(name = "scheduler_xml", targetNamespace = "http://ca.com/")
        String schedulerXml,
        @WebParam(name = "get_scheduler_verbal_presentationResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> getSchedulerVerbalPresentationResult,
        @WebParam(name = "verbal_presentation", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> verbalPresentation);

    /**
     * 
     * @param sessionId
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "get_scenario_groups", action = "http://ca.com/get_scenario_groups")
    @WebResult(name = "get_scenario_groupsResult", targetNamespace = "http://ca.com/")
    @RequestWrapper(localName = "get_scenario_groups", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetScenarioGroups")
    @ResponseWrapper(localName = "get_scenario_groupsResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.GetScenarioGroupsResponse")
    public String getScenarioGroups(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId);

    /**
     * 
     * @param groupType
     * @param groupName
     * @param sessId
     * @param createScenarioGroupResult
     * @param scenarioGroupData
     */
    @WebMethod(operationName = "create_scenario_group", action = "http://ca.com/create_scenario_group")
    @RequestWrapper(localName = "create_scenario_group", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CreateScenarioGroup")
    @ResponseWrapper(localName = "create_scenario_groupResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.CreateScenarioGroupResponse")
    public void createScenarioGroup(
        @WebParam(name = "sess_id", targetNamespace = "http://ca.com/")
        long sessId,
        @WebParam(name = "group_name", targetNamespace = "http://ca.com/")
        String groupName,
        @WebParam(name = "group_type", targetNamespace = "http://ca.com/")
        long groupType,
        @WebParam(name = "create_scenario_groupResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> createScenarioGroupResult,
        @WebParam(name = "scenario_group_data", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> scenarioGroupData);

    /**
     * 
     * @param groupId
     * @param saveScenarioGroupResult
     * @param sessionId
     * @param whyNotReason
     * @param groupData
     */
    @WebMethod(operationName = "save_scenario_group", action = "http://ca.com/save_scenario_group")
    @RequestWrapper(localName = "save_scenario_group", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.SaveScenarioGroup")
    @ResponseWrapper(localName = "save_scenario_groupResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.SaveScenarioGroupResponse")
    public void saveScenarioGroup(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "group_id", targetNamespace = "http://ca.com/")
        long groupId,
        @WebParam(name = "group_data", targetNamespace = "http://ca.com/", mode = WebParam.Mode.INOUT)
        Holder<String> groupData,
        @WebParam(name = "save_scenario_groupResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> saveScenarioGroupResult,
        @WebParam(name = "why_not_reason", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<String> whyNotReason);

    /**
     * 
     * @param saveGroupConfigureResult
     * @param groupId
     * @param sessionId
     * @param groupDataStr
     * @param signature
     */
    @WebMethod(operationName = "save_group_configure", action = "http://ca.com/save_group_configure")
    @RequestWrapper(localName = "save_group_configure", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.SaveGroupConfigure")
    @ResponseWrapper(localName = "save_group_configureResponse", targetNamespace = "http://ca.com/", className = "com.ca.arcserve.rha.service.SaveGroupConfigureResponse")
    public void saveGroupConfigure(
        @WebParam(name = "session_id", targetNamespace = "http://ca.com/")
        long sessionId,
        @WebParam(name = "group_id", targetNamespace = "http://ca.com/")
        long groupId,
        @WebParam(name = "group_data_str", targetNamespace = "http://ca.com/", mode = WebParam.Mode.INOUT)
        Holder<String> groupDataStr,
        @WebParam(name = "save_group_configureResult", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<Boolean> saveGroupConfigureResult,
        @WebParam(name = "signature", targetNamespace = "http://ca.com/", mode = WebParam.Mode.OUT)
        Holder<BigInteger> signature);

}
