
package com.ca.arcserve.rha.service;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "xosoapapi_c", targetNamespace = "http://ca.com/", wsdlLocation = "http://feigo01-rps:8088/ws_man/xosoapapi.asmx?wsdl")
public class XosoapapiC
    extends Service
{

    private final static URL XOSOAPAPIC_WSDL_LOCATION;
    private final static Logger logger = Logger.getLogger(com.ca.arcserve.rha.service.XosoapapiC.class.getName());
    private final static WebServiceException XOSOAPAPIC_EXCEPTION;
    private final static QName XOSOAPAPIC_QNAME = new QName("http://ca.com/", "xosoapapi_c");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            URL baseUrl;
            baseUrl = com.ca.arcserve.rha.service.XosoapapiC.class.getResource(".");
            url = new URL(baseUrl, "http://lijwe02-w2k8-02:8088/ws_man/xosoapapi.asmx?wsdl");
        } catch (MalformedURLException ex) {
            logger.warning("Failed to create URL for the wsdl Location: 'http://lijwe02-w2k8-02:8088/ws_man/xosoapapi.asmx?wsdl', retrying as a local file");
            logger.warning(ex.getMessage());
            e = new WebServiceException(ex);
        }
        XOSOAPAPIC_WSDL_LOCATION = url;
        XOSOAPAPIC_EXCEPTION = e;
    }

    public XosoapapiC() {
        super(__getWsdlLocation(), XOSOAPAPIC_QNAME);
    }

	public XosoapapiC(String wsdl) {
		super(getWSDLLocation(wsdl), new QName("http://ca.com/", "xosoapapi_c"));
	}

	private static URL getWSDLLocation(String wsdl) {
		try {
			URL baseUrl = XosoapapiC.class.getResource(".");
			return new URL(baseUrl, wsdl);
		} catch (MalformedURLException e) {
			logger.warning(e.getMessage());
		}
		return null;
	}

    public XosoapapiC(WebServiceFeature... features) {
        super(__getWsdlLocation(), XOSOAPAPIC_QNAME, features);
    }

    public XosoapapiC(URL wsdlLocation) {
        super(wsdlLocation, XOSOAPAPIC_QNAME);
    }

    public XosoapapiC(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, XOSOAPAPIC_QNAME, features);
    }

    public XosoapapiC(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public XosoapapiC(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns XosoapapiCSoap
     */
    @WebEndpoint(name = "xosoapapi_cSoap")
    public XosoapapiCSoap getXosoapapiCSoap() {
        return super.getPort(new QName("http://ca.com/", "xosoapapi_cSoap"), XosoapapiCSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns XosoapapiCSoap
     */
    @WebEndpoint(name = "xosoapapi_cSoap")
    public XosoapapiCSoap getXosoapapiCSoap(WebServiceFeature... features) {
        return super.getPort(new QName("http://ca.com/", "xosoapapi_cSoap"), XosoapapiCSoap.class, features);
    }

    private static URL __getWsdlLocation() {
        if (XOSOAPAPIC_EXCEPTION!= null) {
            throw XOSOAPAPIC_EXCEPTION;
        }
        return XOSOAPAPIC_WSDL_LOCATION;
    }

}
